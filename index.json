{"repository_name":"athena","body":"# Athena\n\n[![CI](https://github.com/athena-framework/athena/workflows/CI/badge.svg)](https://github.com/athena-framework/athena/actions?query=workflow%3ACI)\n[![Latest release](https://img.shields.io/github/release/athena-framework/athena.svg)](https://github.com/athena-framework/athena/releases)\n\nA web framework comprised of reusable, independent components.\n\n## Documentation\n\nEverything is documented in the [API Docs](https://athena-framework.github.io/athena/Athena/Routing.html).\n\n## Contributing\n\n1. Fork it (https://github.com/athena-framework/athena/fork)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [George Dietrich](https://github.com/blacksmoke16) - creator and maintainer\n","program":{"html_id":"athena/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/ACF","path":"ACF.html","kind":"alias","full_name":"ACF","name":"ACF","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Config","const":false,"constants":[{"id":"CONFIG_PATH_NAME","name":"CONFIG_PATH_NAME","value":"\"ATHENA_CONFIG_PATH\"","doc":"The name of the environment variable that stores the path to the configuration file.","summary":"<p>The name of the environment variable that stores the path to the configuration file.</p>"},{"id":"DEFAULT_CONFIG_PATH","name":"DEFAULT_CONFIG_PATH","value":"\"./athena.yml\"","doc":"The default path to the configuration file.","summary":"<p>The default path to the configuration file.</p>"},{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Config` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Config.html\">Athena::Config</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/ADI","path":"ADI.html","kind":"alias","full_name":"ADI","name":"ADI","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::DependencyInjection","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::DependencyInjection` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/DependencyInjection.html\">Athena::DependencyInjection</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/AED","path":"AED.html","kind":"alias","full_name":"AED","name":"AED","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::EventDispatcher","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::EventDispatcher` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/EventDispatcher.html\">Athena::EventDispatcher</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/ART","path":"ART.html","kind":"alias","full_name":"ART","name":"ART","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Routing","const":false,"constants":[{"id":"LOGGER","name":"LOGGER","value":"Log.for(\"athena.routing\")","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Routing` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Routing.html\">Athena::Routing</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/ASR","path":"ASR.html","kind":"alias","full_name":"ASR","name":"ASR","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Serializer","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Serializer` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Serializer.html\">Athena::Serializer</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/ASRA","path":"ASRA.html","kind":"alias","full_name":"ASRA","name":"ASRA","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Athena::Serializer::Annotations","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Convenience alias to make referencing `Athena::Serializer::Annotations` types easier.","summary":"<p>Convenience alias to make referencing <code><a href=\"Athena/Serializer/Annotations.html\">Athena::Serializer::Annotations</a></code> types easier.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena","path":"Athena.html","kind":"module","full_name":"Athena","name":"Athena","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ENV_NAME","name":"ENV_NAME","value":"\"ATHENA_ENV\"","doc":"The name of the environment variable used to determine Athena's current environment.","summary":"<p>The name of the environment variable used to determine Athena's current environment.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A web framework comprised of reusable, independent components.\n\nSee [Athena Framework](https://github.com/athena-framework) on Github.","summary":"<p>A web framework comprised of reusable, independent components.</p>","class_methods":[{"id":"environment:String-class-method","html_id":"environment:String-class-method","name":"environment","doc":"Returns the current environment Athena is in based on `ENV_NAME`.  Defaults to `development` if not defined.","summary":"<p>Returns the current environment Athena is in based on <code><a href=\"Athena.html#ENV_NAME\">ENV_NAME</a></code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"environment","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"ENV[ENV_NAME]? || \"development\""}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Config","path":"Athena/Config.html","kind":"module","full_name":"Athena::Config","name":"Config","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"CONFIG_PATH_NAME","name":"CONFIG_PATH_NAME","value":"\"ATHENA_CONFIG_PATH\"","doc":"The name of the environment variable that stores the path to the configuration file.","summary":"<p>The name of the environment variable that stores the path to the configuration file.</p>"},{"id":"DEFAULT_CONFIG_PATH","name":"DEFAULT_CONFIG_PATH","value":"\"./athena.yml\"","doc":"The default path to the configuration file.","summary":"<p>The default path to the configuration file.</p>"},{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"Athena's Config component contains common types for configuring a component.\n\nCurrently the two primary types are `ACF::Base`, and `ACF::ConfigurationResolver`. `ACF::Base` represents the structure of Athena's YAML configuration file.\n`ACF::ConfigurationResolver` allows resolving the configuration for a given component within a service.  See each specific type for more detailed information.","summary":"<p>Athena's Config component contains common types for configuring a component.</p>","class_methods":[{"id":"config-class-method","html_id":"config-class-method","name":"config","doc":"Returns the `ACF::Base` object instantiated from the configuration file located at `.config_path`.\n\nThe contents of the configuration file are included into the binary at compile time so that the file itself\ndoes not need to be present for the binary to run.  The configuration string is not processed until `.config` is called for the first time\nso that in the future it will respect ENV vars for the environment the binary is in.\n\nTODO: Handle resolving ENV vars and DI parameters within the configuration file.","summary":"<p>Returns the <code><a href=\"../Athena/Config/Base.html\">ACF::Base</a></code> object instantiated from the configuration file located at <code><a href=\"../Athena/Config.html#config_path:String-class-method\">.config_path</a></code>.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@config).nil?\n  @@config = (ACF.load)\nelse\n  value\nend"}},{"id":"config_path:String-class-method","html_id":"config_path:String-class-method","name":"config_path","doc":"Returns the current path that the configuration file is located at.\n\nFalls back on `DEFAULT_CONFIG_PATH` if a `ATHENA_CONFIG_PATH` ENV variable is not defined.","summary":"<p>Returns the current path that the configuration file is located at.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"config_path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"ENV[CONFIG_PATH_NAME]? || DEFAULT_CONFIG_PATH"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Config/Base","path":"Athena/Config/Base.html","kind":"struct","full_name":"Athena::Config::Base","name":"Base","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Config","kind":"module","full_name":"Athena::Config","name":"Config"},"doc":"Base config type that wraps the `Athena` configuration file.\n\nComponents may add their own `ACF::Configuration` types to `self` to allow configuring that specific component.\n\n```\n# Define a custom configuration type.\n# Additional configuration types may be nested.\nstruct SomeConfig\n  include ACF::Configuration\n\n  # Defines a required configuration property.\n  # Optional properties can be made nilable or given a default value.\n  getter api_key : String\nend\n\n# Reopen the base type to add our custom configuration type.\nstruct Athena::Config::Base\n  getter some_config : SomeConfig\nend\n```\n\n`ACF::Base`'s YAML representation now looks like:\n```yaml\n---\nsome_config:\n  api_key: API_KEY\n```","summary":"<p>Base config type that wraps the <code><a href=\"../../Athena.html\">Athena</a></code> configuration file.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"routing:Athena::Routing::Config-instance-method","html_id":"routing:Athena::Routing::Config-instance-method","name":"routing","doc":"All configuration related to the `ART` component.","summary":"<p>All configuration related to the <code><a href=\"../../ART.html\">ART</a></code> component.</p>","abstract":false,"args":[],"args_string":" : Athena::Routing::Config","source_link":null,"def":{"name":"routing","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Routing::Config","visibility":"Public","body":"@routing"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Config/Configuration","path":"Athena/Config/Configuration.html","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Config/Base","kind":"struct","full_name":"Athena::Config::Base","name":"Base"},{"html_id":"athena/Athena/Routing/Config","kind":"struct","full_name":"Athena::Routing::Config","name":"Config"},{"html_id":"athena/Athena/Routing/Config/CORS","kind":"struct","full_name":"Athena::Routing::Config::CORS","name":"CORS"}],"namespace":{"html_id":"athena/Athena/Config","kind":"module","full_name":"Athena::Config","name":"Config"},"doc":"Helper mixin that includes the modules and defines the methods required a configuration.\n\nIncludes `YAML::Serializable` for handling deserializing the configuration file into a `ACF::Base` and `YAML::Serializable::Strict` to prevent unused/undefined configurations within the file.\n\nSee `ACF::Base` for more information on defining custom configuration types.","summary":"<p>Helper mixin that includes the modules and defines the methods required a configuration.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Config/ConfigurationResolver","path":"Athena/Config/ConfigurationResolver.html","kind":"struct","full_name":"Athena::Config::ConfigurationResolver","name":"ConfigurationResolver","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Config/ConfigurationResolverInterface","kind":"module","full_name":"Athena::Config::ConfigurationResolverInterface","name":"ConfigurationResolverInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Config/ConfigurationResolverInterface","kind":"module","full_name":"Athena::Config::ConfigurationResolverInterface","name":"ConfigurationResolverInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Config","kind":"module","full_name":"Athena::Config","name":"Config"},"doc":"See `Athena::Config::ConfigurationResolverInterface`.","summary":"<p>See <code><a href=\"../../Athena/Config/ConfigurationResolverInterface.html\">Athena::Config::ConfigurationResolverInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"resolve(_type:Athena::Routing::Config::CORS.class):ART::Config::CORS?-instance-method","html_id":"resolve(_type:Athena::Routing::Config::CORS.class):ART::Config::CORS?-instance-method","name":"resolve","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Athena::Routing::Config::CORS.class"}],"args_string":"(_type : <span class=\"t\">Athena</span><span class=\"t\">::</span><span class=\"t\">Routing</span><span class=\"t\">::</span><span class=\"t\">Config</span><span class=\"t\">::</span><span class=\"t\">CORS</span>.<span class=\"k\">class</span>) : ART::Config::CORS?","source_link":null,"def":{"name":"resolve","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Athena::Routing::Config::CORS.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Config::CORS | ::Nil","visibility":"Public","body":"base.routing.cors"}},{"id":"resolve(_type:_)-instance-method","html_id":"resolve(_type:_)-instance-method","name":"resolve","doc":"Resolves the configuration object for the given *_type*.\n\nRaises a `NotImplementedError` if no `#resolve` method exists for the given *_type*.","summary":"<p>Resolves the configuration object for the given <em>_type</em>.</p>","abstract":false,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"_"}],"args_string":"(_type : _)","source_link":null,"def":{"name":"resolve","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NotImplementedError.new(\"Unable to resolve configuration for type '#{_type}'\"))"}},{"id":"resolve:ACF::Base-instance-method","html_id":"resolve:ACF::Base-instance-method","name":"resolve","doc":"Returns the `ACF::Base` configuration object.","summary":"<p>Returns the <code><a href=\"../../Athena/Config/Base.html\">ACF::Base</a></code> configuration object.</p>","abstract":false,"args":[],"args_string":" : ACF::Base","source_link":null,"def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ACF::Base","visibility":"Public","body":"base"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Config/ConfigurationResolverInterface","path":"Athena/Config/ConfigurationResolverInterface.html","kind":"module","full_name":"Athena::Config::ConfigurationResolverInterface","name":"ConfigurationResolverInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Config/ConfigurationResolver","kind":"struct","full_name":"Athena::Config::ConfigurationResolver","name":"ConfigurationResolver"}],"namespace":{"html_id":"athena/Athena/Config","kind":"module","full_name":"Athena::Config","name":"Config"},"doc":"A type that allows resolving a specific configuration object by type.  Can be reopened to be made into a service to allow resolving configurations within other services.\n\nComponent configurations that should be resolvable must reopen `self`\nand add a `#resolve` method with a type restriction thats returns the desired configuration.\n\n```\n# Define a custom configuration type.\n# Additional configuration types may be nested.\nstruct SomeConfig\n  include ACF::Configuration\n\n  # Defines a required configuration property.\n  # Optional properties can be made nilable or given a default value.\n  getter api_key : String\nend\n\n# Reopen ACF::Base to add our custom configuration type.\nstruct Athena::Config::Base\n  getter some_config : SomeConfig\nend\n\n# Reopen ConfigurationResolver to add a method that allows resolving the `SomeConfig` object.\n#\n# Attempting to resolve a configuration type that has not been added will result in a `NotImplementedError`.\nstruct Athena::Config::ConfigurationResolver\n  # :inherit:\n  def resolve(_type : SomeConfig.class) : SomeConfig\n    # A private `#base` helper method is defined which returns the `ACF::Base` instance.\n    base.some_config\n  end\nend\n\n# Assuming the YAML configuration file looks like:\n# ---\n# some_config:\n#  api_key: API_KEY\nACF::ConfigurationResolver.new.resolve(SomeConfig).api_key # => API_KEY\n```","summary":"<p>A type that allows resolving a specific configuration object by type.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"resolve(_type:_)-instance-method","html_id":"resolve(_type:_)-instance-method","name":"resolve","doc":"Resolves the configuration object for the given *_type*.\n\nRaises a `NotImplementedError` if no `#resolve` method exists for the given *_type*.","summary":"<p>Resolves the configuration object for the given <em>_type</em>.</p>","abstract":true,"args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"_"}],"args_string":"(_type : _)","source_link":null,"def":{"name":"resolve","args":[{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"resolve:ACF::Base-instance-method","html_id":"resolve:ACF::Base-instance-method","name":"resolve","doc":"Returns the `ACF::Base` configuration object.","summary":"<p>Returns the <code><a href=\"../../Athena/Config/Base.html\">ACF::Base</a></code> configuration object.</p>","abstract":true,"args":[],"args_string":" : ACF::Base","source_link":null,"def":{"name":"resolve","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ACF::Base","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/DependencyInjection","path":"Athena/DependencyInjection.html","kind":"module","full_name":"Athena::DependencyInjection","name":"DependencyInjection","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"Athena's Dependency Injection (DI) component, `ADI` for short, adds a service container layer to your project.  This useful objects, aka services, to be shared throughout the project.\nThese objects live in a special class called the `ADI::ServiceContainer` (SC).\n\nThe SC is lazily initialized on fibers; this allows the SC to be accessed anywhere within the project.  The `Athena::DependencyInjection.container` method will return the SC for the current fiber.\nSince the SC is defined on fibers, it allows for each fiber to have its own SC instance.  This can be useful for web frameworks as each request would have its own SC scoped to that request.\n\n* See `ADI::Register` for documentation on registering services.\n\nNOTE: It is highly recommended to use interfaces as opposed to concrete types when defining the initializers for both services and non-services.\nUsing interfaces allows changing the functionality of a type by just changing what service gets injected into it, such as via an alias.\nSee this [blog post](https://dev.to/blacksmoke16/dependency-injection-in-crystal-2d66#plug-and-play) for an example of this.","summary":"<p>Athena's Dependency Injection (DI) component, <code><a href=\"../ADI.html\">ADI</a></code> for short, adds a service container layer to your project.</p>","class_methods":[{"id":"container:ADI::ServiceContainer-class-method","html_id":"container:ADI::ServiceContainer-class-method","name":"container","doc":"Returns the `ADI::ServiceContainer` for the current fiber.","summary":"<p>Returns the <code><a href=\"../Athena/DependencyInjection/ServiceContainer.html\">ADI::ServiceContainer</a></code> for the current fiber.</p>","abstract":false,"args":[],"args_string":" : ADI::ServiceContainer","source_link":null,"def":{"name":"container","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ADI::ServiceContainer","visibility":"Public","body":"Fiber.current.container"}}],"constructors":[],"instance_methods":[],"macros":[{"id":"auto_configure(type,options)-macro","html_id":"auto_configure(type,options)-macro","name":"auto_configure","doc":"Applies the provided *options* to any registered service of the provided *type*.\n\nA common use case of this would be to apply a specific tag to all instances of an interface; thus preventing the need to manually apply the tag for each implementation.\nThis can be paired with `Athena::DependencyInjection.bind` to make working with tags easier.\n\nIt can also be used to set the `public` and `lazy` options.\n\n### Example\n\n```\nmodule ConfigInterface; end\n\n# Automatically apply the `\"config\"` tag to all instances of `ConfigInterface`.\nADI.auto_configure ConfigInterface, {tags: [\"config\"]}\n\n@[ADI::Register]\nrecord ConfigOne do\n  include ConfigInterface\nend\n\n@[ADI::Register]\nrecord ConfigTwo do\n  include ConfigInterface\nend\n\n# Options supplied on the annotation itself override the auto configured options.\n@[ADI::Register(tags: [] of String)]\nrecord ConfigThree do\n  include ConfigInterface\nend\n\n@[ADI::Register(_configs: \"!config\", public: true)]\nrecord ConfigClient, configs : Array(ConfigInterface)\n\nADI.container.config_client.configs # => [ConfigOne(), ConfigTwo()]\n```","summary":"<p>Applies the provided <em>options</em> to any registered service of the provided <em>type</em>.</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""}],"args_string":"(type, options)","source_link":null,"def":{"name":"auto_configure","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% AUTO_CONFIGURATIONS[type.resolve] = options %}\n\n  \n"}},{"id":"bind(key,value)-macro","html_id":"bind(key,value)-macro","name":"bind","doc":"Allows binding a *value* to a *key* in order to enable auto registration of that value.\n\nBindings allow scalar values, or those that could not otherwise be handled via [service aliases](./DependencyInjection/Register.html#aliasing-services), to be auto registered.\nThis allows those arguments to be defined once and reused, as opposed to using named arguments to manually specify them for each service.\n\nBindings can also be declared with a type restriction to allow taking the type restriction of the argument into account.\nTyped bindings are always checked first as the most specific type is always preferred.\nIf no typed bindings match the argument's type, then the last defined untyped bindings is used.\n\n### Example\n\n```\nmodule ValueInterface; end\n\n@[ADI::Register(_value: 1, name: \"value_one\")]\n@[ADI::Register(_value: 2, name: \"value_two\")]\n@[ADI::Register(_value: 3, name: \"value_three\")]\nrecord ValueService, value : Int32 do\n  include ValueInterface\nend\n\n# Untyped bindings\nADI.bind api_key, ENV[\"API_KEY\"]\nADI.bind config, {id: 12_i64, active: true}\nADI.bind static_value, 123\nADI.bind odd_values, [\"@value_one\", \"@value_three\"]\nADI.bind value_arr, [true, true, false]\n\n# Typed bindings\nADI.bind value_arr : Array(Int32), [1, 2, 3]\nADI.bind value_arr : Array(Float64), [1.0, 2.0, 3.0]\n\n@[ADI::Register(public: true)]\nrecord BindingClient,\n  api_key : String,\n  config : NamedTuple(id: Int64, active: Bool),\n  static_value : Int32,\n  odd_values : Array(ValueInterface)\n\n@[ADI::Register(public: true)]\nrecord IntArr, value_arr : Array(Int32)\n\n@[ADI::Register(public: true)]\nrecord FloatArr, value_arr : Array(Float64)\n\n@[ADI::Register(public: true)]\nrecord BoolArr, value_arr : Array(Bool)\n\nADI.container.binding_client # =>\n# BindingClient(\n#  @api_key=\"123ABC\",\n#  @config={id: 12, active: true},\n#  @static_value=123,\n#  @odd_values=[ValueService(@value=1), ValueService(@value=3)])\n\nADI.container.int_arr   # => IntArr(@value_arr=[1, 2, 3])\nADI.container.float_arr # => FloatArr(@value_arr=[1.0, 2.0, 3.0])\nADI.container.bool_arr  # => BoolArr(@value_arr=[true, true, false])\n```","summary":"<p>Allows binding a <em>value</em> to a <em>key</em> in order to enable auto registration of that value.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(key, value)","source_link":null,"def":{"name":"bind","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    \n{% if key.is_a?(TypeDeclaration) %}\n      {% name = key.var.id.stringify %}\n      {% type = key.type.resolve %}\n    {% else %}\n      {% name = key.id.stringify %}\n      {% type = Crystal::Macros::Nop %}\n    {% end %}\n\n\n    \n# TODO: Refactor this to ||= once https://github.com/crystal-lang/crystal/pull/9409 is released\n\n    \n{% if BINDINGS[name] == nil\n  BINDINGS[name] = {typed: [] of Nil, untyped: [] of Nil}\nend %}\n\n\n    \n{% if type == Crystal::Macros::Nop %}\n      {% BINDINGS[name][:untyped].unshift({value: value, type: type}) %}\n    {% else %}\n      {% BINDINGS[name][:typed].unshift({value: value, type: type}) %}\n    {% end %}\n\n  \n"}}],"types":[{"html_id":"athena/Athena/DependencyInjection/Inject","path":"Athena/DependencyInjection/Inject.html","kind":"annotation","full_name":"Athena::DependencyInjection::Inject","name":"Inject","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/DependencyInjection","kind":"module","full_name":"Athena::DependencyInjection","name":"DependencyInjection"},"doc":"Specifies which constructor should be used for injection.\n\n```\n@[ADI::Register(_value: 2, public: true)]\nclass SomeService\n  @active : Bool = false\n\n  def initialize(value : String, @active : Bool)\n    @value = value.to_i\n  end\n\n  @[ADI::Inject]\n  def initialize(@value : Int32); end\nend\n\nADI.container.some_service # => #<SomeService:0x7f51a77b1eb0 @active=false, @value=2>\nSomeService.new \"1\", true  # => #<SomeService:0x7f51a77b1e90 @active=true, @value=1>\n```\n\nWithout the `ADI::Inject` annotation, the first initializer would be used, which would fail since we are not providing a value for the `active` argument.\n`ADI::Inject` allows telling the service container that it should use the second constructor when registering this service.  This allows a constructor overload\nspecific to DI to be used while still allowing the type to be used outside of DI via other constructors.","summary":"<p>Specifies which constructor should be used for injection.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/DependencyInjection/Register","path":"Athena/DependencyInjection/Register.html","kind":"annotation","full_name":"Athena::DependencyInjection::Register","name":"Register","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/DependencyInjection","kind":"module","full_name":"Athena::DependencyInjection","name":"DependencyInjection"},"doc":"Registers a service based on the type the annotation is applied to.\n\nThe type of the service affects how it behaves within the container.  When a `struct` service is retrieved or injected into a type, it will be a copy of the one in the SC (passed by value).\nThis means that changes made to it in one type, will _NOT_ be reflected in other types.  A `class` service on the other hand will be a reference to the one in the SC.  This allows it\nto share state between services.\n\n## Optional Arguments\n\nIn most cases, the annotation can be applied without additional arguments.  However, the annotation accepts a handful of optional arguments to fine tune how the service is registered.\n\n* `name : String`- The name of the service.  Should be unique.  Defaults to the type's FQN snake cased.\n* `public : Bool` - If the service should be directly accessible from the container.  Defaults to `false`.\n* `public_alias : Bool` - If a service should be directly accessible from the container via an alias.  Defaults to `false`.\n* `lazy : Bool` - If the service should be lazily instantiated.  I.e. only instantiated when it is first accessed; either directly or as a dependency of another service.  Defaults to `true`.\n* `alias : T` - Injects `self` when this type is used as a type restriction.  See the Aliasing Services example for more information.\n* `tags : Array(String | NamedTuple(name: String, priority: Int32?))` - Tags that should be assigned to the service.  Defaults to an empty array.  See the [Tagging Services](./Register.html#tagging-services) example for more information.\n\n## Examples\n\n### Basic Usage\n\nThe simplest usage involves only applying the `ADI::Register` annotation to a type.  If the type does not have any arguments, then it is simply registered as a service as is.  If the type _does_ have arguments, then an attempt is made to register the service by automatically resolving dependencies based on type restrictions.\n\n```\n@[ADI::Register]\n# Register a service without any dependencies.\nstruct ShoutTransformer\n  def transform(value : String) : String\n    value.upcase\n  end\nend\n\n@[ADI::Register(public: true)]\n# The ShoutTransformer is injected based on the type restriction of the `transformer` argument.\nstruct SomeAPIClient\n  def initialize(@transformer : ShoutTransformer); end\n\n  def send(message : String)\n    message = @transformer.transform message\n\n    # ...\n  end\nend\n\nADI.container.some_api_client.send \"foo\" # => FOO\n```\n\n### Aliasing Services\n\nAn important part of DI is building against interfaces as opposed to concrete types.  This allows a type to depend upon abstractions rather than a specific implementation of the interface.\nOr in other words, prevents a singular implementation from being tightly coupled with another type.\n\nWe can use the `alias` argument when registering a service to tell the container that it should inject this service when a type restriction for the aliased service is found.\n\n```\n# Define an interface for our services to use.\nmodule TransformerInterface\n  abstract def transform(value : String) : String\nend\n\n@[ADI::Register(alias: TransformerInterface)]\n# Alias the `TransformerInterface` to this service.\nstruct ShoutTransformer\n  include TransformerInterface\n\n  def transform(value : String) : String\n    value.upcase\n  end\nend\n\n@[ADI::Register]\n# Define another transformer type.\nstruct ReverseTransformer\n  include TransformerInterface\n\n  def transform(value : String) : String\n    value.reverse\n  end\nend\n\n@[ADI::Register(public: true)]\n# The `ShoutTransformer` is injected because the `TransformerInterface` is aliased to the `ShoutTransformer`.\nstruct SomeAPIClient\n  def initialize(@transformer : TransformerInterface); end\n\n  def send(message : String)\n    message = @transformer.transform message\n\n    # ...\n  end\nend\n\nADI.container.some_api_client.send \"foo\" # => FOO\n```\n\nAny service that uses `TransformerInterface` as a dependency type restriction will get the `ShoutTransformer`.\nHowever, it is also possible to use a specific implementation while still building against the interface.  The name of the constructor argument is used in part to resolve the dependency.\n\n```\n@[ADI::Register(public: true)]\n# The `ReverseTransformer` is injected because the constructor argument's name matches the service name of `ReverseTransformer`.\nstruct SomeAPIClient\n  def initialize(reverse_transformer : TransformerInterface)\n    @transformer = reverse_transformer\n  end\n\n  def send(message : String)\n    message = @transformer.transform message\n\n    # ...\n  end\nend\n\nADI.container.some_api_client.send \"foo\" # => oof\n```\n\n### Scalar Arguments\n\nThe auto registration logic as shown in previous examples only works on service dependencies.  Scalar arguments, such as Arrays, Strings, NamedTuples, etc, must be defined manually.\nThis is achieved by using the argument's name prefixed with a `_` symbol as named arguments within the annotation.\n\n```\n@[ADI::Register(_shell: ENV[\"SHELL\"], _config: {id: 12_i64, active: true}, public: true)]\nstruct ScalarClient\n  def initialize(@shell : String, @config : NamedTuple(id: Int64, active: Bool)); end\nend\n\nADI.container.scalar_client # => ScalarClient(@config={id: 12, active: true}, @shell=\"/bin/bash\")\n```\nArrays can also include references to services by prefixing the name of the service with an `@` symbol.\n\n```\nmodule Interface; end\n\n@[ADI::Register]\nstruct One\n  include Interface\nend\n\n@[ADI::Register]\nstruct Two\n  include Interface\nend\n\n@[ADI::Register]\nstruct Three\n  include Interface\nend\n\n@[ADI::Register(_services: [\"@one\", \"@three\"], public: true)]\nstruct ArrayClient\n  def initialize(@services : Array(Interface)); end\nend\n\nADI.container.array_client # => ArrayClient(@services=[One(), Three()])\n```\n\nWhile scalar arguments cannot be auto registered by default, the `Athena::DependencyInjection.bind` macro can be used to support it.  For example: `ADI.bind shell, \"bash\"`.\nThis would now inject the string `\"bash\"` whenever an argument named `shell` is encountered.\n\n### Tagging Services\n\nServices can also be tagged.  Service tags allows another service to have all services with a specific tag injected as a dependency.\nA tag consists of a name, and additional metadata related to the tag.\nCurrently the only supported metadata value is `priority`, which controls the order in which the services are injected; the higher the priority\nthe sooner in the array it would be.  In the future support for custom tag metadata will be implemented.\n\nThe `Athena::DependencyInjection.auto_configure` macro may also be used to make working with tags easier.\n\n```\nPARTNER_TAG = \"partner\"\n\n@[ADI::Register(_id: 1, name: \"google\", tags: [{name: PARTNER_TAG, priority: 5}])]\n@[ADI::Register(_id: 2, name: \"facebook\", tags: [PARTNER_TAG])]\n@[ADI::Register(_id: 3, name: \"yahoo\", tags: [{name: \"partner\", priority: 10}])]\n@[ADI::Register(_id: 4, name: \"microsoft\", tags: [PARTNER_TAG])]\n# Register multiple services based on the same type.  Each service must give define a unique name.\nrecord FeedPartner, id : Int32\n\n@[ADI::Register(_services: \"!partner\", public: true)]\n# Inject all services with the `\"partner\"` tag into `self`.\nclass PartnerClient\n  def initialize(@services : Array(FeedPartner)); end\nend\n\nADI.container.partner_client # =>\n# #<PartnerClient:0x7f43c0a1ae60\n#  @services=\n#   [FeedPartner(@id=3, @name=\"Yahoo\"),\n#    FeedPartner(@id=1, @name=\"Google\"),\n#    FeedPartner(@id=2, @name=\"Facebook\"),\n#    FeedPartner(@id=4, @name=\"Microsoft\")]>\n```\n\nWhile tagged services cannot be injected automatically by default, the `Athena::DependencyInjection.bind` macro can be used to support it.  For example: `ADI.bind partners, \"!partner\"`.\nThis would now inject all services with the `partner` tagged when an argument named `partners` is encountered.\nA type restriction can also be added to the binding to allow reusing the name.  See the documentation for `Athena::DependencyInjection.bind` for an example.\n\n### Optional Services\n\nServices defined with a nillable type restriction are considered to be optional.  If no service could be resolved from the type, then `nil` is injected instead.\nSimilarly, if the argument has a default value, that value would be used instead.\n\n```\nstruct OptionalMissingService\nend\n\n@[ADI::Register]\nstruct OptionalExistingService\nend\n\n@[ADI::Register(public: true)]\nclass OptionalClient\n  getter service_missing, service_existing, service_default\n\n  def initialize(\n    @service_missing : OptionalMissingService?,\n    @service_existing : OptionalExistingService?,\n    @service_default : OptionalMissingService | Int32 | Nil = 12\n  ); end\nend\n\nADI.container.optional_client\n# #<OptionalClient:0x7fe7de7cdf40\n#  @service_default=12,\n#  @service_existing=OptionalExistingService(),\n#  @service_missing=nil>\n```\n\n### Generic Services\n\nGeneric arguments can be provided as positional arguments within the `ADI::Register` annotation.\n\nNOTE: Services based on generic types _MUST_ explicitly provide a name via the `name` field within the `ADI::Register` annotation\nsince there wouldn't be a way to tell them apart from the class name alone.\n\n```\n@[ADI::Register(Int32, Bool, name: \"int_service\", public: true)]\n@[ADI::Register(Float64, Bool, name: \"float_service\", public: true)]\nstruct GenericService(T, B)\n  def type\n    {T, B}\n  end\nend\n\nADI.container.int_service.type   # => {Int32, Bool}\nADI.container.float_service.type # => {Float64, Bool}\n```","summary":"<p>Registers a service based on the type the annotation is applied to.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/DependencyInjection/ServiceContainer","path":"Athena/DependencyInjection/ServiceContainer.html","kind":"class","full_name":"Athena::DependencyInjection::ServiceContainer","name":"ServiceContainer","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/DependencyInjection","kind":"module","full_name":"Athena::DependencyInjection","name":"DependencyInjection"},"doc":"Where the instantiated services live.\n\nIf a service is public, a getter based on the service's name as well as its type is defined.  Otherwise, services are only available via constructor DI.\n\nTODO: Reduce the amount of duplication when [this issue](https://github.com/crystal-lang/crystal/pull/9091) is resolved.","summary":"<p>Where the instantiated services live.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Initializes the container.  Auto registering annotated services.","summary":"<p>Initializes the container.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"athena_routing_route_handler-instance-method","html_id":"athena_routing_route_handler-instance-method","name":"athena_routing_route_handler","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"athena_routing_route_handler","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @athena_routing_route_handler).nil?\n  @athena_routing_route_handler = (Athena::Routing::RouteHandler.new(event_dispatcher, request_store, athena_routing_arguments_argument_resolver))\nelse\n  value\nend"}},{"id":"get(service:Athena::Routing::RequestStore.class):Athena::Routing::RequestStore-instance-method","html_id":"get(service:Athena::Routing::RequestStore.class):Athena::Routing::RequestStore-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":"Athena::Routing::RequestStore.class"}],"args_string":"(service : <span class=\"t\">Athena</span><span class=\"t\">::</span><span class=\"t\">Routing</span><span class=\"t\">::</span><span class=\"t\">RequestStore</span>.<span class=\"k\">class</span>) : Athena::Routing::RequestStore","source_link":null,"def":{"name":"get","args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":"Athena::Routing::RequestStore.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Routing::RequestStore","visibility":"Public","body":"request_store"}},{"id":"get(service:Athena::Routing::RouteHandler.class):Athena::Routing::RouteHandler-instance-method","html_id":"get(service:Athena::Routing::RouteHandler.class):Athena::Routing::RouteHandler-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":"Athena::Routing::RouteHandler.class"}],"args_string":"(service : <span class=\"t\">Athena</span><span class=\"t\">::</span><span class=\"t\">Routing</span><span class=\"t\">::</span><span class=\"t\">RouteHandler</span>.<span class=\"k\">class</span>) : Athena::Routing::RouteHandler","source_link":null,"def":{"name":"get","args":[{"name":"service","doc":null,"default_value":"","external_name":"service","restriction":"Athena::Routing::RouteHandler.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Routing::RouteHandler","visibility":"Public","body":"athena_routing_route_handler"}},{"id":"request_store-instance-method","html_id":"request_store-instance-method","name":"request_store","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"request_store","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @request_store).nil?\n  @request_store = (Athena::Routing::RequestStore.new)\nelse\n  value\nend"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/EventDispatcher","path":"Athena/EventDispatcher.html","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"A [Mediator](https://en.wikipedia.org/wiki/Mediator_pattern) and [Observer](https://en.wikipedia.org/wiki/Observer_pattern)\npattern event library.\n\n`Athena::EventDispatcher` or, `AED` for short, allows defining instance methods on `EventListenerInterface` types (observers) that will be executed\nwhen an `Event` is dispatched via the `EventDispatcher` (mediator).\n\nAll events are registered with an `EventDispatcher` at compile time.  While the recommended usage involves using\nlistener structs, it is also possible to add/remove event handlers dynamically at runtime.  The `EventDispatcher` has two constructors;\none that supports manual or DI initialization, while the other auto registers listeners at compile time via macros.\n\nAn event is nothing more than a `class` that, optionally, contains stateful information about the event.  For example a `HttpOnRequest` event would\ncontain a reference to the `HTTP::Request` object so that the listeners have access to request data.  Similarly, a `HttpOnResponse` event\nwould contain a reference to the `HTTP::Server::Response` object so that the response body/headers/status can be mutated by the listeners.\n\nSince events and listeners are registered at compile time (via macros or DI), listeners can be added to a project seamlessly without updating any configuration, or having\nto instantiate a `HTTP::Handler` object and add it to an array for example.  The main benefit of this is that an external shard that defines a listener could\nbe installed and would inherently be picked up and used by `Athena::EventDispatcher`; thus making an application easily extendable.\n\n### Example\n```\n# Create a custom event.\nclass ExceptionEvent < AED::Event\n  property? handled : Bool = false\n\n  getter exception : Exception\n\n  # Events can contain stateful information related to the event.\n  def initialize(@exception : Exception); end\nend\n\n# Create a listener.\nstruct ExceptionListener\n  include AED::EventListenerInterface\n\n  # Define what events `self` is listening on as well as their priorities.\n  #\n  # The higher the priority the sooner that specific listener is executed.\n  def self.subscribed_events : AED::SubscribedEvents\n    AED::SubscribedEvents{\n      ExceptionEvent => 0,\n    }\n  end\n\n  # Listener handler's are `#call` instance methods restricted to the type of event it should handle.\n  #\n  # Multiple methods can be defined to handle multiple events within the same listener.\n  #\n  # Event handler's also have access to the dispatcher instance itself.\n  def call(event : ExceptionEvent, dispatcher : AED::EventDispatcherInterface) : Nil\n    # Do something with the `ExceptionEvent` and/or dispatcher\n    event.handled = true\n  end\nend\n\n# New up an `AED::EventDispatcher`, using `AED::EventDispatcher#new`.\n# This overload automatically registers listeners using macros.\n#\n# See also `AED::EventDispatcher#new(listeners : Array(EventListenerInterface))` for a more manual/DI friendly initializer.\ndispatcher = AED::EventDispatcher.new\n\n# Instantiate our custom event.\nevent = ExceptionEvent.new ArgumentError.new(\"Test exception\")\n\n# All events are dispatched via an `AED::EventDispatcher` instance.\n#\n# Similarly, all listeners are registered with it.\ndispatcher.dispatch event\n\nevent.handled # => true\n\n# Additional methods also exist on the dispatcher, such as:\n# * Adding/removing listeners at runtime\n# * Checking the priority of a listener\n# * Getting an array of listeners for a given event\n# * Checking if there is a listener(s) listening on a given `AED::Event`\ndispatcher.has_listeners? ExceptionEvent # => true\n```","summary":"<p>A <a href=\"https://en.wikipedia.org/wiki/Mediator_pattern\" target=\"_blank\">Mediator</a> and <a href=\"https://en.wikipedia.org/wiki/Observer_pattern\" target=\"_blank\">Observer</a> pattern event library.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"create_listener(event,&)-macro","html_id":"create_listener(event,&amp;)-macro","name":"create_listener","doc":"Creates a listener for the provided *event*.  The macro's block is used as the listener.\n\nThe macro *block* implicitly yields `event` and `dispatcher`.\n\n```\nlistener = AED.create_listener(SampleEvent) do\n  # Do something with the event.\n  event.some_method\n\n  # A reference to the `AED::EventDispatcherInterface` is also provided.\n  dispatcher.dispatch FakeEvent.new\nend\n```","summary":"<p>Creates a listener for the provided <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":""}],"args_string":"(event, &)","source_link":null,"def":{"name":"create_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"    Proc(AED::Event, AED::EventDispatcherInterface, Nil).new do |event, dispatcher|\n      Proc(\n{{ event.id }}\n, AED::EventDispatcherInterface, Nil).new do |event, dispatcher|\n        \n{{ yield }}\n\n      \nend.call \nevent.as(\n{{ event }}\n), dispatcher\n    \nend\n  \n"}}],"types":[{"html_id":"athena/Athena/EventDispatcher/Event","path":"Athena/EventDispatcher/Event.html","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"}],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Events/Exception","kind":"class","full_name":"Athena::Routing::Events::Exception","name":"Exception"},{"html_id":"athena/Athena/Routing/Events/Request","kind":"class","full_name":"Athena::Routing::Events::Request","name":"Request"},{"html_id":"athena/Athena/Routing/Events/Response","kind":"class","full_name":"Athena::Routing::Events::Response","name":"Response"},{"html_id":"athena/Athena/Routing/Events/Terminate","kind":"class","full_name":"Athena::Routing::Events::Terminate","name":"Terminate"},{"html_id":"athena/Athena/Routing/Events/View","kind":"class","full_name":"Athena::Routing::Events::View","name":"View"}],"including_types":[],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"Base `class` for all event objects.\n\nThis event does not contain any event data and\ncan be used by events that do not require any state.\n\nCan be inherited from to include information about the event.\n\nNOTE: If one event inherits from another, and both are being used within a listener; the child event's handler would be executed twice since its type is compatible with the parent.\nEither use composition versus inheritance for sharing common logic between events, or add an explicit type check in the listener.\n\n```\n# Define a custom event\nclass ExceptionEvent < AED::Event\n  getter exception : Exception\n\n  def initialize(@exception : Exception); end\nend\n\n# Using Event on its own\ndispatcher.dispatch AED::Event.new\n\n# Dispatch a custom event\nexception = ArgumentError.new \"Value cannot be negative\"\ndispatcher.dispatch ExceptionEvent.new exception\n```","summary":"<p>Base <code>class</code> for all event objects.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/EventDispatcher","path":"Athena/EventDispatcher/EventDispatcher.html","kind":"class","full_name":"Athena::EventDispatcher::EventDispatcher","name":"EventDispatcher","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/EventDispatcherInterface","kind":"module","full_name":"Athena::EventDispatcher::EventDispatcherInterface","name":"EventDispatcherInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/EventDispatcherInterface","kind":"module","full_name":"Athena::EventDispatcher::EventDispatcherInterface","name":"EventDispatcherInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(listeners:Array(AED::EventListenerInterface))-class-method","html_id":"new(listeners:Array(AED::EventListenerInterface))-class-method","name":"new","doc":"Initializes `self` with the provided *listeners*.\n\nThis overload is mainly intended for DI or to manually\nconfigure the listeners that should be listened on.","summary":"<p>Initializes <code>self</code> with the provided <em>listeners</em>.</p>","abstract":false,"args":[{"name":"listeners","doc":null,"default_value":"","external_name":"listeners","restriction":"Array(AED::EventListenerInterface)"}],"args_string":"(listeners : Array(AED::EventListenerInterface))","source_link":null,"def":{"name":"new","args":[{"name":"listeners","doc":null,"default_value":"","external_name":"listeners","restriction":"Array(AED::EventListenerInterface)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(listeners)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":"Initializes `self` automatically via macros.  This overload is mainly intended for\nuse cases where the listener types don't have any dependencies, and/or all listeners should listen.","summary":"<p>Initializes <code>self</code> automatically via macros.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new({{ AED::EventListenerInterface.includers.map do |listener|\n  \"#{listener.id}.new\".id\nend }})"}}],"instance_methods":[{"id":"add_listener(event:AED::Event.class,listener:AED::EventListenerType,priority:Int32=0):Nil-instance-method","html_id":"add_listener(event:AED::Event.class,listener:AED::EventListenerType,priority:Int32=0):Nil-instance-method","name":"add_listener","doc":"Adds the provided *listener* as a listener for *event*, optionally with the provided *priority*.","summary":"<p>Adds the provided <em>listener</em> as a listener for <em>event</em>, optionally with the provided <em>priority</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"},{"name":"priority","doc":null,"default_value":"0","external_name":"priority","restriction":"Int32"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : AED::EventListenerType, priority : Int32 = <span class=\"n\">0</span>) : Nil","source_link":null,"def":{"name":"add_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"},{"name":"priority","doc":null,"default_value":"0","external_name":"priority","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@events[event] << (AED::EventListener.new(listener, priority))\n@sorted.delete(event)\n"}},{"id":"dispatch(event:AED::Event):Nil-instance-method","html_id":"dispatch(event:AED::Event):Nil-instance-method","name":"dispatch","doc":"Dispatches *event* to all listeners registered on `self` that are listening on that event.\n\n`AED::EventListenerInterface`'s are executed based on the listener's priority; the higher the value the sooner it gets executed.","summary":"<p>Dispatches <em>event</em> to all listeners registered on <code>self</code> that are listening on that event.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"}],"args_string":"(event : AED::Event) : Nil","source_link":null,"def":{"name":"dispatch","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(listeners(event.class)).each do |listener|\n  if event.is_a?(AED::StoppableEvent) && (!event.propagate?)\n    return\n  end\n  listener.call(event, self)\nend"}},{"id":"has_listeners?(event:AED::Event.class?=nil):Bool-instance-method","html_id":"has_listeners?(event:AED::Event.class?=nil):Bool-instance-method","name":"has_listeners?","doc":"Returns `true` if there are any listeners listening on the provided *event*.\nIf no *event* is provided, returns `true` if there are *ANY* listeners registered on `self`.","summary":"<p>Returns <code>true</code> if there are any listeners listening on the provided <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"nil","external_name":"event","restriction":"AED::Event.class | Nil"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>? = <span class=\"n\">nil</span>) : Bool","source_link":null,"def":{"name":"has_listeners?","args":[{"name":"event","doc":null,"default_value":"nil","external_name":"event","restriction":"AED::Event.class | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if event\n  return !@events[event].empty?\nend\n@events.values.any? do |listener_arr|\n  !listener_arr.empty?\nend\n"}},{"id":"listener_priority(event:AED::Event.class,listener:AED::EventListenerInterface.class):Int32?-instance-method","html_id":"listener_priority(event:AED::Event.class,listener:AED::EventListenerInterface.class):Int32?-instance-method","name":"listener_priority","doc":"Returns the *listener* priority for the provided *event*.  Returns `nil` if no listeners are listening on the provided *event* or\nif *listener* isn't listening on *event*.","summary":"<p>Returns the <em>listener</em> priority for the provided <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">EventListenerInterface</span>.<span class=\"k\">class</span>) : Int32?","source_link":null,"def":{"name":"listener_priority","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":"if has_listeners?(event)\nelse\n  return nil\nend\n@events[event].find do |__arg0|\n  __arg0.listener.class == listener\nend.try(&.priority)\n"}},{"id":"listeners(event:AED::Event.class?=nil):Array(AED::EventListener)-instance-method","html_id":"listeners(event:AED::Event.class?=nil):Array(AED::EventListener)-instance-method","name":"listeners","doc":"Returns the listeners listening on the provided *event*.\nIf no *event* is provided, returns all listeners.","summary":"<p>Returns the listeners listening on the provided <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"nil","external_name":"event","restriction":"AED::Event.class | Nil"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>? = <span class=\"n\">nil</span>) : Array(AED::EventListener)","source_link":null,"def":{"name":"listeners","args":[{"name":"event","doc":null,"default_value":"nil","external_name":"event","restriction":"AED::Event.class | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AED::EventListener)","visibility":"Public","body":"if event\n  if @sorted.includes?(event)\n  else\n    sort(event)\n  end\n  return @events[event]\nend\n@events.each do |ev, _listeners|\n  if @sorted.includes?(event)\n  else\n    sort(ev)\n  end\nend\n@events.values.flatten\n"}},{"id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerInterface.class):Nil-instance-method","html_id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerInterface.class):Nil-instance-method","name":"remove_listener","doc":"Removes the provided *event* from the provided *listener*.","summary":"<p>Removes the provided <em>event</em> from the provided <em>listener</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">EventListenerInterface</span>.<span class=\"k\">class</span>) : Nil","source_link":null,"def":{"name":"remove_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@events[event].reject! do |__arg2|\n  __arg2.listener.class == listener\nend"}},{"id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerType):Nil-instance-method","html_id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerType):Nil-instance-method","name":"remove_listener","doc":"Removes the provided *event* from the provided *listener*.","summary":"<p>Removes the provided <em>event</em> from the provided <em>listener</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : AED::EventListenerType) : Nil","source_link":null,"def":{"name":"remove_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@events[event].reject!(&.==(listener))"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/EventDispatcherInterface","path":"Athena/EventDispatcher/EventDispatcherInterface.html","kind":"module","full_name":"Athena::EventDispatcher::EventDispatcherInterface","name":"EventDispatcherInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/EventDispatcher/EventDispatcher","kind":"class","full_name":"Athena::EventDispatcher::EventDispatcher","name":"EventDispatcher"}],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"Base type of an event dispatcher.  Defines how dispatchers should be implemented.","summary":"<p>Base type of an event dispatcher.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add_listener(event:AED::Event.class,listener:AED::EventListenerType,priority:Int32):Nil-instance-method","html_id":"add_listener(event:AED::Event.class,listener:AED::EventListenerType,priority:Int32):Nil-instance-method","name":"add_listener","doc":"Adds the provided *listener* as a listener for *event*, optionally with the provided *priority*.","summary":"<p>Adds the provided <em>listener</em> as a listener for <em>event</em>, optionally with the provided <em>priority</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"},{"name":"priority","doc":null,"default_value":"","external_name":"priority","restriction":"Int32"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : AED::EventListenerType, priority : Int32) : Nil","source_link":null,"def":{"name":"add_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"},{"name":"priority","doc":null,"default_value":"","external_name":"priority","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"dispatch(event:AED::Event):Nil-instance-method","html_id":"dispatch(event:AED::Event):Nil-instance-method","name":"dispatch","doc":"Dispatches *event* to all listeners registered on `self` that are listening on that event.\n\n`AED::EventListenerInterface`'s are executed based on the listener's priority; the higher the value the sooner it gets executed.","summary":"<p>Dispatches <em>event</em> to all listeners registered on <code>self</code> that are listening on that event.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"}],"args_string":"(event : AED::Event) : Nil","source_link":null,"def":{"name":"dispatch","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"has_listeners?(event:AED::Event.class?):Bool-instance-method","html_id":"has_listeners?(event:AED::Event.class?):Bool-instance-method","name":"has_listeners?","doc":"Returns `true` if there are any listeners listening on the provided *event*.\nIf no *event* is provided, returns `true` if there are *ANY* listeners registered on `self`.","summary":"<p>Returns <code>true</code> if there are any listeners listening on the provided <em>event</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class | Nil"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>?) : Bool","source_link":null,"def":{"name":"has_listeners?","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"listener_priority(event:AED::Event.class,listener:AED::EventListenerInterface.class):Int32?-instance-method","html_id":"listener_priority(event:AED::Event.class,listener:AED::EventListenerInterface.class):Int32?-instance-method","name":"listener_priority","doc":"Returns the *listener* priority for the provided *event*.  Returns `nil` if no listeners are listening on the provided *event* or\nif *listener* isn't listening on *event*.","summary":"<p>Returns the <em>listener</em> priority for the provided <em>event</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">EventListenerInterface</span>.<span class=\"k\">class</span>) : Int32?","source_link":null,"def":{"name":"listener_priority","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":""}},{"id":"listeners(event:AED::Event.class?):Array(AED::EventListener)-instance-method","html_id":"listeners(event:AED::Event.class?):Array(AED::EventListener)-instance-method","name":"listeners","doc":"Returns the listeners listening on the provided *event*.\nIf no *event* is provided, returns all listeners.","summary":"<p>Returns the listeners listening on the provided <em>event</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class | Nil"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>?) : Array(AED::EventListener)","source_link":null,"def":{"name":"listeners","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AED::EventListener)","visibility":"Public","body":""}},{"id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerInterface.class):Nil-instance-method","html_id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerInterface.class):Nil-instance-method","name":"remove_listener","doc":"Removes the provided *event* from the provided *listener*.","summary":"<p>Removes the provided <em>event</em> from the provided <em>listener</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">EventListenerInterface</span>.<span class=\"k\">class</span>) : Nil","source_link":null,"def":{"name":"remove_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerType):Nil-instance-method","html_id":"remove_listener(event:AED::Event.class,listener:AED::EventListenerType):Nil-instance-method","name":"remove_listener","doc":"Removes the provided *event* from the provided *listener*.","summary":"<p>Removes the provided <em>event</em> from the provided <em>listener</em>.</p>","abstract":true,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"}],"args_string":"(event : <span class=\"t\">AED</span><span class=\"t\">::</span><span class=\"t\">Event</span>.<span class=\"k\">class</span>, listener : AED::EventListenerType) : Nil","source_link":null,"def":{"name":"remove_listener","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event.class"},{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"AED::EventListenerType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/EventListener","path":"Athena/EventDispatcher/EventListener.html","kind":"struct","full_name":"Athena::EventDispatcher::EventListener","name":"EventListener","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"Wraps an `EventListenerType` in order to keep track of its `priority`.","summary":"<p>Wraps an <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">EventListenerType</a></code> in order to keep track of its <code><a href=\"../../Athena/EventDispatcher/EventListener.html#priority:Int32-instance-method\">#priority</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(listener:EventListenerType,priority:Int32=0)-class-method","html_id":"new(listener:EventListenerType,priority:Int32=0)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"EventListenerType"},{"name":"priority","doc":null,"default_value":"0","external_name":"priority","restriction":"Int32"}],"args_string":"(listener : EventListenerType, priority : Int32 = <span class=\"n\">0</span>)","source_link":null,"def":{"name":"new","args":[{"name":"listener","doc":null,"default_value":"","external_name":"listener","restriction":"EventListenerType"},{"name":"priority","doc":null,"default_value":"0","external_name":"priority","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(listener, priority)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"listener:EventListenerType-instance-method","html_id":"listener:EventListenerType-instance-method","name":"listener","doc":"The wrapped `EventListenerType` instance.","summary":"<p>The wrapped <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">EventListenerType</a></code> instance.</p>","abstract":false,"args":[],"args_string":" : EventListenerType","source_link":null,"def":{"name":"listener","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"EventListenerType","visibility":"Public","body":"@listener"}},{"id":"priority:Int32-instance-method","html_id":"priority:Int32-instance-method","name":"priority","doc":"The priority of the `EventListenerType` instance.\n\nThe higher the `priority` the sooner `listener` will be executed.","summary":"<p>The priority of the <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">EventListenerType</a></code> instance.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":null,"def":{"name":"priority","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@priority"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","path":"Athena/EventDispatcher/EventListenerInterface.html","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/Listeners/CORS","kind":"struct","full_name":"Athena::Routing::Listeners::CORS","name":"CORS"},{"html_id":"athena/Athena/Routing/Listeners/Error","kind":"struct","full_name":"Athena::Routing::Listeners::Error","name":"Error"},{"html_id":"athena/Athena/Routing/Listeners/ParamConverter","kind":"struct","full_name":"Athena::Routing::Listeners::ParamConverter","name":"ParamConverter"},{"html_id":"athena/Athena/Routing/Listeners/Routing","kind":"struct","full_name":"Athena::Routing::Listeners::Routing","name":"Routing"},{"html_id":"athena/Athena/Routing/Listeners/View","kind":"struct","full_name":"Athena::Routing::Listeners::View","name":"View"}],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"Interface for event listeners.\n\nListeners are defined by including this module.\n\nAn event can be listened for by defining `#call(event : AED::Event, dispatcher : AED::EventDispatcherInterface) : Nil`.\nThe first argument should be typed to the specific `AED::Event` instance that the method should listen on.  Multiple methods can be defined to handle\nmultiple events within the same listener.\n\nImplementors must also define `self.subscribed_events : AED::SubscribedEvents` that represents the events that `self`'s methods\nare listening on.  The value of the hash is the priority of the listener.  The higher the value the sooner that listener method gets executed.\n\nImplementors can also define initializers if external dependencies are required for handling the event.  However, `AED::EventDispatcher#new(listeners : Array(EventListenerInterface))`\nmust be used to register `self`, either with DI, or provided manually.\n\n```\nstruct TestListener\n  include AED::EventListenerInterface\n\n  def self.subscribed_events : AED::SubscribedEvents\n    AED::SubscribedEvents{\n      HttpRequestEvent => 0,\n      ExceptionEvent   => 4,\n    }\n  end\n\n  def call(event : HttpRequestEvent, dispatcher : AED::EventDispatcherInterface) : Nil\n    # Do something with the `HttpRequestEvent` and/or dispatcher\n  end\n\n  def call(event : ExceptionEvent, dispatcher : AED::EventDispatcherInterface) : Nil\n    # Do something with the `ExceptionEvent` and/or dispatcher\n  end\nend\n```","summary":"<p>Interface for event listeners.</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":"Returns the `AED::Event`s that `self` is listening on, along with\nthe listener priority of each event.\n\nImplementors should overide this with the events it should listen on.","summary":"<p>Returns the <code><a href=\"../../Athena/EventDispatcher/Event.html\">AED::Event</a></code>s that <code>self</code> is listening on, along with the listener priority of each event.</p>","abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":null,"def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents.new"}}],"constructors":[],"instance_methods":[{"id":"call(event:AED::Event,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:AED::Event,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":"Example method for listening on a specific *event*.  Implementors can define multiple of these,\nassuming each one listens on a different `AED::Event` type.\n\nInternally this method is used to make the compiler happy, in practice it should never get called.","summary":"<p>Example method for listening on a specific <em>event</em>.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : AED::Event, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":null,"def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"AED::Event"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/EventListenerType","path":"Athena/EventDispatcher/EventListenerType.html","kind":"alias","full_name":"Athena::EventDispatcher::EventListenerType","name":"EventListenerType","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"(Athena::EventDispatcher::EventListenerInterface | Proc(Athena::EventDispatcher::Event, Athena::EventDispatcher::EventDispatcherInterface, Nil))","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"The possible types an event listener can be.  `AED::EventListenerInterface` instances use `#call`\nin order to keep a common interface with the `Proc` based listeners.","summary":"<p>The possible types an event listener can be.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","path":"Athena/EventDispatcher/StoppableEvent.html","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"}],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"An `AED::Event` whose processing may be interrupted when the event has been handled.\n\n`AED::EventDispatcherInterface` implementations *MUST* check to determine if an `AED::Event`\nis marked as stopped after each listener is called.  If it is, then the `AED::EventListenerType` should\nreturn immediately without calling any further `AED::EventListenerType`.","summary":"<p>An <code><a href=\"../../Athena/EventDispatcher/Event.html\">AED::Event</a></code> whose processing may be interrupted when the event has been handled.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"propagate?:Bool-instance-method","html_id":"propagate?:Bool-instance-method","name":"propagate?","doc":"If future `AED::EventListenerType` should be executed.","summary":"<p>If future <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">AED::EventListenerType</a></code> should be executed.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"propagate?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"!@propatation_stopped"}},{"id":"stop_propagation:Nil-instance-method","html_id":"stop_propagation:Nil-instance-method","name":"stop_propagation","doc":"Prevent future `AED::EventListenerType` from executing once\nany listener calls `#stop_propagation` on `self`.","summary":"<p>Prevent future <code><a href=\"../../Athena/EventDispatcher/EventListenerType.html\">AED::EventListenerType</a></code> from executing once any listener calls <code><a href=\"../../Athena/EventDispatcher/StoppableEvent.html#stop_propagation:Nil-instance-method\">#stop_propagation</a></code> on <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Nil","source_link":null,"def":{"name":"stop_propagation","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@propatation_stopped = true"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/EventDispatcher/SubscribedEvents","path":"Athena/EventDispatcher/SubscribedEvents.html","kind":"alias","full_name":"Athena::EventDispatcher::SubscribedEvents","name":"SubscribedEvents","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":true,"aliased":"Hash(Athena::EventDispatcher::Event.class, Int32)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/EventDispatcher","kind":"module","full_name":"Athena::EventDispatcher","name":"EventDispatcher"},"doc":"The mapping of the `AED::Event` and the priority a `AED::EventListenerInterface` is listening on.\n\nSee `AED::EventListenerInterface`.","summary":"<p>The mapping of the <code><a href=\"../../Athena/EventDispatcher/Event.html\">AED::Event</a></code> and the priority a <code><a href=\"../../Athena/EventDispatcher/EventListenerInterface.html\">AED::EventListenerInterface</a></code> is listening on.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing","path":"Athena/Routing.html","kind":"module","full_name":"Athena::Routing","name":"Routing","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"LOGGER","name":"LOGGER","value":"Log.for(\"athena.routing\")","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"Athena is a set of independent, reusable [components](https://github.com/athena-framework) with the goal of providing\na set of high quality, flexible, and robust framework building blocks.  These components could be used on their own,\nor outside of the Athena ecosystem, to prevent every framework/project from needing to \"reinvent the wheel.\"\n\nThe `Athena::Routing` component is the result of combining these components into a single robust, flexible, and self-contained framework.\n\n## Getting Started\n\nAthena does not have any other dependencies outside of `Crystal`/`Shards`.\nIt is designed in such a way to be non-intrusive, and not require a strict organizational convention in regards to how a project is setup;\nthis allows it to use a minimal amount of setup boilerplate while not preventing it for more complex projects.\n\n### Installation\n\nAdd the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  athena:\n    github: athena-framework/athena\n    version: ~> 0.10.0\n```\n\nRun `shards install`.  This will install Athena and its required dependencies.\n\n### Usage\n\nAthena has a goal of being easy to start using for simple use cases, while still allowing flexibility/customizability for larger more complex use cases.\n\n#### Routing\n\nAthena is a MVC based framework, as such, the logic to handle a given route is defined in an `ART::Controller` class.\n\n```\nrequire \"athena\"\n\n# Define a controller\nclass ExampleController < ART::Controller\n  # Define an action to handle the related route\n  @[ART::Get(\"/\")]\n  def index : String\n    \"Hello World\"\n  end\n\n  # The macro DSL can also be used\n  get \"/\" do\n    \"Hello World\"\n  end\nend\n\n# Run the server\nART.run\n\n# GET / # => Hello World\n```\nAnnotations applied to the methods are used to define the HTTP method this method handles, such as `ART::Get` or `ART::Post`.  A macro DSL also exists to make them a bit less verbose;\n`ART::Controller.get` or `ART::Controller.post`.  The `ART::Route` annotation can also be used to define custom `HTTP` methods.\n\nControllers are simply classes and routes are simply methods.  Controllers and actions can be documented/tested as you would any Crystal class/method.\n\n#### Route Parameters\n\nParameters, such as path/query parameters, are also defined via annotations and map directly to the method's arguments.\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  @[ART::QueryParam(\"negative\")]\n  @[ART::Get(\"/add/:value1/:value2\")]\n  def add(value1 : Int32, value2 : Int32, negative : Bool = false) : Int32\n    sum = value1 + value2\n    negative ? -sum : sum\n  end\nend\n\nART.run\n\n# GET /add/2/3               # => 5\n# GET /add/5/5?negative=true # => -10\n# GET /add/foo/12            # => {\"code\":422,\"message\":\"Required parameter 'value1' with value 'foo' could not be converted into a valid 'Int32'\"}\n```\n\nArguments are converted to their expected types if possible, otherwise an error response is automatically returned.\nThe values are provided directly as method arguments, thus preventing the need for `env.params.url[\"name\"]` and any boilerplate related to it.\nJust like normal methods arguments, default values can be defined. The method's return type adds some type safety to ensure the expected value is being returned.\n\nRestricting an action argument to `HTTP::Request` will provide the raw request object, which can be used to retrieve the request data.\nThis approach is fine for simple or one-off endpoints, however for more complex/common request data processing, it is suggested to create\na [Param Converter](./Routing.html#param-converters).\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  @[ART::Post(\"/data\")]\n  def data(request : HTTP::Request) : String?\n    request.body.try &.gets_to_end\n  end\nend\n\nART.run\n\n# POST /data body: \"foo--bar\" # => \"foo--bar\"\n```\n\nAn `ART::Response` can also be used in order to fully customize the response, such as returning a specific status code, adding some one-off headers, or saving memory by directly\nwriting the response value to the Response IO.\n\n```\nrequire \"athena\"\nrequire \"mime\"\n\nclass ExampleController < ART::Controller\n  # A GET endpoint returning an `ART::Response`.\n  @[ART::Get(path: \"/css\")]\n  def css : ART::Response\n    ART::Response.new \".some_class { color: blue; }\", headers: HTTP::Headers{\"content-type\" => MIME.from_extension(\".css\")}\n  end\nend\n\nART.run\n\n# GET /css # => \".some_class { color: blue; }\"\n```\n\nAn `ART::Events::View` is emitted if the returned value is _NOT_ an `ART::Response`.  By default, non `ART::Response`s are JSON serialized.\nHowever, this event can be listened on to customize how the value is serialized.\n\n#### Error Handling\n\nException handling in Athena is similar to exception handling in any Crystal program, with the addition of a new unique exception type, `ART::Exceptions::HTTPException`.\nCustom `HTTP` errors can also be defined by inheriting from `ART::Exceptions::HTTPException` or a child type.\nA use case for this could be allowing additional data/context to be included within the exception.\n\nNon `ART::Exceptions::HTTPException` exceptions are represented as a `500 Internal Server Error`.\n\nWhen an exception is raised, Athena emits the `ART::Events::Exception` event to allow an opportunity for it to be handled.\nBy default these exceptions will return a `JSON` serialized version of the exception, via `ART::ErrorRenderer`, that includes the message and code; with the proper response status set.\nIf the exception goes unhandled, i.e. no listener set an `ART::Response` on the event, then the request is finished and the exception is reraised.\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  get \"divide/:num1/:num2\", num1 : Int32, num2 : Int32, return_type: Int32 do\n    num1 // num2\n  end\n\n  get \"divide_rescued/:num1/:num2\", num1 : Int32, num2 : Int32, return_type: Int32 do\n    num1 // num2\n    # Rescue a non `ART::Exceptions::HTTPException`\n  rescue ex : DivisionByZeroError\n    # in order to raise an `ART::Exceptions::HTTPException` to provide a better error message to the client.\n    raise ART::Exceptions::BadRequest.new \"Invalid num2:  Cannot divide by zero\"\n  end\nend\n\nART.run\n\n# GET /divide/10/0 # => {\"code\":500,\"message\":\"Internal Server Error\"}\n# GET /divide_rescued/10/0 # => {\"code\":400,\"message\":\"Invalid num2:  Cannot divide by zero\"}\n```\n\n### Advanced Usage\n\nAthena also ships with some more advanced features to provide more flexibility/control for an application.\nThese features may not be required for a simple application; however as the application grows they may become more useful.\n\n#### Param Converters\n`ART::ParamConverterInterface`s allow complex types to be supplied to an action via its arguments.\nAn example of this could be extracting the id from `/users/10`, doing a DB query to lookup the user with the PK of `10`, then providing the full user object to the action.\nParam converters abstract any custom parameter handling that would otherwise have to be done in each action.\n\n```\nrequire \"athena\"\n\n@[ADI::Register]\nstruct MultiplyConverter < ART::ParamConverterInterface\n  # :inherit:\n  def apply(request : HTTP::Request, configuration : Configuration) : Nil\n    arg_name = configuration.name\n\n    return unless request.attributes.has? arg_name\n\n    value = request.attributes.get arg_name, Int32\n    request.attributes.set arg_name, value * 2, Int32\n  end\nend\n\nclass ParamConverterController < ART::Controller\n  @[ART::Get(path: \"/multiply/:num\")]\n  @[ART::ParamConverter(\"num\", converter: MultiplyConverter)]\n  def multiply(num : Int32) : Int32\n    num\n  end\nend\n\nART.run\n\n# GET / multiply/3 # => 6\n```\n\n#### Middleware\n\nAthena is an event based framework; meaning it emits `ART::Events` that are acted upon internally to handle the request.\nThese same events can also be listened on by custom listeners, via `AED::EventListenerInterface`, in order to tap into the life-cycle of the request.\nAn example use case of this could be: adding common headers, cookies, compressing the response, authentication, or even returning a response early like `ART::Listeners::CORS`.\n\n```\nrequire \"athena\"\n\n@[ADI::Register]\nstruct CustomListener\n  include AED::EventListenerInterface\n\n  # Specify that we want to listen on the `Response` event.\n  # The value of the hash represents this listener's priority;\n  # the higher the value the sooner it gets executed.\n  def self.subscribed_events : AED::SubscribedEvents\n    AED::SubscribedEvents{\n      ART::Events::Response => 25,\n    }\n  end\n\n  def call(event : ART::Events::Response, dispatcher : AED::EventDispatcherInterface) : Nil\n    event.response.headers[\"FOO\"] = \"BAR\"\n  end\nend\n\nclass ExampleController < ART::Controller\n  get \"/\" do\n    \"Hello World\"\n  end\nend\n\nART.run\n\n# GET / # => Hello World (with `FOO => BAR` header)\n```\n\n#### Dependency Injection\n\nAthena utilizes `Athena::DependencyInjection` to provide a service container layer.\nDI allows controllers/other services to be decoupled from specific implementations.\nThis makes testing easier as test implementations of the dependencies can be used.\n\nIn Athena, most everything is a service that belongs to the container, which is unique to the current request.  The major benefit of this is it allows various types to be shared amongst the services.\nFor example, allowing param converters, controllers, etc. to have access to the current request via the `ART::RequestStore` service.\n\nAnother example would be defining a service to store a `UUID` to represent the current request, then using this service to include the UUID in the response headers.\n\n```\nrequire \"athena\"\nrequire \"uuid\"\n\n@[ADI::Register]\nstruct RequestIDStore\n  HEADER_NAME = \"X-Request-ID\"\n\n  # Inject `ART::RequestStore` in order to have access to the current request's headers.\n  def initialize(@request_store : ART::RequestStore); end\n\n  property request_id : String? = nil do\n    # Check the request store for a request.\n    request = @request_store.request?\n\n    # If there is a request and it has the Header,\n    if request && request.headers.has_key? HEADER_NAME\n      # use that ID.\n      request.headers[HEADER_NAME]\n    else\n      # otherwise generate a new one.\n      UUID.random.to_s\n    end\n  end\nend\n\n@[ADI::Register]\nstruct RequestIDListener\n  include AED::EventListenerInterface\n\n  def self.subscribed_events : AED::SubscribedEvents\n    AED::SubscribedEvents{\n      ART::Events::Response => 0,\n    }\n  end\n\n  def initialize(@request_id_store : RequestIDStore); end\n\n  def call(event : ART::Events::Response, dispatcher : AED::EventDispatcherInterface) : Nil\n    # Set the request ID as a response header\n    event.response.headers[RequestIDStore::HEADER_NAME] = @request_id_store.request_id\n  end\nend\n\nclass ExampleController < ART::Controller\n  get \"/\" do\n    \"\"\n  end\nend\n\nART.run\n\n# GET / # => (`X-Request-ID => 07bda224-fb1d-4b82-b26c-19d46305c7bc` header)\n```\n\nThe main benefit of having `RequestIDStore` and not doing `event.response.headers[RequestIDStore::HEADER_NAME] = UUID.random.to_s` directly is that the value could be used in other places.\nSay for example you have a route that enqueues messages to be processed asynchronously.  The `RequestIDStore` could be inject into that controller/service in order to include the same `UUID`\nwithin the message in order to expand tracing to async contexts.  Without DI, like in other frameworks, there would not be an easy to way to share the same instance of an object between\ndifferent types.  It also wouldn't be easy to have access to data outside the request context.\n\nDI is also what \"wires\" everything together.  For example, say there is an external shard that defines a listener.  All that would be required to use that listener is install and require the shard,\nDI takes care of the rest.  This is much easier and more flexible than needing to update code to add a new `HTTP::Handler` instance to an array.","summary":"<p>Athena is a set of independent, reusable <a href=\"https://github.com/athena-framework\" target=\"_blank\">components</a> with the goal of providing a set of high quality, flexible, and robust framework building blocks.</p>","class_methods":[{"id":"run(port:Int32=3000,host:String=&quot;0.0.0.0&quot;,reuse_port:Bool=false):Nil-class-method","html_id":"run(port:Int32=3000,host:String=&quot;0.0.0.0&quot;,reuse_port:Bool=false):Nil-class-method","name":"run","doc":"Runs an `HTTP::Server` listening on the given *port* and *host*.\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  @[ART::Get(\"/\")]\n  def root : String\n    \"At the index\"\n  end\nend\n\nART.run\n```\nSee `ART::Controller` for more information on defining controllers/route actions.","summary":"<p>Runs an <code>HTTP::Server</code> listening on the given <em>port</em> and <em>host</em>.</p>","abstract":false,"args":[{"name":"port","doc":null,"default_value":"3000","external_name":"port","restriction":"Int32"},{"name":"host","doc":null,"default_value":"\"0.0.0.0\"","external_name":"host","restriction":"String"},{"name":"reuse_port","doc":null,"default_value":"false","external_name":"reuse_port","restriction":"Bool"}],"args_string":"(port : Int32 = <span class=\"n\">3000</span>, host : String = <span class=\"s\">&quot;0.0.0.0&quot;</span>, reuse_port : Bool = <span class=\"n\">false</span>) : Nil","source_link":null,"def":{"name":"run","args":[{"name":"port","doc":null,"default_value":"3000","external_name":"port","restriction":"Int32"},{"name":"host","doc":null,"default_value":"\"0.0.0.0\"","external_name":"host","restriction":"String"},{"name":"reuse_port","doc":null,"default_value":"false","external_name":"reuse_port","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"(ART::Server.new(port, host, reuse_port)).start"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Action","path":"Athena/Routing/Action.html","kind":"struct","full_name":"Athena::Routing::Action(Controller, ActionType, ReturnType, ArgTypeTuple, ArgumentsType)","name":"Action","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/ActionBase","kind":"struct","full_name":"Athena::Routing::ActionBase","name":"ActionBase"},"ancestors":[{"html_id":"athena/Athena/Routing/ActionBase","kind":"struct","full_name":"Athena::Routing::ActionBase","name":"ActionBase"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Represents an endpoint within the application.\n\nIncludes metadata about the endpoint, such as its controller, arguments, return type, and the action that should be executed.","summary":"<p>Represents an endpoint within the application.</p>","class_methods":[],"constructors":[{"id":"new(action:ActionType,action_name:String,method:String,arguments:ArgumentsType,param_converters:Array(ART::ParamConverterInterface::ConfigurationInterface),view:View,_controller:Controller.class,_return_type:ReturnType.class,_arg_types:ArgTypeTuple.class)-class-method","html_id":"new(action:ActionType,action_name:String,method:String,arguments:ArgumentsType,param_converters:Array(ART::ParamConverterInterface::ConfigurationInterface),view:View,_controller:Controller.class,_return_type:ReturnType.class,_arg_types:ArgTypeTuple.class)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"ActionType"},{"name":"action_name","doc":null,"default_value":"","external_name":"action_name","restriction":"String"},{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"arguments","doc":null,"default_value":"","external_name":"arguments","restriction":"ArgumentsType"},{"name":"param_converters","doc":null,"default_value":"","external_name":"param_converters","restriction":"Array(ART::ParamConverterInterface::ConfigurationInterface)"},{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"View"},{"name":"_controller","doc":null,"default_value":"","external_name":"_controller","restriction":"Controller.class"},{"name":"_return_type","doc":null,"default_value":"","external_name":"_return_type","restriction":"ReturnType.class"},{"name":"_arg_types","doc":null,"default_value":"","external_name":"_arg_types","restriction":"ArgTypeTuple.class"}],"args_string":"(action : ActionType, action_name : String, method : String, arguments : ArgumentsType, param_converters : Array(ART::ParamConverterInterface::ConfigurationInterface), view : View, _controller : <span class=\"t\">Controller</span>.<span class=\"k\">class</span>, _return_type : <span class=\"t\">ReturnType</span>.<span class=\"k\">class</span>, _arg_types : <span class=\"t\">ArgTypeTuple</span>.<span class=\"k\">class</span>)","source_link":null,"def":{"name":"new","args":[{"name":"action","doc":null,"default_value":"","external_name":"action","restriction":"ActionType"},{"name":"action_name","doc":null,"default_value":"","external_name":"action_name","restriction":"String"},{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"String"},{"name":"arguments","doc":null,"default_value":"","external_name":"arguments","restriction":"ArgumentsType"},{"name":"param_converters","doc":null,"default_value":"","external_name":"param_converters","restriction":"Array(ART::ParamConverterInterface::ConfigurationInterface)"},{"name":"view","doc":null,"default_value":"","external_name":"view","restriction":"View"},{"name":"_controller","doc":null,"default_value":"","external_name":"_controller","restriction":"Controller.class"},{"name":"_return_type","doc":null,"default_value":"","external_name":"_return_type","restriction":"ReturnType.class"},{"name":"_arg_types","doc":null,"default_value":"","external_name":"_arg_types","restriction":"ArgTypeTuple.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Action(Controller, ActionType, ReturnType, ArgTypeTuple, ArgumentsType).allocate\n_.initialize(action, action_name, method, arguments, param_converters, view, _controller, _return_type, _arg_types)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"action_name:String-instance-method","html_id":"action_name:String-instance-method","name":"action_name","doc":"The name of the the controller action related to `self`.","summary":"<p>The name of the the controller action related to <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"action_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@action_name"}},{"id":"arguments:ArgumentsType-instance-method","html_id":"arguments:ArgumentsType-instance-method","name":"arguments","doc":"An `Array(ART::Arguments::ArgumentMetadata)` that `self` requires.","summary":"<p>An <code>Array(<a href=\"../../Athena/Routing/Arguments/ArgumentMetadata.html\">ART::Arguments::ArgumentMetadata</a>)</code> that <code>self</code> requires.</p>","abstract":false,"args":[],"args_string":" : ArgumentsType","source_link":null,"def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ArgumentsType","visibility":"Public","body":"@arguments"}},{"id":"controller:Controller.class-instance-method","html_id":"controller:Controller.class-instance-method","name":"controller","doc":"The `ART::Controller` that includes `self`.","summary":"<p>The <code><a href=\"../../Athena/Routing/Controller.html\">ART::Controller</a></code> that includes <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">Controller</span>.<span class=\"k\">class</span>","source_link":null,"def":{"name":"controller","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Controller.class","visibility":"Public","body":"Controller"}},{"id":"execute(arguments:Array):ReturnType-instance-method","html_id":"execute(arguments:Array):ReturnType-instance-method","name":"execute","doc":"Executes the action related to `self` with the provided *arguments* array.","summary":"<p>Executes the action related to <code>self</code> with the provided <em>arguments</em> array.</p>","abstract":false,"args":[{"name":"arguments","doc":null,"default_value":"","external_name":"arguments","restriction":"Array"}],"args_string":"(arguments : Array) : ReturnType","source_link":null,"def":{"name":"execute","args":[{"name":"arguments","doc":null,"default_value":"","external_name":"arguments","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ReturnType","visibility":"Public","body":"@action.call.call(*({{ ArgTypeTuple.type_vars.empty? ? \"Tuple.new\".id : ArgTypeTuple }}).from(arguments))"}},{"id":"method:String-instance-method","html_id":"method:String-instance-method","name":"method","doc":"The HTTP method associated with `self`.","summary":"<p>The HTTP method associated with <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@method"}},{"id":"param_converters:Array(ART::ParamConverterInterface::ConfigurationInterface)-instance-method","html_id":"param_converters:Array(ART::ParamConverterInterface::ConfigurationInterface)-instance-method","name":"param_converters","doc":"An `Array(ART::ParamConverterInterface::ConfigurationInterface)` representing the `ART::ParamConverter`s applied to `self`.","summary":"<p>An <code>Array(<a href=\"../../Athena/Routing/ParamConverterInterface/ConfigurationInterface.html\">ART::ParamConverterInterface::ConfigurationInterface</a>)</code> representing the <code><a href=\"../../Athena/Routing/ParamConverter.html\">ART::ParamConverter</a></code>s applied to <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Array(ART::ParamConverterInterface::ConfigurationInterface)","source_link":null,"def":{"name":"param_converters","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(ART::ParamConverterInterface::ConfigurationInterface)","visibility":"Public","body":"@param_converters"}},{"id":"return_type:ReturnType.class-instance-method","html_id":"return_type:ReturnType.class-instance-method","name":"return_type","doc":"The type that `self`'s route should return.","summary":"<p>The type that <code>self</code>'s route should return.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">ReturnType</span>.<span class=\"k\">class</span>","source_link":null,"def":{"name":"return_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ReturnType.class","visibility":"Public","body":"ReturnType"}},{"id":"view:View-instance-method","html_id":"view:View-instance-method","name":"view","doc":"The `ART::Action::View` configuration related to `self`.","summary":"<p>The <code><a href=\"../../Athena/Routing/Action/View.html\">ART::Action::View</a></code> configuration related to <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : View","source_link":null,"def":{"name":"view","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"View","visibility":"Public","body":"@view"}}],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Action/View","path":"Athena/Routing/Action/View.html","kind":"struct","full_name":"Athena::Routing::Action::View","name":"View","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Action","kind":"struct","full_name":"Athena::Routing::Action(Controller, ActionType, ReturnType, ArgTypeTuple, ArgumentsType)","name":"Action"},"doc":"Stores runtime configuration data from the `ART::View` annotation about how to render the output of the related action.\n\nThis includes the action's `HTTP::Status` and any serialization related configuration options.","summary":"<p>Stores runtime configuration data from the <code><a href=\"../../../Athena/Routing/View.html\">ART::View</a></code> annotation about how to render the output of the related action.</p>","class_methods":[],"constructors":[{"id":"new(status:HTTP::Status?=nil,serialization_groups:Array(String)=[&quot;default&quot;],emit_nil:Bool=false)-class-method","html_id":"new(status:HTTP::Status?=nil,serialization_groups:Array(String)=[&quot;default&quot;],emit_nil:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"status","doc":null,"default_value":"nil","external_name":"status","restriction":"HTTP::Status | ::Nil"},{"name":"serialization_groups","doc":null,"default_value":"[\"default\"]","external_name":"serialization_groups","restriction":"Array(String)"},{"name":"emit_nil","doc":null,"default_value":"false","external_name":"emit_nil","restriction":"Bool"}],"args_string":"(status : HTTP::Status? = <span class=\"n\">nil</span>, serialization_groups : Array(String) = [<span class=\"s\">&quot;default&quot;</span>], emit_nil : Bool = <span class=\"n\">false</span>)","source_link":null,"def":{"name":"new","args":[{"name":"status","doc":null,"default_value":"nil","external_name":"status","restriction":"HTTP::Status | ::Nil"},{"name":"serialization_groups","doc":null,"default_value":"[\"default\"]","external_name":"serialization_groups","restriction":"Array(String)"},{"name":"emit_nil","doc":null,"default_value":"false","external_name":"emit_nil","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(status, serialization_groups, emit_nil)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"emit_nil:Bool-instance-method","html_id":"emit_nil:Bool-instance-method","name":"emit_nil","doc":"If `nil` values should be serialized.","summary":"<p>If <code>nil</code> values should be serialized.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"emit_nil","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@emit_nil"}},{"id":"has_custom_status?:Bool-instance-method","html_id":"has_custom_status?:Bool-instance-method","name":"has_custom_status?","doc":"Returns `true` if the action related to `self` defined a custom status via the `ART::View` annotation, otherwise `false`.","summary":"<p>Returns <code>true</code> if the action related to <code>self</code> defined a custom status via the <code><a href=\"../../../Athena/Routing/View.html\">ART::View</a></code> annotation, otherwise <code>false</code>.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"has_custom_status?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@has_custom_status"}},{"id":"serialization_groups:Array(String)-instance-method","html_id":"serialization_groups:Array(String)-instance-method","name":"serialization_groups","doc":"The serialization groups to use for this route as part of `ASR::ExclusionStrategies::Groups`.","summary":"<p>The serialization groups to use for this route as part of <code><a href=\"../../../Athena/Serializer/ExclusionStrategies/Groups.html\">ASR::ExclusionStrategies::Groups</a></code>.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"serialization_groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@serialization_groups"}},{"id":"status:HTTP::Status-instance-method","html_id":"status:HTTP::Status-instance-method","name":"status","doc":"The `HTTP::Status` this action should return.  Defaults to `HTTP::Status::OK` (200).","summary":"<p>The <code>HTTP::Status</code> this action should return.</p>","abstract":false,"args":[],"args_string":" : HTTP::Status","source_link":null,"def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Status","visibility":"Public","body":"@status"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/ActionBase","path":"Athena/Routing/ActionBase.html","kind":"struct","full_name":"Athena::Routing::ActionBase","name":"ActionBase","abstract":true,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Action","kind":"struct","full_name":"Athena::Routing::Action(Controller, ActionType, ReturnType, ArgTypeTuple, ArgumentsType)","name":"Action"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Parent type of a route just used for typing.\n\nSee `ART::Action`.","summary":"<p>Parent type of a route just used for typing.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Arguments","path":"Athena/Routing/Arguments.html","kind":"module","full_name":"Athena::Routing::Arguments","name":"Arguments","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Namespace for types related to controller action arguments.\n\nSee `ART::Arguments::ArgumentMetadata`.","summary":"<p>Namespace for types related to controller action arguments.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Arguments/ArgumentMetadata","path":"Athena/Routing/Arguments/ArgumentMetadata.html","kind":"struct","full_name":"Athena::Routing::Arguments::ArgumentMetadata(T)","name":"ArgumentMetadata","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Arguments","kind":"module","full_name":"Athena::Routing::Arguments","name":"Arguments"},"doc":"Represents a controller action argument.  Stores metadata associated with it, such as its name, type, and default value if any.","summary":"<p>Represents a controller action argument.</p>","class_methods":[],"constructors":[{"id":"new(name:String,has_default:Bool,is_nillable:Bool=false,default:T?=nil,type:T.class=T)-class-method","html_id":"new(name:String,has_default:Bool,is_nillable:Bool=false,default:T?=nil,type:T.class=T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"has_default","doc":null,"default_value":"","external_name":"has_default","restriction":"Bool"},{"name":"is_nillable","doc":null,"default_value":"false","external_name":"is_nillable","restriction":"Bool"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"args_string":"(name : String, has_default : Bool, is_nillable : Bool = <span class=\"n\">false</span>, default : T? = <span class=\"n\">nil</span>, type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">T</span>)","source_link":null,"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"has_default","doc":null,"default_value":"","external_name":"has_default","restriction":"Bool"},{"name":"is_nillable","doc":null,"default_value":"false","external_name":"is_nillable","restriction":"Bool"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"T | ::Nil"},{"name":"type","doc":null,"default_value":"T","external_name":"type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ArgumentMetadata(T).allocate\n_.initialize(name, has_default, is_nillable, default, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default:T?-instance-method","html_id":"default:T?-instance-method","name":"default","doc":"The default value of the argument, if any.\n\nSee `ART::Arguments::Resolvers::DefaultValue`.","summary":"<p>The default value of the argument, if any.</p>","abstract":false,"args":[],"args_string":" : T?","source_link":null,"def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T | ::Nil","visibility":"Public","body":"@default"}},{"id":"has_default?:Bool-instance-method","html_id":"has_default?:Bool-instance-method","name":"has_default?","doc":"If this argument has a default value.","summary":"<p>If this argument has a default value.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"has_default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@has_default"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"The name of the argument.","summary":"<p>The name of the argument.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"nillable?:Bool-instance-method","html_id":"nillable?:Bool-instance-method","name":"nillable?","doc":"If `nil` is a valid argument for the argument.","summary":"<p>If <code>nil</code> is a valid argument for the argument.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"nillable?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@nillable"}},{"id":"type:T.class-instance-method","html_id":"type:T.class-instance-method","name":"type","doc":"The type of the parameter, i.e. what its type restriction is.","summary":"<p>The type of the parameter, i.e.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">T</span>.<span class=\"k\">class</span>","source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T.class","visibility":"Public","body":"@type"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Arguments/ArgumentResolver","path":"Athena/Routing/Arguments/ArgumentResolver.html","kind":"struct","full_name":"Athena::Routing::Arguments::ArgumentResolver","name":"ArgumentResolver","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Routing/Arguments/ArgumentResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::ArgumentResolverInterface","name":"ArgumentResolverInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Arguments/ArgumentResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::ArgumentResolverInterface","name":"ArgumentResolverInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Arguments","kind":"module","full_name":"Athena::Routing::Arguments","name":"Arguments"},"doc":"The default implementation of `ART::Arguments::ArgumentResolverInterface`.","summary":"<p>The default implementation of <code><a href=\"../../../Athena/Routing/Arguments/ArgumentResolverInterface.html\">ART::Arguments::ArgumentResolverInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(argument_resolvers:Array(Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface))-class-method","html_id":"new(argument_resolvers:Array(Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"argument_resolvers","doc":null,"default_value":"","external_name":"argument_resolvers","restriction":"Array(Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface)"}],"args_string":"(argument_resolvers : Array(Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface))","source_link":null,"def":{"name":"new","args":[{"name":"argument_resolvers","doc":null,"default_value":"","external_name":"argument_resolvers","restriction":"Array(Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(argument_resolvers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"get_arguments(request:HTTP::Request,route:ART::ActionBase):Array-instance-method","html_id":"get_arguments(request:HTTP::Request,route:ART::ActionBase):Array-instance-method","name":"get_arguments","doc":"Returns an array of arguments resolved from the provided *request* for the given *route*.","summary":"<p>Returns an array of arguments resolved from the provided <em>request</em> for the given <em>route</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"ART::ActionBase"}],"args_string":"(request : HTTP::Request, route : ART::ActionBase) : Array","source_link":null,"def":{"name":"get_arguments","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"ART::ActionBase"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array","visibility":"Public","body":"route.arguments.map_first_type do |param|\n  if resolver = @argument_resolvers.find(&.supports?(request, param))\n    resolver.resolve(request, param)\n  else\n    raise(RuntimeError.new(\"Could not resolve required argument '#{param.name}' for '#{route.controller}##{route.action_name}'.\"))\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Arguments/ArgumentResolverInterface","path":"Athena/Routing/Arguments/ArgumentResolverInterface.html","kind":"module","full_name":"Athena::Routing::Arguments::ArgumentResolverInterface","name":"ArgumentResolverInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/Arguments/ArgumentResolver","kind":"struct","full_name":"Athena::Routing::Arguments::ArgumentResolver","name":"ArgumentResolver"}],"namespace":{"html_id":"athena/Athena/Routing/Arguments","kind":"module","full_name":"Athena::Routing::Arguments","name":"Arguments"},"doc":"Responsible for resolving the arguments that will be passed to a controller action.","summary":"<p>Responsible for resolving the arguments that will be passed to a controller action.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"get_arguments(request:HTTP::Request,route:ART::ActionBase):Array-instance-method","html_id":"get_arguments(request:HTTP::Request,route:ART::ActionBase):Array-instance-method","name":"get_arguments","doc":"Returns an array of arguments resolved from the provided *request* for the given *route*.","summary":"<p>Returns an array of arguments resolved from the provided <em>request</em> for the given <em>route</em>.</p>","abstract":true,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"ART::ActionBase"}],"args_string":"(request : HTTP::Request, route : ART::ActionBase) : Array","source_link":null,"def":{"name":"get_arguments","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"route","doc":null,"default_value":"","external_name":"route","restriction":"ART::ActionBase"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Arguments/Resolvers","path":"Athena/Routing/Arguments/Resolvers.html","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers","name":"Resolvers","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TAG","name":"TAG","value":"\"athena.argument_value_resolver\"","doc":"The tag name for `ART::Arguments::Resolvers::ArgumentValueResolverInterface`s.","summary":"<p>The tag name for <code><a href=\"../../../Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface.html\">ART::Arguments::Resolvers::ArgumentValueResolverInterface</a></code>s.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Arguments","kind":"module","full_name":"Athena::Routing::Arguments","name":"Arguments"},"doc":"The default `ART::Arguments::Resolvers::ArgumentValueResolverInterface`s that will handle resolving controller action arguments from a request (or other source).\nCustom argument value resolvers can also be defined, see `ART::Arguments::Resolvers::ArgumentValueResolverInterface`.\n\nNOTE: In order for `Athena::Routing` to pick up your custom value resolvers, be sure to `ADI::Register` it as a service, and tag it as `ART::Arguments::Resolvers::TAG`.\nA `priority` field can also be optionally included in the annotation, the higher the value the sooner in the array it'll be when injected.\n\nSee each resolver for more detailed information.","summary":"<p>The default <code><a href=\"../../../Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface.html\">ART::Arguments::Resolvers::ArgumentValueResolverInterface</a></code>s that will handle resolving controller action arguments from a request (or other source).</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","path":"Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface.html","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/DefaultValue","kind":"struct","full_name":"Athena::Routing::Arguments::Resolvers::DefaultValue","name":"DefaultValue"},{"html_id":"athena/Athena/Routing/Arguments/Resolvers/Request","kind":"struct","full_name":"Athena::Routing::Arguments::Resolvers::Request","name":"Request"},{"html_id":"athena/Athena/Routing/Arguments/Resolvers/RequestAttribute","kind":"struct","full_name":"Athena::Routing::Arguments::Resolvers::RequestAttribute","name":"RequestAttribute"}],"namespace":{"html_id":"athena/Athena/Routing/Arguments/Resolvers","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers","name":"Resolvers"},"doc":"Argument value resolvers handle resolving the arguments for a controller action from a request, or other source.\n\nCustom resolvers can be defined by creating a service that implements this interface, and is tagged with `ART::Arguments::Resolvers::TAG`,\noptionally with a priority to determine the order in which the resolvers are executed.\n\n```\n@[ADI::Register(tags: [{name: ART::Arguments::Resolvers::TAG, priority: 10}])]\nstruct CustomResolver\n  include Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface\n\n  # :inherit:\n  def supports?(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata) : Bool\n    # Define the logic that determines if `self` is able to resolve a value for the given request/argument.\n    # This resolver would handle resolving a value for action arguments whose type is `MyCustomType`.\n    argument.type == MyCustomType\n  end\n\n  # :inherit:\n  def resolve(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata)\n    # Return the resolved value.  It could either come from the request itself, an injected service, or hardcoded.\n    # `#resolve` is only executed if `#supports?` returns `true`.\n    MyCustomType.new \"foo\"\n  end\nend\n```","summary":"<p>Argument value resolvers handle resolving the arguments for a controller action from a request, or other source.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","html_id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","name":"resolve","doc":"Returns a value resolved from the provided *request* and *argument*.","summary":"<p>Returns a value resolved from the provided <em>request</em> and <em>argument</em>.</p>","abstract":true,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata)","source_link":null,"def":{"name":"resolve","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","html_id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","name":"supports?","doc":"Returns `true` if `self` is able to resolve a value from the provided *request* and *argument*.","summary":"<p>Returns <code>true</code> if <code>self</code> is able to resolve a value from the provided <em>request</em> and <em>argument</em>.</p>","abstract":true,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata) : Bool","source_link":null,"def":{"name":"supports?","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Arguments/Resolvers/DefaultValue","path":"Athena/Routing/Arguments/Resolvers/DefaultValue.html","kind":"struct","full_name":"Athena::Routing::Arguments::Resolvers::DefaultValue","name":"DefaultValue","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Arguments/Resolvers","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers","name":"Resolvers"},"doc":"Handles resolving an argument's default value if no other value was able to be resolved.\n\n```\n@[ART::Get(\"/\")]\n@[ART::QueryParam(\"query_param\")]\ndef get_query_param(query_param : Int32 = 123) : Int32\n  # `query_param` would be `123` if the request does not include a query parameter named `query_param`.\n  query_param\nend\n```","summary":"<p>Handles resolving an argument's default value if no other value was able to be resolved.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","html_id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","name":"resolve","doc":"Returns a value resolved from the provided *request* and *argument*.","summary":"<p>Returns a value resolved from the provided <em>request</em> and <em>argument</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata)","source_link":null,"def":{"name":"resolve","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"argument.has_default? ? argument.default : nil"}},{"id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","html_id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","name":"supports?","doc":"Returns `true` if `self` is able to resolve a value from the provided *request* and *argument*.","summary":"<p>Returns <code>true</code> if <code>self</code> is able to resolve a value from the provided <em>request</em> and <em>argument</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata) : Bool","source_link":null,"def":{"name":"supports?","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"argument.has_default? || ((argument.type != Nil) && argument.nillable?)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Arguments/Resolvers/Request","path":"Athena/Routing/Arguments/Resolvers/Request.html","kind":"struct","full_name":"Athena::Routing::Arguments::Resolvers::Request","name":"Request","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Arguments/Resolvers","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers","name":"Resolvers"},"doc":"Handles resolving a value for action arguments typed as `HTTP::Request`.\n\n```\n@[ART::Get(\"/\")]\ndef get_request_path(request : HTTP::Request) : String\n  request.path\nend\n```","summary":"<p>Handles resolving a value for action arguments typed as <code><a href=\"../../../../HTTP/Request.html\">HTTP::Request</a></code>.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","html_id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","name":"resolve","doc":"Returns a value resolved from the provided *request* and *argument*.","summary":"<p>Returns a value resolved from the provided <em>request</em> and <em>argument</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata)","source_link":null,"def":{"name":"resolve","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request"}},{"id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","html_id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","name":"supports?","doc":"Returns `true` if `self` is able to resolve a value from the provided *request* and *argument*.","summary":"<p>Returns <code>true</code> if <code>self</code> is able to resolve a value from the provided <em>request</em> and <em>argument</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata) : Bool","source_link":null,"def":{"name":"supports?","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"argument.type <= HTTP::Request"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Arguments/Resolvers/RequestAttribute","path":"Athena/Routing/Arguments/Resolvers/RequestAttribute.html","kind":"struct","full_name":"Athena::Routing::Arguments::Resolvers::RequestAttribute","name":"RequestAttribute","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Arguments/Resolvers/ArgumentValueResolverInterface","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers::ArgumentValueResolverInterface","name":"ArgumentValueResolverInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Arguments/Resolvers","kind":"module","full_name":"Athena::Routing::Arguments::Resolvers","name":"Resolvers"},"doc":"Handles resolving a value that is stored in the request's `ART::ParameterBag`.\nThis includes any path/query parameters, or custom types values stored via an `AED::EventListenerInterface`.\n\n```\n@[ART::Get(\"/:id\")]\ndef get_id(id : Int32) : Int32\n  id\nend\n```","summary":"<p>Handles resolving a value that is stored in the request's <code><a href=\"../../../../Athena/Routing/ParameterBag.html\">ART::ParameterBag</a></code>.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","html_id":"resolve(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata)-instance-method","name":"resolve","doc":"Returns a value resolved from the provided *request* and *argument*.","summary":"<p>Returns a value resolved from the provided <em>request</em> and <em>argument</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata)","source_link":null,"def":{"name":"resolve","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  value = request.attributes.get(argument.name)\n  argument.type.from_parameter(value)\nrescue ex : ArgumentError\n  raise(ART::Exceptions::BadRequest.new(\"Required parameter '#{argument.name}' with value '#{value}' could not be converted into a valid '#{argument.type}'\", cause: ex))\nend"}},{"id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","html_id":"supports?(request:HTTP::Request,argument:ART::Arguments::ArgumentMetadata):Bool-instance-method","name":"supports?","doc":"Returns `true` if `self` is able to resolve a value from the provided *request* and *argument*.","summary":"<p>Returns <code>true</code> if <code>self</code> is able to resolve a value from the provided <em>request</em> and <em>argument</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"args_string":"(request : HTTP::Request, argument : ART::Arguments::ArgumentMetadata) : Bool","source_link":null,"def":{"name":"supports?","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"argument","doc":null,"default_value":"","external_name":"argument","restriction":"ART::Arguments::ArgumentMetadata"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"request.attributes.has?(argument.name)"}}],"macros":[],"types":[]}]}]},{"html_id":"athena/Athena/Routing/Config","path":"Athena/Routing/Config.html","kind":"struct","full_name":"Athena::Routing::Config","name":"Config","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Encompasses all configuration related to the `Athena::Routing` component.\n\nFor a higher level introduction to configuring Athena components, see `Athena::Config`.","summary":"<p>Encompasses all configuration related to the <code><a href=\"../../Athena/Routing.html\">Athena::Routing</a></code> component.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"cors:ART::Config::CORS?-instance-method","html_id":"cors:ART::Config::CORS?-instance-method","name":"cors","doc":"Configuration related to `Athena::Routing::Listeners::CORS`.\n\nDisables the listener if not defined.","summary":"<p>Configuration related to <code><a href=\"../../Athena/Routing/Listeners/CORS.html\">Athena::Routing::Listeners::CORS</a></code>.</p>","abstract":false,"args":[],"args_string":" : ART::Config::CORS?","source_link":null,"def":{"name":"cors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Config::CORS | ::Nil","visibility":"Public","body":"@cors"}}],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Config/CORS","path":"Athena/Routing/Config/CORS.html","kind":"struct","full_name":"Athena::Routing::Config::CORS","name":"CORS","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"},{"html_id":"athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Config/Configuration","kind":"module","full_name":"Athena::Config::Configuration","name":"Configuration"},{"html_id":"athena/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"athena/YAML/Serializable/Strict","kind":"module","full_name":"YAML::Serializable::Strict","name":"Strict"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Config","kind":"struct","full_name":"Athena::Routing::Config","name":"Config"},"doc":"Configuration options for `ART::Listeners::CORS`.  If `ART::Config.cors` is not defined in your configuration file, the listener is disabled.\n\nTODO: Allow scoping CORS options to specific routes versus applying them to all routes.\n\nAlso see `ART::Config`.","summary":"<p>Configuration options for <code><a href=\"../../../Athena/Routing/Listeners/CORS.html\">ART::Listeners::CORS</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","source_link":null,"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"YAML::ParseContext"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"YAML::Nodes::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"allow_credentials:Bool-instance-method","html_id":"allow_credentials:Bool-instance-method","name":"allow_credentials","doc":"Indicates whether the request can be made using credentials.\n\nMaps to the `access-control-allow-credentials` header.","summary":"<p>Indicates whether the request can be made using credentials.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"allow_credentials","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@allow_credentials"}},{"id":"allow_headers:Array(String)-instance-method","html_id":"allow_headers:Array(String)-instance-method","name":"allow_headers","doc":"The header or headers that can be used when making the actual request.\n\nCan be set to `[\"*\"]` to allow any headers.\n\nmaps to the `access-control-allow-headers` header.","summary":"<p>The header or headers that can be used when making the actual request.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"allow_headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@allow_headers"}},{"id":"allow_methods:Array(String)-instance-method","html_id":"allow_methods:Array(String)-instance-method","name":"allow_methods","doc":"The method or methods allowed when accessing the resource.\n\nMaps to the `access-control-allow-methods` header.\nDefaults to the [CORS-safelisted methods](https://fetch.spec.whatwg.org/#cors-safelisted-method).","summary":"<p>The method or methods allowed when accessing the resource.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"allow_methods","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@allow_methods"}},{"id":"allow_origin:Array(String)-instance-method","html_id":"allow_origin:Array(String)-instance-method","name":"allow_origin","doc":"A white-listed array of valid origins.\n\nCan be set to `[\"*\"]` to allow any origin.\n\nTODO: Allow `Regex` based origins.","summary":"<p>A white-listed array of valid origins.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"allow_origin","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@allow_origin"}},{"id":"expose_headers:Array(String)-instance-method","html_id":"expose_headers:Array(String)-instance-method","name":"expose_headers","doc":"Array of headers that the browser is allowed to read from the response.\n\nMaps to the `access-control-expose-headers` header.","summary":"<p>Array of headers that the browser is allowed to read from the response.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"expose_headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@expose_headers"}},{"id":"max_age:Int32-instance-method","html_id":"max_age:Int32-instance-method","name":"max_age","doc":"Number of seconds that the results of a preflight request can be cached.\n\nMaps to the `access-control-max-age` header.","summary":"<p>Number of seconds that the results of a preflight request can be cached.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":null,"def":{"name":"max_age","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@max_age"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/Controller","path":"Athena/Routing/Controller.html","kind":"class","full_name":"Athena::Routing::Controller","name":"Controller","abstract":true,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The core of any framework is routing; how a route is tied to an action.  Athena takes an annotation based approach; an annotation, such as `ART::Get` is applied to an instance method of a controller class,\nwhich will be executed when that endpoint receives a request.  The annotation includes the path as well as any constraints that a parameter must meet in order for the route to be invoked.\n\nAdditional annotations also exist for setting a query param or a param converter.  See `ART::QueryParam` and `ART::ParamConverter` respectively.\n\nChild controllers must inherit from `ART::Controller` (or an abstract child of it).  Each request gets its own instance of the controller to better allow for DI via `Athena::DependencyInjection`.\n\nA route action can either return an `ART::Response`, or some other type.  If an `ART::Response` is returned, then it is used directly.  Otherwise an `ART::Events::View` is emitted to convert\nthe action result into an `ART::Response`.  By default, `ART::Listeners::View` will JSON encode the value if it is not handled earlier by another listener.\n\n### Example\nThe following controller shows examples of the various routing features of Athena.  `ART::Controller` also defines various macro DSLs, such as `ART::Controller.get` to make defining routes\nseem more Sinatra/Kemal like.  See the documentation on the macros for more details.\n\n```\nrequire \"athena\"\nrequire \"mime\"\n\n# The `ART::Prefix` annotation can be applied to a controller to define a prefix to use for all routes within `self`.\n@[ART::Prefix(\"athena\")]\nclass TestController < ART::Controller\n  # A GET endpoint returning an `ART::Response`.\n  @[ART::Get(\"/css\")]\n  def css : ART::Response\n    ART::Response.new \".some_class { color: blue; }\", headers: HTTP::Headers{\"content-type\" => MIME.from_extension(\".css\")}\n  end\n\n  # A GET endpoint using a param converter to render a template.\n  #\n  # Assumes there is a `User` object that exposes their name, and an `ART::ParamConverterInterface` to provide the user with the provided *id*.\n  # ```\n  # # user.ecr\n  # Morning, <%= user.name %> it is currently <%= time %>.\n  # ```\n  @[ART::ParamConverter(\"user\", converter: SomeConverter)]\n  @[ART::Get(\"/wakeup/:id\")]\n  def wakeup(user : User) : ART::Response\n    # Template variables not supplied in the action's arguments must be defined manually\n    time = Time.utc\n\n    # Creates an `ART::Response` with the content of rendering the template, also sets the content type to `text/html`.\n    render \"user.ecr\"\n  end\n\n  # A GET endpoint with no params returning a `String`.\n  #\n  # Action return type restrictions are required.\n  @[ART::Get(\"/me\")]\n  def get_me : String\n    \"Jim\"\n  end\n\n  # A GET endpoint with no params returning `Nil`.\n  # `Nil` return types are returned with a status\n  # of 204 no content\n  @[ART::Get(\"/no_content\")]\n  def get_no_content : Nil\n    # Do stuff\n  end\n\n  # A GET endpoint with two `Int32` params returning an `Int32`.\n  #\n  # The parameters of a route _MUST_ match the arguments of the action.\n  # Type restrictions on action arguments are required.\n  @[ART::Get(\"/add/:val1/:val2\")]\n  def add(val1 : Int32, val2 : Int32) : Int32\n    val1 + val2\n  end\n\n  # A GET endpoint with an `String` route param, and a required string query param that must match the given pattern; returning a `String`.\n  #\n  # A non-nilable type denotes it as required.  If the parameter is not supplied, and no default value is assigned, an `ART::Exceptions::BadRequest` exception is raised.\n  @[ART::QueryParam(\"time\", constraints: /\\d:\\d:\\d/)]\n  @[ART::Get(\"/event/:event_name/\")]\n  def event_time(event_name : String, time : String) : String\n    \"#{event_name} occurred at #{time}\"\n  end\n\n  # A GET endpoint with an optional query parameter and optional path param with a default value; returning a `NamedTuple(user_id : Int32?, page : Int32)`.\n  #\n  # A nilable type denotes it as optional.  If the parameter is not supplied (or could not be converted), and no default value is assigned, it is `nil`.\n  @[ART::QueryParam(\"user_id\")]\n  @[ART::Get(\"/events/(:page)\")]\n  def events(user_id : Int32?, page : Int32 = 1) : NamedTuple(user_id: Int32?, page: Int32)\n    {user_id: user_id, page: page}\n  end\n\n  # A GET endpoint with param constraints.  The param must match the supplied Regex or it will not match and return a 404 error.\n  @[ART::Get(\"/time/:time/\", constraints: {\"time\" => /\\d{2}:\\d{2}:\\d{2}/})]\n  def get_constraint(time : String) : String\n    time\n  end\n\n  # A POST endpoint with a route param and accessing the request body; returning a `Bool`.\n  #\n  # It is recommended to use param converters to pass an actual object representing the data (assuming the body is JSON)\n  # to the route's action; however the raw request body can be accessed by typing an action argument as `HTTP::Request`.\n  @[ART::Post(\"/test/:expected\")]\n  def post_body(expected : String, request : HTTP::Request) : Bool\n    expected == request.body.try &.gets_to_end\n  end\nend\n\nART.run\n\n# GET /athena/css\"                     # => .some_class { color: blue; }\n# GET /athena/wakeup/17\"               # => Morning, Allison it is currently 2020-02-01 18:38:12 UTC.\n# GET /athena/me\"                      # => \"Jim\"\n# GET /athena/add/50/25\"               # => 75\n# GET /athena/event/foobar?time=1:1:1\" # => \"foobar occurred at 1:1:1\"\n# GET /athena/events\"                  # => {\"user_id\":null,\"page\":1}\n# GET /athena/events/17?user_id=19\"    # => {\"user_id\":19,\"page\":17}\n# GET /athena/time/12:45:30\"           # => \"12:45:30\"\n# GET /athena/time/12:aa:30\"           # => 404 not found\n# GET /athena/no_content\"              # => 204 no content\n# POST /athena/test/foo\", body: \"foo\"  # => true\n```","summary":"<p>The core of any framework is routing; how a route is tied to an action.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"redirect(url:String,status:HTTP::Status=HTTP::Status::FOUND):ART::RedirectResponse-instance-method","html_id":"redirect(url:String,status:HTTP::Status=HTTP::Status::FOUND):ART::RedirectResponse-instance-method","name":"redirect","doc":"Returns an `ART::RedirectResponse` to the provided *url*, optionally with the provided *status*.\n\n```\nclass ExampleController < ART::Controller\n  @[ART::Get(\"redirect_to_google\")]\n  def redirect_to_google : ART::RedirectResponse\n    redirect \"https://google.com\"\n  end\nend\n```","summary":"<p>Returns an <code><a href=\"../../Athena/Routing/RedirectResponse.html\">ART::RedirectResponse</a></code> to the provided <em>url</em>, optionally with the provided <em>status</em>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"status","doc":null,"default_value":"HTTP::Status::FOUND","external_name":"status","restriction":"HTTP::Status"}],"args_string":"(url : String, status : HTTP::Status = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Status</span><span class=\"t\">::</span><span class=\"t\">FOUND</span>) : ART::RedirectResponse","source_link":null,"def":{"name":"redirect","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"status","doc":null,"default_value":"HTTP::Status::FOUND","external_name":"status","restriction":"HTTP::Status"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::RedirectResponse","visibility":"Public","body":"ART::RedirectResponse.new(url, status)"}}],"macros":[{"id":"delete(path,*args,**named_args,&)-macro","html_id":"delete(path,*args,**named_args,&amp;)-macro","name":"delete","doc":"Helper DSL macro for creating `DELETE` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  delete \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>DELETE</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":null,"def":{"name":"delete","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ART::Delete(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def delete_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"get(path,*args,**named_args,&)-macro","html_id":"get(path,*args,**named_args,&amp;)-macro","name":"get","doc":"Helper DSL macro for creating `GET` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  get \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>GET</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":null,"def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ART::Get(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def get_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"link(path,*args,**named_args,&)-macro","html_id":"link(path,*args,**named_args,&amp;)-macro","name":"link","doc":"Helper DSL macro for creating `LINK` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  link \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>LINK</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":null,"def":{"name":"link","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ART::Link(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def link_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"patch(path,*args,**named_args,&)-macro","html_id":"patch(path,*args,**named_args,&amp;)-macro","name":"patch","doc":"Helper DSL macro for creating `PATCH` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  patch \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>PATCH</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":null,"def":{"name":"patch","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ART::Patch(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def patch_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"post(path,*args,**named_args,&)-macro","html_id":"post(path,*args,**named_args,&amp;)-macro","name":"post","doc":"Helper DSL macro for creating `POST` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  post \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>POST</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":null,"def":{"name":"post","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ART::Post(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def post_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"put(path,*args,**named_args,&)-macro","html_id":"put(path,*args,**named_args,&amp;)-macro","name":"put","doc":"Helper DSL macro for creating `PUT` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  put \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>PUT</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":null,"def":{"name":"put","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ART::Put(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def put_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}},{"id":"render(template)-macro","html_id":"render(template)-macro","name":"render","doc":"Renders a template.\n\nUses `ECR` to render the *template*, creating an `ART::Response` with its rendered content and adding a `text/html` `content-type` header.\n\nThe response can be modified further before returning it if needed.\n\nVariables used within the template must be defined within the action's body manually if they are not provided within the action's arguments.\n\n```\n# greeting.ecr\nGreetings, <%= name %>!\n\n# example_controller.cr\nclass ExampleController < ART::Controller\n  @[ART::Get(\"/:name\")]\n  def greet(name : String) : ART::Response\n    render \"greeting.ecr\"\n  end\nend\n\nART.run\n\n# GET /Fred # => Greetings, Fred!\n```","summary":"<p>Renders a template.</p>","abstract":false,"args":[{"name":"template","doc":null,"default_value":"","external_name":"template","restriction":""}],"args_string":"(template)","source_link":null,"def":{"name":"render","args":[{"name":"template","doc":null,"default_value":"","external_name":"template","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    Athena::Routing::Response.new(headers: HTTP::Headers\n{\"content-type\" => \"text/html\"}) do |io|\n      ECR.embed \n{{ template }}\n, io\n    \nend\n  \n"}},{"id":"render(template,layout)-macro","html_id":"render(template,layout)-macro","name":"render","doc":"Renders a template within a layout.\n```\n# layout.ecr\n<h1>Content:</h1> <%= content -%>\n\n# greeting.ecr\nGreetings, <%= name %>!\n\n# example_controller.cr\nclass ExampleController < ART::Controller\n  @[ART::Get(\"/:name\")]\n  def greet(name : String) : ART::Response\n    render \"greeting.ecr\", \"layout.ecr\"\n  end\nend\n\nART.run\n\n# GET /Fred # => <h1>Content:</h1> Greetings, Fred!\n```","summary":"<p>Renders a template within a layout.</p>","abstract":false,"args":[{"name":"template","doc":null,"default_value":"","external_name":"template","restriction":""},{"name":"layout","doc":null,"default_value":"","external_name":"layout","restriction":""}],"args_string":"(template, layout)","source_link":null,"def":{"name":"render","args":[{"name":"template","doc":null,"default_value":"","external_name":"template","restriction":""},{"name":"layout","doc":null,"default_value":"","external_name":"layout","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    content = ECR.render \n{{ template }}\n\n    \n{{ @type }}\n.render \n{{ layout }}\n\n  \n"}},{"id":"unlink(path,*args,**named_args,&)-macro","html_id":"unlink(path,*args,**named_args,&amp;)-macro","name":"unlink","doc":"Helper DSL macro for creating `UNLINK` actions.\n\nThe first argument is the path that the action should handle; which maps to path on the HTTP method annotation.\nThe second argument is a variable amount of arguments with a syntax similar to Crystal's `record`.\nThere are also a few optional named arguments that map to the corresponding field on the HTTP method annotation.\n\nThe macro simply defines a method based on the options passed to it.  Additional annotations, such as for query params\nor a param converter can simply be added on top of the macro.\n\n### Optional Named Arguments\n- `return_type` - The return type to set for the action.  Defaults to `String` if not provided.\n- `constraints` - Any constraints that should be applied to the route.\n\n### Example\n\n```\nclass ExampleController < ART::Controller\n  unlink \"values/:value1/:value2\", value1 : Int32, value2 : Float64, constraints: {\"value1\" => /\\d+/, \"value2\" => /\\d+\\.\\d+/} do\n    \"Value1: #{value1} - Value2: #{value2}\"\n  end\nend\n```","summary":"<p>Helper DSL macro for creating <code>UNLINK</code> actions.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(path, *args, **named_args, &)","source_link":null,"def":{"name":"unlink","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},"visibility":"Public","body":"        @[ART::Unlink(path: \n{{ path }}\n, constraints: \n{{ named_args[:constraints] }}\n)]\n        def unlink_\n{{ (path.gsub(/\\W/, \"_\")).id }}\n(\n{{ *args }}\n) : \n{{ named_args[:return_type] || String }}\n\n          \n{{ yield }}\n\n        \nend\n      \n"}}],"types":[]},{"html_id":"athena/Athena/Routing/Delete","path":"Athena/Routing/Delete.html","kind":"annotation","full_name":"Athena::Routing::Delete","name":"Delete","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines a `DELETE` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ART::Delete(path: \"/users/:id\")]\ndef delete_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a <code>DELETE</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/ErrorRenderer","path":"Athena/Routing/ErrorRenderer.html","kind":"struct","full_name":"Athena::Routing::ErrorRenderer","name":"ErrorRenderer","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Routing/ErrorRendererInterface","kind":"module","full_name":"Athena::Routing::ErrorRendererInterface","name":"ErrorRendererInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/ErrorRendererInterface","kind":"module","full_name":"Athena::Routing::ErrorRendererInterface","name":"ErrorRendererInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The default `ART::ErrorRendererInterface`, JSON serializes the exception.","summary":"<p>The default <code><a href=\"../../Athena/Routing/ErrorRendererInterface.html\">ART::ErrorRendererInterface</a></code>, JSON serializes the exception.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"render(exception:Exception):ART::Response-instance-method","html_id":"render(exception:Exception):ART::Response-instance-method","name":"render","doc":"Renders the given *exception* into an `ART::Response`.","summary":"<p>Renders the given <em>exception</em> into an <code><a href=\"../../Athena/Routing/Response.html\">ART::Response</a></code>.</p>","abstract":false,"args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"args_string":"(exception : Exception) : ART::Response","source_link":null,"def":{"name":"render","args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Response","visibility":"Public","body":"if exception.is_a?(ART::Exceptions::HTTPException)\n  status = exception.status\n  headers = exception.headers\nelse\n  status = HTTP::Status::INTERNAL_SERVER_ERROR\n  headers = HTTP::Headers.new\nend\nheaders[\"content-type\"] = \"application/json\"\nART::Response.new(status, headers) do |io|\n  exception.to_json(io)\nend\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/ErrorRendererInterface","path":"Athena/Routing/ErrorRendererInterface.html","kind":"module","full_name":"Athena::Routing::ErrorRendererInterface","name":"ErrorRendererInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/ErrorRenderer","kind":"struct","full_name":"Athena::Routing::ErrorRenderer","name":"ErrorRenderer"}],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"An `ART::ErrorRendererInterface` converts an `::Exception` into an `ART::Response`.\n\nBy default, exceptions are JSON serialized via `ART::ErrorRenderer`.  However, it can be overridden\nto allow rendering errors differently, such as via HTML.\n\n```\nrequire \"athena\"\n\n# Alias this service to be used when the `ART::ErrorRendererInterface` type is encountered.\n@[ADI::Register(alias: ART::ErrorRendererInterface)]\nstruct Athena::Routing::CustomErrorRenderer\n  include Athena::Routing::ErrorRendererInterface\n\n  # :inherit:\n  def render(exception : ::Exception) : ART::Response\n    if exception.is_a? ART::Exceptions::HTTPException\n      status = exception.status\n      headers = exception.headers\n    else\n      status = HTTP::Status::INTERNAL_SERVER_ERROR\n      headers = HTTP::Headers.new\n    end\n\n    body = <<-HTML\n      <html>\n        <head>\n          <title>Uh oh</title>\n        </head>\n        <body>\n          <h1>Uh oh, something went wrong</h1>\n        </body>\n      </html>\n    HTML\n\n    headers[\"content-type\"] = \"text/html\"\n\n    ART::Response.new body, status, headers\n  end\nend\n\nclass TestController < ART::Controller\n  get \"/\" do\n    raise \"some error\"\n  end\nend\n\nART.run\n\n# GET / # =>   <html><head><title>Uh oh</title></head><body><h1>Uh oh, something went wrong</h1></body></html>\n```","summary":"<p>An <code><a href=\"../../Athena/Routing/ErrorRendererInterface.html\">ART::ErrorRendererInterface</a></code> converts an <code>::Exception</code> into an <code><a href=\"../../Athena/Routing/Response.html\">ART::Response</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"render(exception:Exception):ART::Response-instance-method","html_id":"render(exception:Exception):ART::Response-instance-method","name":"render","doc":"Renders the given *exception* into an `ART::Response`.","summary":"<p>Renders the given <em>exception</em> into an <code><a href=\"../../Athena/Routing/Response.html\">ART::Response</a></code>.</p>","abstract":true,"args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"args_string":"(exception : Exception) : ART::Response","source_link":null,"def":{"name":"render","args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Response","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events","path":"Athena/Routing/Events.html","kind":"module","full_name":"Athena::Routing::Events","name":"Events","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The `AED::Event` that are emitted via `Athena::EventDispatcher` to handle a request during its life-cycle.\nCustom events can also be defined and dispatched within a controller, listener, or some other service.\n\nSee each specific event for more detailed information.","summary":"<p>The <code><a href=\"../../Athena/EventDispatcher/Event.html\">AED::Event</a></code> that are emitted via <code><a href=\"../../Athena/EventDispatcher.html\">Athena::EventDispatcher</a></code> to handle a request during its life-cycle.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Events/Exception","path":"Athena/Routing/Events/Exception.html","kind":"class","full_name":"Athena::Routing::Events::Exception","name":"Exception","abstract":false,"superclass":{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/Routing/Events/SettableResponse","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse"},{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/Routing/Events/SettableResponse","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted when an exception occurs.  See `ART::Exceptions` for more information on how exception handling works in Athena.\n\nThis event can be listened on to recover from errors or to modify the exception before it's rendered.","summary":"<p>Emitted when an exception occurs.</p>","class_methods":[],"constructors":[{"id":"new(request:HTTP::Request,exception:::Exception)-class-method","html_id":"new(request:HTTP::Request,exception:::Exception)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"args_string":"(request : HTTP::Request, exception : ::Exception)","source_link":null,"def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request, exception)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"exception:::Exception-instance-method","html_id":"exception:::Exception-instance-method","name":"exception","doc":"The `::Exception` associated with `self`.\n\nCan be replaced by an `ART::Listeners::Error`.","summary":"<p>The <code>::Exception</code> associated with <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : ::Exception","source_link":null,"def":{"name":"exception","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Exception","visibility":"Public","body":"@exception"}},{"id":"exception=(exception:::Exception)-instance-method","html_id":"exception=(exception:::Exception)-instance-method","name":"exception=","doc":"The `::Exception` associated with `self`.\n\nCan be replaced by an `ART::Listeners::Error`.","summary":"<p>The <code>::Exception</code> associated with <code>self</code>.</p>","abstract":false,"args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"args_string":"(exception : ::Exception)","source_link":null,"def":{"name":"exception=","args":[{"name":"exception","doc":null,"default_value":"","external_name":"exception","restriction":"::Exception"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@exception = exception"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events/Request","path":"Athena/Routing/Events/Request.html","kind":"class","full_name":"Athena::Routing::Events::Request","name":"Request","abstract":false,"superclass":{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/Routing/Events/SettableResponse","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse"},{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/Routing/Events/SettableResponse","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted very early in the request's life-cycle; before the corresponding `ART::Action` (if any) has been resolved.\n\nThis event can be listened on to add information to the request, or return a response before even triggering the router; `ART::Listeners::CORS` is an example of this.","summary":"<p>Emitted very early in the request's life-cycle; before the corresponding <code><a href=\"../../../Athena/Routing/Action.html\">ART::Action</a></code> (if any) has been resolved.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events/RequestAware","path":"Athena/Routing/Events/RequestAware.html","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/Events/Exception","kind":"class","full_name":"Athena::Routing::Events::Exception","name":"Exception"},{"html_id":"athena/Athena/Routing/Events/Request","kind":"class","full_name":"Athena::Routing::Events::Request","name":"Request"},{"html_id":"athena/Athena/Routing/Events/Response","kind":"class","full_name":"Athena::Routing::Events::Response","name":"Response"},{"html_id":"athena/Athena/Routing/Events/Terminate","kind":"class","full_name":"Athena::Routing::Events::Terminate","name":"Terminate"},{"html_id":"athena/Athena/Routing/Events/View","kind":"class","full_name":"Athena::Routing::Events::View","name":"View"}],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Represents an event that has access to the current request object.","summary":"<p>Represents an event that has access to the current request object.</p>","class_methods":[],"constructors":[{"id":"new(request:HTTP::Request)-class-method","html_id":"new(request:HTTP::Request)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request)","source_link":null,"def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"request:HTTP::Request-instance-method","html_id":"request:HTTP::Request-instance-method","name":"request","doc":"Returns the current request object.","summary":"<p>Returns the current request object.</p>","abstract":false,"args":[],"args_string":" : HTTP::Request","source_link":null,"def":{"name":"request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Request","visibility":"Public","body":"@request"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events/Response","path":"Athena/Routing/Events/Response.html","kind":"class","full_name":"Athena::Routing::Events::Response","name":"Response","abstract":false,"superclass":{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted after the route's action has been executed, but before the response has been sent.\n\nThis event can be listened on to modify the response object further before it is returned;\nsuch as adding headers/cookies, compressing the response, etc.","summary":"<p>Emitted after the route's action has been executed, but before the response has been sent.</p>","class_methods":[],"constructors":[{"id":"new(request:HTTP::Request,response:ART::Response)-class-method","html_id":"new(request:HTTP::Request,response:ART::Response)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"args_string":"(request : HTTP::Request, response : ART::Response)","source_link":null,"def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request, response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"response:ART::Response-instance-method","html_id":"response:ART::Response-instance-method","name":"response","doc":"The response object.","summary":"<p>The response object.</p>","abstract":false,"args":[],"args_string":" : ART::Response","source_link":null,"def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Response","visibility":"Public","body":"@response"}},{"id":"response=(response:ART::Response)-instance-method","html_id":"response=(response:ART::Response)-instance-method","name":"response=","doc":"The response object.","summary":"<p>The response object.</p>","abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"args_string":"(response : ART::Response)","source_link":null,"def":{"name":"response=","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@response = response"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events/SettableResponse","path":"Athena/Routing/Events/SettableResponse.html","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Routing/Events/Exception","kind":"class","full_name":"Athena::Routing::Events::Exception","name":"Exception"},{"html_id":"athena/Athena/Routing/Events/Request","kind":"class","full_name":"Athena::Routing::Events::Request","name":"Request"},{"html_id":"athena/Athena/Routing/Events/View","kind":"class","full_name":"Athena::Routing::Events::View","name":"View"}],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Represents an event where an `ART::Response` can be set on `self` to handle the original `HTTP::Request`.","summary":"<p>Represents an event where an <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code> can be set on <code>self</code> to handle the original <code><a href=\"../../../HTTP/Request.html\">HTTP::Request</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"response:ART::Response?-instance-method","html_id":"response:ART::Response?-instance-method","name":"response","doc":"The response object, if any.","summary":"<p>The response object, if any.</p>","abstract":false,"args":[],"args_string":" : ART::Response?","source_link":null,"def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Response | ::Nil","visibility":"Public","body":"@response"}},{"id":"response=(response:ART::Response):Nil-instance-method","html_id":"response=(response:ART::Response):Nil-instance-method","name":"response=","doc":"Sets the *response* that will be returned for the current `HTTP::Request` being handled.\n\nPropagation of `self` will stop once `#response=` is called.","summary":"<p>Sets the <em>response</em> that will be returned for the current <code><a href=\"../../../HTTP/Request.html\">HTTP::Request</a></code> being handled.</p>","abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"args_string":"(response : ART::Response) : Nil","source_link":null,"def":{"name":"response=","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@response = response\nstop_propagation\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events/Terminate","path":"Athena/Routing/Events/Terminate.html","kind":"class","full_name":"Athena::Routing::Events::Terminate","name":"Terminate","abstract":false,"superclass":{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted very late in the request's life-cycle, after the response has been sent.\n\nThis event can be listened on to perform tasks that are not required to finish before the response is sent; such as sending emails, or other \"heavy\" tasks.","summary":"<p>Emitted very late in the request's life-cycle, after the response has been sent.</p>","class_methods":[],"constructors":[{"id":"new(request:HTTP::Request,response:ART::Response)-class-method","html_id":"new(request:HTTP::Request,response:ART::Response)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"args_string":"(request : HTTP::Request, response : ART::Response)","source_link":null,"def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"ART::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request, response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"response:ART::Response-instance-method","html_id":"response:ART::Response-instance-method","name":"response","doc":"The response object.","summary":"<p>The response object.</p>","abstract":false,"args":[],"args_string":" : ART::Response","source_link":null,"def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::Response","visibility":"Public","body":"@response"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Events/View","path":"Athena/Routing/Events/View.html","kind":"class","full_name":"Athena::Routing::Events::View","name":"View","abstract":false,"superclass":{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},"ancestors":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/Routing/Events/SettableResponse","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse"},{"html_id":"athena/Athena/EventDispatcher/Event","kind":"class","full_name":"Athena::EventDispatcher::Event","name":"Event"},{"html_id":"athena/Athena/EventDispatcher/StoppableEvent","kind":"module","full_name":"Athena::EventDispatcher::StoppableEvent","name":"StoppableEvent"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Routing/Events/RequestAware","kind":"module","full_name":"Athena::Routing::Events::RequestAware","name":"RequestAware"},{"html_id":"athena/Athena/Routing/Events/SettableResponse","kind":"module","full_name":"Athena::Routing::Events::SettableResponse","name":"SettableResponse"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Events","kind":"module","full_name":"Athena::Routing::Events","name":"Events"},"doc":"Emitted after the route's action has been executed, but only if it does _NOT_ return an `ART::Response`.\n\nThis event can be listened on to handle converting a non `ART::Response` into an `ART::Response`.\n\nSee `ART::Listeners::View`.","summary":"<p>Emitted after the route's action has been executed, but only if it does <em>NOT</em> return an <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(request:HTTP::Request,action_result:_)-class-method","html_id":"new(request:HTTP::Request,action_result:_)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"action_result","doc":null,"default_value":"","external_name":"action_result","restriction":"_"}],"args_string":"(request : HTTP::Request, action_result : _)","source_link":null,"def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"action_result","doc":null,"default_value":"","external_name":"action_result","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request, action_result)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"action_result-instance-method","html_id":"action_result-instance-method","name":"action_result","doc":"Returns the value returned from the related controller action.","summary":"<p>Returns the value returned from the related controller action.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"action_result","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@result.data"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/Exceptions","path":"Athena/Routing/Exceptions.html","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Exception handling in Athena is similar to exception handling in any Crystal program, with the addition of a new unique exception type, `ART::Exceptions::HTTPException`.\n\nWhen an exception is raised, Athena emits the `ART::Events::Exception` event to allow an opportunity for it to be handled.  If the exception goes unhandled, i.e. no listener set\nan `ART::Response` on the event, then the request is finished and the exception is reraised.  Otherwise, that response is returned, setting the status and merging the headers on the exceptions\nif it is an `ART::Exceptions::HTTPException`. See `ART::Listeners::Error` and `ART::ErrorRendererInterface` for more information on how exceptions are handled by default.\n\nTo provide the best response to the client, non `ART::Exceptions::HTTPException` should be rescued and converted into a corresponding `ART::Exceptions::HTTPException`.\nCustom HTTP errors can also be defined by inheriting from `ART::Exceptions::HTTPException` or a child type.  A use case for this could be allowing for additional data/context to be included\nwithin the exception that ultimately could be used in a `ART::Events::Exception` listener.","summary":"<p>Exception handling in Athena is similar to exception handling in any Crystal program, with the addition of a new unique exception type, <code><a href=\"../../Athena/Routing/Exceptions/HTTPException.html\">ART::Exceptions::HTTPException</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Exceptions/BadGateway","path":"Athena/Routing/Exceptions/BadGateway.html","kind":"class","full_name":"Athena::Routing::Exceptions::BadGateway","name":"BadGateway","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/BadRequest","path":"Athena/Routing/Exceptions/BadRequest.html","kind":"class","full_name":"Athena::Routing::Exceptions::BadRequest","name":"BadRequest","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/Conflict","path":"Athena/Routing/Exceptions/Conflict.html","kind":"class","full_name":"Athena::Routing::Exceptions::Conflict","name":"Conflict","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/Forbidden","path":"Athena/Routing/Exceptions/Forbidden.html","kind":"class","full_name":"Athena::Routing::Exceptions::Forbidden","name":"Forbidden","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/Gone","path":"Athena/Routing/Exceptions/Gone.html","kind":"class","full_name":"Athena::Routing::Exceptions::Gone","name":"Gone","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","path":"Athena/Routing/Exceptions/HTTPException.html","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException","abstract":false,"superclass":{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Exceptions/BadGateway","kind":"class","full_name":"Athena::Routing::Exceptions::BadGateway","name":"BadGateway"},{"html_id":"athena/Athena/Routing/Exceptions/BadRequest","kind":"class","full_name":"Athena::Routing::Exceptions::BadRequest","name":"BadRequest"},{"html_id":"athena/Athena/Routing/Exceptions/Conflict","kind":"class","full_name":"Athena::Routing::Exceptions::Conflict","name":"Conflict"},{"html_id":"athena/Athena/Routing/Exceptions/Forbidden","kind":"class","full_name":"Athena::Routing::Exceptions::Forbidden","name":"Forbidden"},{"html_id":"athena/Athena/Routing/Exceptions/Gone","kind":"class","full_name":"Athena::Routing::Exceptions::Gone","name":"Gone"},{"html_id":"athena/Athena/Routing/Exceptions/LengthRequired","kind":"class","full_name":"Athena::Routing::Exceptions::LengthRequired","name":"LengthRequired"},{"html_id":"athena/Athena/Routing/Exceptions/MethodNotAllowed","kind":"class","full_name":"Athena::Routing::Exceptions::MethodNotAllowed","name":"MethodNotAllowed"},{"html_id":"athena/Athena/Routing/Exceptions/NotAcceptable","kind":"class","full_name":"Athena::Routing::Exceptions::NotAcceptable","name":"NotAcceptable"},{"html_id":"athena/Athena/Routing/Exceptions/NotFound","kind":"class","full_name":"Athena::Routing::Exceptions::NotFound","name":"NotFound"},{"html_id":"athena/Athena/Routing/Exceptions/NotImplemented","kind":"class","full_name":"Athena::Routing::Exceptions::NotImplemented","name":"NotImplemented"},{"html_id":"athena/Athena/Routing/Exceptions/PreconditionFailed","kind":"class","full_name":"Athena::Routing::Exceptions::PreconditionFailed","name":"PreconditionFailed"},{"html_id":"athena/Athena/Routing/Exceptions/ServiceUnavailable","kind":"class","full_name":"Athena::Routing::Exceptions::ServiceUnavailable","name":"ServiceUnavailable"},{"html_id":"athena/Athena/Routing/Exceptions/TooManyRequests","kind":"class","full_name":"Athena::Routing::Exceptions::TooManyRequests","name":"TooManyRequests"},{"html_id":"athena/Athena/Routing/Exceptions/Unauthorized","kind":"class","full_name":"Athena::Routing::Exceptions::Unauthorized","name":"Unauthorized"},{"html_id":"athena/Athena/Routing/Exceptions/UnprocessableEntity","kind":"class","full_name":"Athena::Routing::Exceptions::UnprocessableEntity","name":"UnprocessableEntity"},{"html_id":"athena/Athena/Routing/Exceptions/UnsupportedMediaType","kind":"class","full_name":"Athena::Routing::Exceptions::UnsupportedMediaType","name":"UnsupportedMediaType"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":"Represents an HTTP error.\n\nEach child represents a specific HTTP error with the associated status code.\nAlso optionally allows adding headers to the resulting response.\n\nCan be used directly/inherited from to represent non-typical HTTP errors/codes.","summary":"<p>Represents an HTTP error.</p>","class_methods":[],"constructors":[{"id":"new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Instantiates `self` with the given *status* and *message*.\n\nOptionally includes *cause*, and *headers*.","summary":"<p>Instantiates <code>self</code> with the given <em>status</em> and <em>message</em>.</p>","abstract":false,"args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"HTTP::Status"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(status : HTTP::Status, message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"status","doc":null,"default_value":"","external_name":"status","restriction":"HTTP::Status"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(status, message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(status_code:Int32,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(status_code:Int32,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Instantiates `self` with the given *status_code* and *message*.\n\nOptionally includes *cause*, and *headers*.","summary":"<p>Instantiates <code>self</code> with the given <em>status_code</em> and <em>message</em>.</p>","abstract":false,"args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":"Int32"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(status_code : Int32, message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":"Int32"},{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(HTTP::Status.new(status_code), message, cause, headers)"}}],"instance_methods":[{"id":"headers:HTTP::Headers-instance-method","html_id":"headers:HTTP::Headers-instance-method","name":"headers","doc":"Any HTTP response headers associated with `self`.\n\nSome HTTP errors use response headers to give additional information about `self`.","summary":"<p>Any HTTP response headers associated with <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : HTTP::Headers","source_link":null,"def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Headers","visibility":"Public","body":"@headers"}},{"id":"headers=(headers:HTTP::Headers)-instance-method","html_id":"headers=(headers:HTTP::Headers)-instance-method","name":"headers=","doc":"Any HTTP response headers associated with `self`.\n\nSome HTTP errors use response headers to give additional information about `self`.","summary":"<p>Any HTTP response headers associated with <code>self</code>.</p>","abstract":false,"args":[{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(headers : HTTP::Headers)","source_link":null,"def":{"name":"headers=","args":[{"name":"headers","doc":null,"default_value":"","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers = headers"}},{"id":"status:HTTP::Status-instance-method","html_id":"status:HTTP::Status-instance-method","name":"status","doc":"The `HTTP::Status` associated with `self`.","summary":"<p>The <code>HTTP::Status</code> associated with <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : HTTP::Status","source_link":null,"def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Status","visibility":"Public","body":"@status"}},{"id":"status_code:Int32-instance-method","html_id":"status_code:Int32-instance-method","name":"status_code","doc":"Returns the HTTP status code of `#status`.","summary":"<p>Returns the HTTP status code of <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#status:HTTP::Status-instance-method\">#status</a></code>.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":null,"def":{"name":"status_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@status.value"}},{"id":"to_json(builder:JSON::Builder):Nil-instance-method","html_id":"to_json(builder:JSON::Builder):Nil-instance-method","name":"to_json","doc":"Serializes `self` to JSON in the format of `{\"code\":400,\"message\":\"Exception message\"}`","summary":"<p>Serializes <code>self</code> to JSON in the format of <code>{\"code\":400,\"message\":\"Exception message\"}</code></p>","abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"args_string":"(builder : JSON::Builder) : Nil","source_link":null,"def":{"name":"to_json","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"builder.object do\n  builder.field(\"code\", self.status_code)\n  builder.field(\"message\", @message)\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/LengthRequired","path":"Athena/Routing/Exceptions/LengthRequired.html","kind":"class","full_name":"Athena::Routing::Exceptions::LengthRequired","name":"LengthRequired","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/MethodNotAllowed","path":"Athena/Routing/Exceptions/MethodNotAllowed.html","kind":"class","full_name":"Athena::Routing::Exceptions::MethodNotAllowed","name":"MethodNotAllowed","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/NotAcceptable","path":"Athena/Routing/Exceptions/NotAcceptable.html","kind":"class","full_name":"Athena::Routing::Exceptions::NotAcceptable","name":"NotAcceptable","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/NotFound","path":"Athena/Routing/Exceptions/NotFound.html","kind":"class","full_name":"Athena::Routing::Exceptions::NotFound","name":"NotFound","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/NotImplemented","path":"Athena/Routing/Exceptions/NotImplemented.html","kind":"class","full_name":"Athena::Routing::Exceptions::NotImplemented","name":"NotImplemented","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/PreconditionFailed","path":"Athena/Routing/Exceptions/PreconditionFailed.html","kind":"class","full_name":"Athena::Routing::Exceptions::PreconditionFailed","name":"PreconditionFailed","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/ServiceUnavailable","path":"Athena/Routing/Exceptions/ServiceUnavailable.html","kind":"class","full_name":"Athena::Routing::Exceptions::ServiceUnavailable","name":"ServiceUnavailable","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,retry_after:Number|String|Nil=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,retry_after:Number|String|Nil=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"See `Athena::Routing::Exceptions::HTTPException#new`.\n\nIf *retry_after* is provided, adds a `retry-after` header that represents the number of seconds or HTTP-date after which the request may be retried.","summary":"<p>See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"retry_after","doc":null,"default_value":"nil","external_name":"retry_after","restriction":"Number | String | Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, retry_after : Number | String | Nil = <span class=\"n\">nil</span>, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"retry_after","doc":null,"default_value":"nil","external_name":"retry_after","restriction":"Number | String | Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, retry_after, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/TooManyRequests","path":"Athena/Routing/Exceptions/TooManyRequests.html","kind":"class","full_name":"Athena::Routing::Exceptions::TooManyRequests","name":"TooManyRequests","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,retry_after:Number|String|Nil=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,retry_after:Number|String|Nil=nil,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"See `Athena::Routing::Exceptions::HTTPException#new`.\n\nIf *retry_after* is provided, adds a `retry-after` header that represents the number of seconds or HTTP-date after which the request may be retried.","summary":"<p>See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"retry_after","doc":null,"default_value":"nil","external_name":"retry_after","restriction":"Number | String | Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, retry_after : Number | String | Nil = <span class=\"n\">nil</span>, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"retry_after","doc":null,"default_value":"nil","external_name":"retry_after","restriction":"Number | String | Nil"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, retry_after, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/Unauthorized","path":"Athena/Routing/Exceptions/Unauthorized.html","kind":"class","full_name":"Athena::Routing::Exceptions::Unauthorized","name":"Unauthorized","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,challenge:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,challenge:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"See `Athena::Routing::Exceptions::HTTPException#new`.\n\nIncludes a `www-authenticate` header with the provided *challenge*.","summary":"<p>See <code><a href=\"../../../Athena/Routing/Exceptions/HTTPException.html#new(status:HTTP::Status,message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method\">Athena::Routing::Exceptions::HTTPException#new</a></code>.</p>","abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, challenge : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"challenge","doc":null,"default_value":"","external_name":"challenge","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, challenge, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/UnprocessableEntity","path":"Athena/Routing/Exceptions/UnprocessableEntity.html","kind":"class","full_name":"Athena::Routing::Exceptions::UnprocessableEntity","name":"UnprocessableEntity","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Exceptions/UnsupportedMediaType","path":"Athena/Routing/Exceptions/UnsupportedMediaType.html","kind":"class","full_name":"Athena::Routing::Exceptions::UnsupportedMediaType","name":"UnsupportedMediaType","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},"ancestors":[{"html_id":"athena/Athena/Routing/Exceptions/HTTPException","kind":"class","full_name":"Athena::Routing::Exceptions::HTTPException","name":"HTTPException"},{"html_id":"athena/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Exceptions","kind":"module","full_name":"Athena::Routing::Exceptions","name":"Exceptions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(message:String,cause:Exception?=nil,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(message : String, cause : Exception? = <span class=\"n\">nil</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"},{"name":"cause","doc":null,"default_value":"nil","external_name":"cause","restriction":"Exception | ::Nil"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, cause, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/Get","path":"Athena/Routing/Get.html","kind":"annotation","full_name":"Athena::Routing::Get","name":"Get","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines a `GET` endpoint.\n\nA corresponding `HEAD` endpoint is also defined.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ART::Get(path: \"/users/:id\")]\ndef get_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a <code>GET</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Link","path":"Athena/Routing/Link.html","kind":"annotation","full_name":"Athena::Routing::Link","name":"Link","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines a `LINK` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ART::Link(path: \"/users/:id\")]\ndef link_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a <code>LINK</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Listeners","path":"Athena/Routing/Listeners.html","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TAG","name":"TAG","value":"\"athena.event_dispatcher.listener\"","doc":"The tag name for Athena event listeners.","summary":"<p>The tag name for Athena event listeners.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The `AED::EventListenerInterface` that act upon `ART::Events` to handle a request.  Custom listeners can also be defined, see `AED::EventListenerInterface`.\n\nSee each listener for more detailed information.","summary":"<p>The <code><a href=\"../../Athena/EventDispatcher/EventListenerInterface.html\">AED::EventListenerInterface</a></code> that act upon <code><a href=\"../../Athena/Routing/Events.html\">ART::Events</a></code> to handle a request.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Listeners/CORS","path":"Athena/Routing/Listeners/CORS.html","kind":"struct","full_name":"Athena::Routing::Listeners::CORS","name":"CORS","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"SAFELISTED_HEADERS","name":"SAFELISTED_HEADERS","value":"[\"accept\", \"accept-language\", \"content-language\", \"content-type\", \"origin\"]","doc":"The [CORS-safelisted request-headers](https://fetch.spec.whatwg.org/#cors-safelisted-request-header).","summary":"<p>The <a href=\"https://fetch.spec.whatwg.org/#cors-safelisted-request-header\" target=\"_blank\">CORS-safelisted request-headers</a>.</p>"},{"id":"SAFELISTED_METHODS","name":"SAFELISTED_METHODS","value":"[\"GET\", \"POST\", \"HEAD\"]","doc":"The [CORS-safelisted methods](https://fetch.spec.whatwg.org/#cors-safelisted-method).","summary":"<p>The <a href=\"https://fetch.spec.whatwg.org/#cors-safelisted-method\" target=\"_blank\">CORS-safelisted methods</a>.</p>"}],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Listeners","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners"},"doc":"Handles [Cross-Origin Resource Sharing](https://enable-cors.org) (CORS).\n\nHandles CORS preflight `OPTIONS` requests as well as adding CORS headers to each response.\nSee `ART::Config::CORS` for information on configuring the listener.","summary":"<p>Handles <a href=\"https://enable-cors.org\" target=\"_blank\">Cross-Origin Resource Sharing</a> (CORS).</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":null,"def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::Request => 250, ART::Events::Response => 0}"}}],"constructors":[{"id":"new(configuration_resolver:ACF::ConfigurationResolverInterface)-class-method","html_id":"new(configuration_resolver:ACF::ConfigurationResolverInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"configuration_resolver","doc":null,"default_value":"","external_name":"configuration_resolver","restriction":"ACF::ConfigurationResolverInterface"}],"args_string":"(configuration_resolver : ACF::ConfigurationResolverInterface)","source_link":null,"def":{"name":"new","args":[{"name":"configuration_resolver","doc":null,"default_value":"","external_name":"configuration_resolver","restriction":"ACF::ConfigurationResolverInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(configuration_resolver)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Request, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":null,"def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"request = event.request\nrequest_headers = RequestHeaders.new(request.headers)\nif config = @configuration_resolver.resolve(ART::Config::CORS)\nelse\n  return\nend\nif request.headers.has_key?(\"origin\")\nelse\n  return\nend\nif (request.method == \"OPTIONS\") && request_headers.has_request_method?\n  return event.response = set_preflight_response(config, event.request)\nend\nif check_origin(config, event.request)\nelse\n  return\nend\nevent.request.attributes.set(ALLOW_SET_ORIGIN, true, Bool)\n"}},{"id":"call(event:ART::Events::Response,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Response,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Response"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Response, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":null,"def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Response"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if event.request.attributes.get?(ALLOW_SET_ORIGIN)\nelse\n  return\nend\nif config = @configuration_resolver.resolve(ART::Config::CORS)\nelse\n  return\nend\nrequest_headers = RequestHeaders.new(event.request.headers)\nresponse_headers = ResponseHeaders.new(event.response.headers)\nresponse_headers.allow_origin = request_headers.origin\nresponse_headers.allow_credentials = config.allow_credentials\nresponse_headers.expose_headers = config.expose_headers\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Listeners/Error","path":"Athena/Routing/Listeners/Error.html","kind":"struct","full_name":"Athena::Routing::Listeners::Error","name":"Error","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Listeners","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners"},"doc":"Handles an exception by converting it into an `ART::Response` via an `ART::ErrorRendererInterface`.","summary":"<p>Handles an exception by converting it into an <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code> via an <code><a href=\"../../../Athena/Routing/ErrorRendererInterface.html\">ART::ErrorRendererInterface</a></code>.</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":null,"def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::Exception => -50}"}}],"constructors":[{"id":"new(error_renderer:ART::ErrorRendererInterface)-class-method","html_id":"new(error_renderer:ART::ErrorRendererInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"error_renderer","doc":null,"default_value":"","external_name":"error_renderer","restriction":"ART::ErrorRendererInterface"}],"args_string":"(error_renderer : ART::ErrorRendererInterface)","source_link":null,"def":{"name":"new","args":[{"name":"error_renderer","doc":null,"default_value":"","external_name":"error_renderer","restriction":"ART::ErrorRendererInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(error_renderer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(event:ART::Events::Exception,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Exception,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Exception"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Exception, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":null,"def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Exception"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"begin\n  exception = event.exception\n  log_exception(exception) do\n    \"Uncaught exception #{exception.inspect} at #{exception.backtrace?.try(&.first)}\"\n  end\n  event.response = @error_renderer.render(event.exception)\nrescue ex : Exception\n  log_exception(ex) do\n    \"Exception raised when handling an exception #{ex.inspect} at #{ex.backtrace?.try(&.first)}\"\n  end\n  raise(ex)\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Listeners/ParamConverter","path":"Athena/Routing/Listeners/ParamConverter.html","kind":"struct","full_name":"Athena::Routing::Listeners::ParamConverter","name":"ParamConverter","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Listeners","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners"},"doc":"Applies any `ART::ParamConverterInterface` defined on a given `ART::Action`.\n\nInjects all `ART::ParamConverterInterface` tagged with `ART::ParamConverterInterface::TAG`.","summary":"<p>Applies any <code><a href=\"../../../Athena/Routing/ParamConverterInterface.html\">ART::ParamConverterInterface</a></code> defined on a given <code><a href=\"../../../Athena/Routing/Action.html\">ART::Action</a></code>.</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":null,"def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::Request => -250}"}}],"constructors":[{"id":"new(param_converters:Array(ART::ParamConverterInterface))-class-method","html_id":"new(param_converters:Array(ART::ParamConverterInterface))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"param_converters","doc":null,"default_value":"","external_name":"param_converters","restriction":"Array(ART::ParamConverterInterface)"}],"args_string":"(param_converters : Array(ART::ParamConverterInterface))","source_link":null,"def":{"name":"new","args":[{"name":"param_converters","doc":null,"default_value":"","external_name":"param_converters","restriction":"Array(ART::ParamConverterInterface)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(param_converters)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Request, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":null,"def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"event.request.route.param_converters.each do |configuration|\n  @param_converters[configuration.converter].apply(event.request, configuration)\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Listeners/Routing","path":"Athena/Routing/Listeners/Routing.html","kind":"struct","full_name":"Athena::Routing::Listeners::Routing","name":"Routing","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Listeners","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners"},"doc":"Sets the related `ART::Action` on the current request using `ART::RouteResolver`.","summary":"<p>Sets the related <code><a href=\"../../../Athena/Routing/Action.html\">ART::Action</a></code> on the current request using <code><a href=\"../../../Athena/Routing/RouteResolver.html\">ART::RouteResolver</a></code>.</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":null,"def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::Request => 25}"}}],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::Request,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":"Assigns the resolved `ART::Action` and path parameters to the request.\n\nThe resolved route is dupped to avoid mutating the master copy in the singleton.","summary":"<p>Assigns the resolved <code><a href=\"../../../Athena/Routing/Action.html\">ART::Action</a></code> and path parameters to the request.</p>","abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::Request, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":null,"def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::Request"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"route = ART.route_resolver.resolve(event.request)\nrequest = event.request\nLOGGER.info(&.emit(\"Matched route #{request.path}\", uri: request.path, method: request.method, path_params: route.params, query_params: request.query_params.to_h))\nrequest.route = route.payload.not_nil!.dup\n(route.params.not_nil!.merge!(event.request.query_params.to_h)).each do |key, value|\n  event.request.attributes.set(key, value)\nend\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Listeners/View","path":"Athena/Routing/Listeners/View.html","kind":"struct","full_name":"Athena::Routing::Listeners::View","name":"View","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/EventDispatcher/EventListenerInterface","kind":"module","full_name":"Athena::EventDispatcher::EventListenerInterface","name":"EventListenerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Listeners","kind":"module","full_name":"Athena::Routing::Listeners","name":"Listeners"},"doc":"The view listener attempts to resolve a non `ART::Response` into an `ART::Response`.\nCurrently this is achieved by JSON serializing the controller action's resulting value;\neither via `Object#to_json` or `ASR::Serializer`, depending on what type the resulting value is.\n\nIn the future this listener will handle executing the correct view handler based on the\nregistered formats and the format that the initial `HTTP::Request` requires.\n\nTODO: Implement a format negotiation algorithm.","summary":"<p>The view listener attempts to resolve a non <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code> into an <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code>.</p>","class_methods":[{"id":"subscribed_events:AED::SubscribedEvents-class-method","html_id":"subscribed_events:AED::SubscribedEvents-class-method","name":"subscribed_events","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AED::SubscribedEvents","source_link":null,"def":{"name":"subscribed_events","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AED::SubscribedEvents","visibility":"Public","body":"AED::SubscribedEvents {ART::Events::View => 25}"}}],"constructors":[{"id":"new(serializer:ASR::SerializerInterface)-class-method","html_id":"new(serializer:ASR::SerializerInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"serializer","doc":null,"default_value":"","external_name":"serializer","restriction":"ASR::SerializerInterface"}],"args_string":"(serializer : ASR::SerializerInterface)","source_link":null,"def":{"name":"new","args":[{"name":"serializer","doc":null,"default_value":"","external_name":"serializer","restriction":"ASR::SerializerInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(serializer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(event:ART::Events::View,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","html_id":"call(event:ART::Events::View,dispatcher:AED::EventDispatcherInterface):Nil-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::View"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"args_string":"(event : ART::Events::View, dispatcher : AED::EventDispatcherInterface) : Nil","source_link":null,"def":{"name":"call","args":[{"name":"event","doc":null,"default_value":"","external_name":"event","restriction":"ART::Events::View"},{"name":"dispatcher","doc":null,"default_value":"","external_name":"dispatcher","restriction":"AED::EventDispatcherInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"route = event.request.route\nview = route.view\nif route.return_type == Nil\n  return event.response = ART::Response.new(status: view.has_custom_status? ? view.status : HTTP::Status::NO_CONTENT, headers: get_headers)\nend\nevent.response = ART::Response.new(headers: get_headers, status: view.status) do |io|\n  data = event.action_result\n  if data.is_a?(JSON::Serializable) && (!data.is_a?(ASR::Serializable))\n    data.to_json(io)\n  else\n    context = ASR::SerializationContext.new\n    context.groups = view.serialization_groups\n    context.emit_nil = view.emit_nil\n    @serializer.serialize(data, :json, io, context)\n  end\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/ParamConverter","path":"Athena/Routing/ParamConverter.html","kind":"annotation","full_name":"Athena::Routing::ParamConverter","name":"ParamConverter","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Applies an `ART::ParamConverterInterface` to a given argument.\n\nSee `ART::ParamConverterInterface` for more information on defining a param converter.\n\n## Fields\n\n* name : `String` - The name of the argument that should be converted, may also be provided as the first positional argument.\n* converter : `ART::ParamConverterInterface.class` - The `ART::ParamConverterInterface` that should be used to convert this argument.\n\n## Example\n\n```\n@[ART::Get(path: \"/multiply/:num\")]\n@[ART::ParamConverter(\"num\", converter: MultiplyConverter)]\ndef multiply(num : Int32) : Int32\n  num\nend\n```","summary":"<p>Applies an <code><a href=\"../../Athena/Routing/ParamConverterInterface.html\">ART::ParamConverterInterface</a></code> to a given argument.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/ParamConverterInterface","path":"Athena/Routing/ParamConverterInterface.html","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface","name":"ParamConverterInterface","abstract":true,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"TAG","name":"TAG","value":"\"athena.param_converter\"","doc":"The tag name to apply to `self` in order for it to be registered with `ART::Listeners::ParamConverter`.","summary":"<p>The tag name to apply to <code>self</code> in order for it to be registered with <code><a href=\"../../Athena/Routing/Listeners/ParamConverter.html\">ART::Listeners::ParamConverter</a></code>.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/TimeConverter","kind":"struct","full_name":"Athena::Routing::TimeConverter","name":"TimeConverter"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"A param converter allows applying custom logic in order to convert a primitive request parameter into a more complex type.\n\nA few common examples could be converting a date-time string into a `Time` object,\nconverting a user's id into an actual `User` object, or deserializing a request body into an instance of T.\n\n### Examples\n\nDefining a custom param converter requires the usage of two (optionally three) things:\n\n1. An implementation of `self` to define the conversion logic.\n1. The `ART::ParamConverter` annotation applied to an action to specify what argument should be converted, and what converter should be used.\n1. An optional `ART::ParamConverterInterface::ConfigurationInterface` instance to define extra configuration options that can be used within the `ART::ParamConverter` annotation.\n\nParam converters are registered as services, and as such, may use any other registered services as a dependency via DI.\n\n```\nrequire \"athena\"\n\n# Create a param converter struct to contain our conversion logic.\n@[ADI::Register]\nstruct MultiplyConverter < ART::ParamConverterInterface\n  # :inherit:\n  def apply(request : HTTP::Request, configuration : Configuration) : Nil\n    arg_name = configuration.name\n\n    # No need to continue if the request does not have a value for this argument.\n    # The converter could also be setup to only set a value if it hasn't been set already.\n    return unless request.attributes.has? arg_name\n\n    # Retieve the argument from the request's attributes as an Int32.\n    # Converters should also handle any errors that may occur,\n    # such as type conversion, validation, or business logic errors.\n    value = request.attributes.get arg_name, Int32\n\n    # Override the argument's value within the request attributes, restricted to `Int32` values.\n    request.attributes.set arg_name, value * 2, Int32\n  end\nend\n\nclass ParamConverterController < ART::Controller\n  # Use the ART::ParamConverter annotation to specify we want to use a param converter for the `num` argument, and that we want to use the `MultiplyConverter` for the conversion.\n  @[ART::Get(path: \"/multiply/:num\")]\n  @[ART::ParamConverter(\"num\", converter: MultiplyConverter)]\n  def multiply(num : Int32) : Int32\n    num\n  end\nend\n\nART.run\n\n# GET /multiply/3 # => 6\n```\n\n#### Additional Configuration\nBy default, the *configuration* argument to `#apply` contains the name of the argument that should be converted, and a reference to the class of `self`.\nHowever, it can be augmented with additional data by using the `ART::ParamConverterInterface.configuration` macro.\n\nFor example, lets enhance the previous example to allow specifying the multiplier, versus it being hard-coded as `2`.\n\n```\nrequire \"athena\"\n\n@[ADI::Register]\nstruct MultiplyConverter < ART::ParamConverterInterface\n  # Use the `configuration` macro to define the configuration object that `self` should use.\n  # Adds an additional argument to allow specifying the multiplier.\n  #\n  # Configuration data can be made optional by setting default values.\n  configuration by : Int32\n\n  # :inherit:\n  def apply(request : HTTP::Request, configuration : Configuration) : Nil\n    arg_name = configuration.name\n\n    return unless request.attributes.has? arg_name\n\n    value = request.attributes.get arg_name, Int32\n\n    # Use the multiplier from the configuration object.\n    request.attributes.set arg_name, value * configuration.by, Int32\n  end\nend\n\nclass ParamConverterController < ART::Controller\n  # Specify the multiplier to use for the conversion; in this case `4`.\n  @[ART::Get(path: \"/multiply/:num\")]\n  @[ART::ParamConverter(\"num\", converter: MultiplyConverter, by: 4)]\n  def multiply(num : Int32) : Int32\n    num\n  end\nend\n\nART.run\n\n# GET /multiply/3 # => 12\n```","summary":"<p>A param converter allows applying custom logic in order to convert a primitive request parameter into a more complex type.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"apply(request:HTTP::Request,configuration:Configuration):Nil-instance-method","html_id":"apply(request:HTTP::Request,configuration:Configuration):Nil-instance-method","name":"apply","doc":"Applies the conversion logic based on the provided *request* and *configuration*.\n\nMost commonly this involves setting/overriding a value stored in the request's `ART::ParameterBag` via `request.attributes`.","summary":"<p>Applies the conversion logic based on the provided <em>request</em> and <em>configuration</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"configuration","doc":null,"default_value":"","external_name":"configuration","restriction":"Configuration"}],"args_string":"(request : HTTP::Request, configuration : Configuration) : Nil","source_link":null,"def":{"name":"apply","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"configuration","doc":null,"default_value":"","external_name":"configuration","restriction":"Configuration"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"{% if @type < ART::ParamConverterInterface %}\n      # Manually check this in order to allow a global overload\n      {% @type.raise(\"abstract `def Athena::Routing::ParamConverterInterface#apply(request : HTTP::Request, configuration : Configuration)` must be implemented by #{@type}\") %}\n    {% end %}"}}],"macros":[{"id":"configuration(*args)-macro","html_id":"configuration(*args)-macro","name":"configuration","doc":"Helper macro for defining an `ART::ParamConverterInterface::ConfigurationInterface`; similar to the `record` macro.\nAccepts a variable amount of variable names, types, and optionally default values.\n\nSee the [Additional Configuration](./ParamConverterInterface.html#additional-configuration) example for more information.","summary":"<p>Helper macro for defining an <code><a href=\"../../Athena/Routing/ParamConverterInterface/ConfigurationInterface.html\">ART::ParamConverterInterface::ConfigurationInterface</a></code>; similar to the <code>record</code> macro.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":null,"def":{"name":"configuration","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"block_arg":null,"visibility":"Public","body":"    struct Configuration < ConfigurationInterface\n      \n{% for arg in args %}\n        getter {{ arg }}\n      {% end %}\n\n\n      def initialize(\n        name : String,\n        converter : ART::ParamConverterInterface.class,\n        \n{% for arg in args %}\n          @{{ arg }},\n        {% end %}\n\n      )\n        super name, converter\n      \nend\n    \nend\n  \n"}}],"types":[{"html_id":"athena/Athena/Routing/ParamConverterInterface/Configuration","path":"Athena/Routing/ParamConverterInterface/Configuration.html","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::Configuration","name":"Configuration","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/ParamConverterInterface/ConfigurationInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::ConfigurationInterface","name":"ConfigurationInterface"},"ancestors":[{"html_id":"athena/Athena/Routing/ParamConverterInterface/ConfigurationInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::ConfigurationInterface","name":"ConfigurationInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/ParamConverterInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface","name":"ParamConverterInterface"},"doc":"The default `ART::ParamConverterInterface::ConfigurationInterface` object to use\nif one was not defined via the `ART::ParamConverterInterface.configuration` macro.","summary":"<p>The default <code><a href=\"../../../Athena/Routing/ParamConverterInterface/ConfigurationInterface.html\">ART::ParamConverterInterface::ConfigurationInterface</a></code> object to use if one was not defined via the <code><a href=\"../../../Athena/Routing/ParamConverterInterface.html#configuration(*args)-macro\">ART::ParamConverterInterface.configuration</a></code> macro.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/ParamConverterInterface/ConfigurationInterface","path":"Athena/Routing/ParamConverterInterface/ConfigurationInterface.html","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::ConfigurationInterface","name":"ConfigurationInterface","abstract":true,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/ParamConverterInterface/Configuration","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::Configuration","name":"Configuration"},{"html_id":"athena/Athena/Routing/TimeConverter/Configuration","kind":"struct","full_name":"Athena::Routing::TimeConverter::Configuration","name":"Configuration"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/ParamConverterInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface","name":"ParamConverterInterface"},"doc":"Allows defining extra configuration data that can be supplied within the `ART::ParamConverter` annotation.\nBy default this type includes the name of the argument that should be converted and the\nthe `ART::ParamConverterInterface` that should be used for the conversion.\n\nSee the [Additional Configuration](../ParamConverterInterface.html#additional-configuration) example for more information.","summary":"<p>Allows defining extra configuration data that can be supplied within the <code><a href=\"../../../Athena/Routing/ParamConverter.html\">ART::ParamConverter</a></code> annotation.</p>","class_methods":[],"constructors":[{"id":"new(name:String,converter:ART::ParamConverterInterface.class)-class-method","html_id":"new(name:String,converter:ART::ParamConverterInterface.class)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"converter","doc":null,"default_value":"","external_name":"converter","restriction":"ART::ParamConverterInterface.class"}],"args_string":"(name : String, converter : <span class=\"t\">ART</span><span class=\"t\">::</span><span class=\"t\">ParamConverterInterface</span>.<span class=\"k\">class</span>)","source_link":null,"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"converter","doc":null,"default_value":"","external_name":"converter","restriction":"ART::ParamConverterInterface.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, converter)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"converter:ART::ParamConverterInterface.class-instance-method","html_id":"converter:ART::ParamConverterInterface.class-instance-method","name":"converter","doc":"The converter class that should be used to convert the argument.","summary":"<p>The converter class that should be used to convert the argument.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">ART</span><span class=\"t\">::</span><span class=\"t\">ParamConverterInterface</span>.<span class=\"k\">class</span>","source_link":null,"def":{"name":"converter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ART::ParamConverterInterface.class","visibility":"Public","body":"@converter"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"The name of the argument the converter should be applied to.","summary":"<p>The name of the argument the converter should be applied to.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/ParameterBag","path":"Athena/Routing/ParameterBag.html","kind":"struct","full_name":"Athena::Routing::ParameterBag","name":"ParameterBag","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"A container for storing key/value pairs.  Can be used to store arbitrary data within the context of a request.\nIt can be accessed via `HTTP::Request#attributes`.\n\n### Example\n\nFor example, an artbirary value can be stored in the attributes, and later provided as an action argument.\n\n```\nrequire \"athena\"\n\n# Define a request listener to add our value before the action is executed.\n@[ADI::Register]\nstruct TestListener\n  include AED::EventListenerInterface\n\n  def self.subscribed_events : AED::SubscribedEvents\n    AED::SubscribedEvents{\n      ART::Events::Request => 0,\n    }\n  end\n\n  def call(event : ART::Events::Request, dispatcher : AED::EventDispatcherInterface) : Nil\n    # Store our value within the request's attributes, restricted to a `String`.\n    event.request.attributes.set \"my_arg\", \"foo\", String\n  end\nend\n\nclass ExampleController < ART::Controller\n  # Define an action argument with the same name of the argument stored in attributes.\n  #\n  # The argument is resolved via `ART::Arguments::Resolvers::RequestAttribute`.\n  get \"/\", my_arg : String do\n    my_arg\n  end\nend\n\nART.run\n\n# GET / # => \"foo\"\n```","summary":"<p>A container for storing key/value pairs.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"get(name:String,_type:Int8.class):Int8-instance-method","html_id":"get(name:String,_type:Int8.class):Int8-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Int8`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Int8</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int8.class"}],"args_string":"(name : String, _type : <span class=\"t\">Int8</span>.<span class=\"k\">class</span>) : Int8","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int8.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int8","visibility":"Public","body":"(Int8.from_parameter(get(name))).as(Int8)"}},{"id":"get(name:String,_type:Bool.class):Bool-instance-method","html_id":"get(name:String,_type:Bool.class):Bool-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Bool`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Bool</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Bool.class"}],"args_string":"(name : String, _type : <span class=\"t\">Bool</span>.<span class=\"k\">class</span>) : Bool","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Bool.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(Bool.from_parameter(get(name))).as(Bool)"}},{"id":"get(name:String,_type:String.class):String-instance-method","html_id":"get(name:String,_type:String.class):String-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `String`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>String</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String.class"}],"args_string":"(name : String, _type : <span class=\"t\">String</span>.<span class=\"k\">class</span>) : String","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"String.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"(String.from_parameter(get(name))).as(String)"}},{"id":"get(name:String,_type:Float32.class):Float32-instance-method","html_id":"get(name:String,_type:Float32.class):Float32-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Float32`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Float32</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Float32.class"}],"args_string":"(name : String, _type : <span class=\"t\">Float32</span>.<span class=\"k\">class</span>) : Float32","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Float32.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"(Float32.from_parameter(get(name))).as(Float32)"}},{"id":"get(name:String,_type:Float64.class):Float64-instance-method","html_id":"get(name:String,_type:Float64.class):Float64-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Float64`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Float64</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Float64.class"}],"args_string":"(name : String, _type : <span class=\"t\">Float64</span>.<span class=\"k\">class</span>) : Float64","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Float64.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"(Float64.from_parameter(get(name))).as(Float64)"}},{"id":"get(name:String,_type:Int128.class):Int128-instance-method","html_id":"get(name:String,_type:Int128.class):Int128-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Int128`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Int128</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int128.class"}],"args_string":"(name : String, _type : <span class=\"t\">Int128</span>.<span class=\"k\">class</span>) : Int128","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int128.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int128","visibility":"Public","body":"(Int128.from_parameter(get(name))).as(Int128)"}},{"id":"get(name:String,_type:Int16.class):Int16-instance-method","html_id":"get(name:String,_type:Int16.class):Int16-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Int16`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Int16</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int16.class"}],"args_string":"(name : String, _type : <span class=\"t\">Int16</span>.<span class=\"k\">class</span>) : Int16","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int16.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int16","visibility":"Public","body":"(Int16.from_parameter(get(name))).as(Int16)"}},{"id":"get(name:String,_type:Int32.class):Int32-instance-method","html_id":"get(name:String,_type:Int32.class):Int32-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Int32`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Int32</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int32.class"}],"args_string":"(name : String, _type : <span class=\"t\">Int32</span>.<span class=\"k\">class</span>) : Int32","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int32.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"(Int32.from_parameter(get(name))).as(Int32)"}},{"id":"get(name:String,_type:Int64.class):Int64-instance-method","html_id":"get(name:String,_type:Int64.class):Int64-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `Int64`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>Int64</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int64.class"}],"args_string":"(name : String, _type : <span class=\"t\">Int64</span>.<span class=\"k\">class</span>) : Int64","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"Int64.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"(Int64.from_parameter(get(name))).as(Int64)"}},{"id":"get(name:String)-instance-method","html_id":"get(name:String)-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name*.\n\nRaises a `KeyError` if no parameter with that name exists.","summary":"<p>Returns the value of the parameter with the provided <em>name</em>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(self.get?(name)) || (raise(KeyError.new(\"No parameter exists with the name '#{name}'.\")))"}},{"id":"get(name:String,_type:UInt128.class):UInt128-instance-method","html_id":"get(name:String,_type:UInt128.class):UInt128-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `UInt128`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>UInt128</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt128.class"}],"args_string":"(name : String, _type : <span class=\"t\">UInt128</span>.<span class=\"k\">class</span>) : UInt128","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt128.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt128","visibility":"Public","body":"(UInt128.from_parameter(get(name))).as(UInt128)"}},{"id":"get(name:String,_type:UInt16.class):UInt16-instance-method","html_id":"get(name:String,_type:UInt16.class):UInt16-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `UInt16`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>UInt16</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt16.class"}],"args_string":"(name : String, _type : <span class=\"t\">UInt16</span>.<span class=\"k\">class</span>) : UInt16","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt16.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt16","visibility":"Public","body":"(UInt16.from_parameter(get(name))).as(UInt16)"}},{"id":"get(name:String,_type:UInt32.class):UInt32-instance-method","html_id":"get(name:String,_type:UInt32.class):UInt32-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `UInt32`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>UInt32</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt32.class"}],"args_string":"(name : String, _type : <span class=\"t\">UInt32</span>.<span class=\"k\">class</span>) : UInt32","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt32.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"(UInt32.from_parameter(get(name))).as(UInt32)"}},{"id":"get(name:String,_type:UInt64.class):UInt64-instance-method","html_id":"get(name:String,_type:UInt64.class):UInt64-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `UInt64`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>UInt64</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt64.class"}],"args_string":"(name : String, _type : <span class=\"t\">UInt64</span>.<span class=\"k\">class</span>) : UInt64","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt64.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt64","visibility":"Public","body":"(UInt64.from_parameter(get(name))).as(UInt64)"}},{"id":"get(name:String,_type:UInt8.class):UInt8-instance-method","html_id":"get(name:String,_type:UInt8.class):UInt8-instance-method","name":"get","doc":"Returns the value of the parameter with the provided *name* as a `UInt8`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> as a <code>UInt8</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt8.class"}],"args_string":"(name : String, _type : <span class=\"t\">UInt8</span>.<span class=\"k\">class</span>) : UInt8","source_link":null,"def":{"name":"get","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"_type","doc":null,"default_value":"","external_name":"_type","restriction":"UInt8.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt8","visibility":"Public","body":"(UInt8.from_parameter(get(name))).as(UInt8)"}},{"id":"get?(name:String)-instance-method","html_id":"get?(name:String)-instance-method","name":"get?","doc":"Returns the value of the parameter with the provided *name* if it exists, otherwise `nil`.","summary":"<p>Returns the value of the parameter with the provided <em>name</em> if it exists, otherwise <code>nil</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":null,"def":{"name":"get?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parameters[name]?.try(&.value)"}},{"id":"has?(name:String):Bool-instance-method","html_id":"has?(name:String):Bool-instance-method","name":"has?","doc":"Returns `true` if a parameter with the provided *name* exists, otherwise `false`.","summary":"<p>Returns <code>true</code> if a parameter with the provided <em>name</em> exists, otherwise <code>false</code>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Bool","source_link":null,"def":{"name":"has?","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@parameters.has_key?(name)"}},{"id":"remove(name:String):Nil-instance-method","html_id":"remove(name:String):Nil-instance-method","name":"remove","doc":"Removes the parameter with the provided *name*.","summary":"<p>Removes the parameter with the provided <em>name</em>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Nil","source_link":null,"def":{"name":"remove","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@parameters.delete(name)"}},{"id":"set(name:String,value:_,type:T.class):NilforallT-instance-method","html_id":"set(name:String,value:_,type:T.class):NilforallT-instance-method","name":"set","doc":"Sets a parameter with the provided *name* to *value*, restricted to the given *type*.","summary":"<p>Sets a parameter with the provided <em>name</em> to <em>value</em>, restricted to the given <em>type</em>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"}],"args_string":"(name : String, value : _, type : <span class=\"t\">T</span>.<span class=\"k\">class</span>) : Nil forall T","source_link":null,"def":{"name":"set","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"_"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@parameters[name] = Parameter(T).new(value)"}},{"id":"set(name:String,value:T):NilforallT-instance-method","html_id":"set(name:String,value:T):NilforallT-instance-method","name":"set","doc":"Sets a parameter with the provided *name* to *value*.","summary":"<p>Sets a parameter with the provided <em>name</em> to <em>value</em>.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(name : String, value : T) : Nil forall T","source_link":null,"def":{"name":"set","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.set(name, value, T)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Patch","path":"Athena/Routing/Patch.html","kind":"annotation","full_name":"Athena::Routing::Patch","name":"Patch","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines a `PATCH` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ART::Patch(path: \"/users/:id\")]\ndef partial_update_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a <code>PATCH</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Post","path":"Athena/Routing/Post.html","kind":"annotation","full_name":"Athena::Routing::Post","name":"Post","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines a `POST` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ART::Post(path: \"/users\")]\ndef new_user : Nil\nend\n```","summary":"<p>Defines a <code>POST</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Prefix","path":"Athena/Routing/Prefix.html","kind":"annotation","full_name":"Athena::Routing::Prefix","name":"Prefix","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Apply a *prefix* to all actions within `self`.  Can be a static string, but may also contain path arguments.\n\n## Fields\n\n* prefix : `String` - The path prefix to use, may also be provided as the first positional argument.\n\n## Example\n\n```\n@[ART::Prefix(prefix: \"calendar\")]\nclass CalendarController < ART::Controller\n  # The route of this action would be `GET /calendar/events`.\n  @[ART::Get(path: \"events\")]\n  def events : String\n    \"events\"\n  end\nend\n```","summary":"<p>Apply a <em>prefix</em> to all actions within <code>self</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Put","path":"Athena/Routing/Put.html","kind":"annotation","full_name":"Athena::Routing::Put","name":"Put","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines a `PUT` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ART::Put(path: \"/users/:id\")]\ndef update_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines a <code>PUT</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/QueryParam","path":"Athena/Routing/QueryParam.html","kind":"annotation","full_name":"Athena::Routing::QueryParam","name":"QueryParam","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines a query parameter tied to a given argument.\n\nThe type of the query param is derived from the type restriction of the associated controller action argument.\n\nA non-nilable type denotes it as required.  If the parameter is not supplied, and no default value is assigned, an `ART::Exceptions::BadRequest` exception is raised.\nA nilable type denotes it as optional.  If the parameter is not supplied (or could not be converted), and no default value is assigned, it is `nil`.\n\n## Fields\n\n* name : `String` - The name of the query parameter, may also be provided as the first positional argument.\n* constraints : `Regex` - A pattern the query param must match to be considered valid.\n\n## Example\n\n```\n@[ART::Get(path: \"/example\")]\n@[ART::QueryParam(\"query_param\")]\ndef get_user(query_param : String) : Nil\nend\n```","summary":"<p>Defines a query parameter tied to a given argument.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/RedirectResponse","path":"Athena/Routing/RedirectResponse.html","kind":"class","full_name":"Athena::Routing::RedirectResponse","name":"RedirectResponse","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Response","kind":"class","full_name":"Athena::Routing::Response","name":"Response"},"ancestors":[{"html_id":"athena/Athena/Routing/Response","kind":"class","full_name":"Athena::Routing::Response","name":"Response"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Represents an HTTP response that does a redirect.\n\nCan be used as an easier way to handle redirects as well as providing type safety that a route should redirect.\n\n```\nrequire \"athena\"\n\nclass RedirectController < ART::Controller\n  @[ART::Get(path: \"/go_to_crystal\")]\n  def redirect_to_crystal : ART::RedirectResponse\n    ART::RedirectResponse.new \"https://crystal-lang.org\"\n  end\nend\n\nART.run\n\n# GET /go_to_crystal # => (redirected to https://crystal-lang.org)\n```","summary":"<p>Represents an HTTP response that does a redirect.</p>","class_methods":[],"constructors":[{"id":"new(url:String,status:HTTP::Status|Int32=HTTP::Status::FOUND,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(url:String,status:HTTP::Status|Int32=HTTP::Status::FOUND,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Creates a response that should redirect to the provided *url* with the provided *status*, defaults to 302.\n\nAn ArgumentError is raised if *url* is blank, or if *status* is not a valid redirection status code.","summary":"<p>Creates a response that should redirect to the provided <em>url</em> with the provided <em>status</em>, defaults to 302.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"status","doc":null,"default_value":"HTTP::Status::FOUND","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(url : String, status : HTTP::Status | Int32 = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Status</span><span class=\"t\">::</span><span class=\"t\">FOUND</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"status","doc":null,"default_value":"HTTP::Status::FOUND","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(url, status, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":"The url that the request will be redirected to.","summary":"<p>The url that the request will be redirected to.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@url"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/RequestStore","path":"Athena/Routing/RequestStore.html","kind":"class","full_name":"Athena::Routing::RequestStore","name":"RequestStore","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Stores the current `HTTP::Request` object.\n\nCan be injected to access the request from a non controller context.\n\n```\nrequire \"athena\"\n\n@[ADI::Register(public: true)]\nclass ExampleController < ART::Controller\n  def initialize(@request_store : ART::RequestStore); end\n\n  get \"/\" do\n    @request_store.method\n  end\nend\n\nART.run\n\n# GET / # => GET\n```","summary":"<p>Stores the current <code><a href=\"../../HTTP/Request.html\">HTTP::Request</a></code> object.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"request:HTTP::Request-instance-method","html_id":"request:HTTP::Request-instance-method","name":"request","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Request","source_link":null,"def":{"name":"request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Request","visibility":"Public","body":"if (value = @request).nil?\n  ::raise(NilAssertionError.new(\"Athena::Routing::RequestStore#request cannot be nil\"))\nelse\n  value\nend"}},{"id":"request=(request:HTTP::Request)-instance-method","html_id":"request=(request:HTTP::Request)-instance-method","name":"request=","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request)","source_link":null,"def":{"name":"request=","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@request = request"}},{"id":"request?:HTTP::Request?-instance-method","html_id":"request?:HTTP::Request?-instance-method","name":"request?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Request?","source_link":null,"def":{"name":"request?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Request | ::Nil","visibility":"Public","body":"@request"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Response","path":"Athena/Routing/Response.html","kind":"class","full_name":"Athena::Routing::Response","name":"Response","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/RedirectResponse","kind":"class","full_name":"Athena::Routing::RedirectResponse","name":"RedirectResponse"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Represents an HTTP response that should be returned to the client.\n\nContains the content, status, and headers that should be applied to the actual `HTTP::Server::Response`.\nThis type is used to allow the content, status, and headers to be mutated by `ART::Listeners` before being returned to the client.\n\nThe content is stored in a proc that gets called when `self` is being written to the response IO.\nHow the output gets written can be customized via an `ART::Response::Writer`.","summary":"<p>Represents an HTTP response that should be returned to the client.</p>","class_methods":[],"constructors":[{"id":"new(status:HTTP::Status|Int32=HTTP::Status::OK,headers:HTTP::Headers=HTTP::Headers.new,&block:IO->Nil)-class-method","html_id":"new(status:HTTP::Status|Int32=HTTP::Status::OK,headers:HTTP::Headers=HTTP::Headers.new,&block:IO->Nil)-class-method","name":"new","doc":"Creates a new response with optional *status*, and *headers* arguments.\n\nThe block is captured and called when `self` is being written to the response `IO`.\nThis can be useful to reduce memory overhead when needing to return large responses.\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  @[ART::Get(\"/users\")]\n  def users : ART::Response\n    ART::Response.new headers: HTTP::Headers{\"content-type\" => \"application/json\"} do |io|\n      User.all.to_json io\n    end\n  end\nend\n\nART.run\n\n# GET /users # => [{\"id\":1,...},...]\n```","summary":"<p>Creates a new response with optional <em>status</em>, and <em>headers</em> arguments.</p>","abstract":false,"args":[{"name":"status","doc":null,"default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(status : HTTP::Status | Int32 = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Status</span><span class=\"t\">::</span><span class=\"t\">OK</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>, &block : IO -> Nil)","source_link":null,"def":{"name":"new","args":[{"name":"status","doc":null,"default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(IO -> Nil)"},"return_type":"","visibility":"Public","body":"new(block, status, headers)"}},{"id":"new(content:String?=nil,status:HTTP::Status|Int32=HTTP::Status::OK,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(content:String?=nil,status:HTTP::Status|Int32=HTTP::Status::OK,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Creates a new response with optional *content*, *status*, and *headers* arguments.\n\nA proc is created that will print the given *content* to the response IO.","summary":"<p>Creates a new response with optional <em>content</em>, <em>status</em>, and <em>headers</em> arguments.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"nil","external_name":"content","restriction":"String | ::Nil"},{"name":"status","doc":null,"default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(content : String? = <span class=\"n\">nil</span>, status : HTTP::Status | Int32 = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Status</span><span class=\"t\">::</span><span class=\"t\">OK</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"content","doc":null,"default_value":"nil","external_name":"content","restriction":"String | ::Nil"},{"name":"status","doc":null,"default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(content, status, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(content_callback:Proc(IO,Nil),status:HTTP::Status|Int32=HTTP::Status::OK,headers:HTTP::Headers=HTTP::Headers.new)-class-method","html_id":"new(content_callback:Proc(IO,Nil),status:HTTP::Status|Int32=HTTP::Status::OK,headers:HTTP::Headers=HTTP::Headers.new)-class-method","name":"new","doc":"Creates a new response with the provided *content_callback* and optional *status*, and *headers* arguments.\n\nThe proc is called when `self` is being written to the response IO.","summary":"<p>Creates a new response with the provided <em>content_callback</em> and optional <em>status</em>, and <em>headers</em> arguments.</p>","abstract":false,"args":[{"name":"content_callback","doc":null,"default_value":"","external_name":"content_callback","restriction":"Proc(IO, Nil)"},{"name":"status","doc":null,"default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"args_string":"(content_callback : Proc(IO, Nil), status : HTTP::Status | Int32 = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Status</span><span class=\"t\">::</span><span class=\"t\">OK</span>, headers : HTTP::Headers = <span class=\"t\">HTTP</span><span class=\"t\">::</span><span class=\"t\">Headers</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"content_callback","doc":null,"default_value":"","external_name":"content_callback","restriction":"Proc(IO, Nil)"},{"name":"status","doc":null,"default_value":"HTTP::Status::OK","external_name":"status","restriction":"HTTP::Status | Int32"},{"name":"headers","doc":null,"default_value":"HTTP::Headers.new","external_name":"headers","restriction":"HTTP::Headers"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(content_callback, status, headers)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"content:String-instance-method","html_id":"content:String-instance-method","name":"content","doc":"Returns the content of `self` as a `String`.\n\nThe content string is cached to avoid unnecessarily regenerating\nthe same string multiple times.\n\nThe cached string is cleared when changing `self`'s content via `#content=`.","summary":"<p>Returns the content of <code>self</code> as a <code>String</code>.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"content","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@content_string || (@content_string = String.build do |io|\n  write(io)\nend)"}},{"id":"content=(content_callback:Proc(IO,Nil))-instance-method","html_id":"content=(content_callback:Proc(IO,Nil))-instance-method","name":"content=","doc":"Updates the content of `self`.\n\nResets the cached content string.","summary":"<p>Updates the content of <code>self</code>.</p>","abstract":false,"args":[{"name":"content_callback","doc":null,"default_value":"","external_name":"content_callback","restriction":"Proc(IO, Nil)"}],"args_string":"(content_callback : Proc(IO, Nil))","source_link":null,"def":{"name":"content=","args":[{"name":"content_callback","doc":null,"default_value":"","external_name":"content_callback","restriction":"Proc(IO, Nil)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@content_callback = content_callback\n@content_string = nil\n"}},{"id":"content=(content:String?=nil):Nil-instance-method","html_id":"content=(content:String?=nil):Nil-instance-method","name":"content=","doc":"Updates the content of `self`.\n\nResets the cached content string.","summary":"<p>Updates the content of <code>self</code>.</p>","abstract":false,"args":[{"name":"content","doc":null,"default_value":"nil","external_name":"content","restriction":"String | ::Nil"}],"args_string":"(content : String? = <span class=\"n\">nil</span>) : Nil","source_link":null,"def":{"name":"content=","args":[{"name":"content","doc":null,"default_value":"nil","external_name":"content","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"self.content = Proc(IO, Nil).new do |io|\n  io.print(content)\nend"}},{"id":"headers:HTTP::Headers-instance-method","html_id":"headers:HTTP::Headers-instance-method","name":"headers","doc":"The response headers on `self.`","summary":"<p>The response headers on <code>self.</code></p>","abstract":false,"args":[],"args_string":" : HTTP::Headers","source_link":null,"def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Headers","visibility":"Public","body":"@headers"}},{"id":"status:HTTP::Status-instance-method","html_id":"status:HTTP::Status-instance-method","name":"status","doc":"The `HTTP::Status` of `self.`","summary":"<p>The <code>HTTP::Status</code> of <code>self.</code></p>","abstract":false,"args":[],"args_string":" : HTTP::Status","source_link":null,"def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Status","visibility":"Public","body":"@status"}},{"id":"status=(code:HTTP::Status|Int32):Nil-instance-method","html_id":"status=(code:HTTP::Status|Int32):Nil-instance-method","name":"status=","doc":"The `HTTP::Status` of `self.`","summary":"<p>The <code>HTTP::Status</code> of <code>self.</code></p>","abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"HTTP::Status | Int32"}],"args_string":"(code : HTTP::Status | Int32) : Nil","source_link":null,"def":{"name":"status=","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":"HTTP::Status | Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@status = HTTP::Status.new(code)"}},{"id":"write(output:IO):Nil-instance-method","html_id":"write(output:IO):Nil-instance-method","name":"write","doc":"Writes content of `self` to the provided *output*.\n\nHow the output gets written can be customized via an `ART::Response::Writer`.","summary":"<p>Writes content of <code>self</code> to the provided <em>output</em>.</p>","abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO) : Nil","source_link":null,"def":{"name":"write","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@writer.write(output) do |writer_io|\n  @content_callback.call(writer_io)\nend"}},{"id":"writer=(writer:ART::Response::Writer)-instance-method","html_id":"writer=(writer:ART::Response::Writer)-instance-method","name":"writer=","doc":"See `ART::Response::Writer`.","summary":"<p>See <code><a href=\"../../Athena/Routing/Response/Writer.html\">ART::Response::Writer</a></code>.</p>","abstract":false,"args":[{"name":"writer","doc":null,"default_value":"","external_name":"writer","restriction":"ART::Response::Writer"}],"args_string":"(writer : ART::Response::Writer)","source_link":null,"def":{"name":"writer=","args":[{"name":"writer","doc":null,"default_value":"","external_name":"writer","restriction":"ART::Response::Writer"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@writer = writer"}}],"macros":[],"types":[{"html_id":"athena/Athena/Routing/Response/DirectWriter","path":"Athena/Routing/Response/DirectWriter.html","kind":"struct","full_name":"Athena::Routing::Response::DirectWriter","name":"DirectWriter","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/Response/Writer","kind":"struct","full_name":"Athena::Routing::Response::Writer","name":"Writer"},"ancestors":[{"html_id":"athena/Athena/Routing/Response/Writer","kind":"struct","full_name":"Athena::Routing::Response::Writer","name":"Writer"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Response","kind":"class","full_name":"Athena::Routing::Response","name":"Response"},"doc":"The default `ART::Response::Writer` for an `ART::Response`.\n\nWrites directly to the *output* `IO`.","summary":"<p>The default <code><a href=\"../../../Athena/Routing/Response/Writer.html\">ART::Response::Writer</a></code> for an <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"write(output:IO,&:IO->Nil):Nil-instance-method","html_id":"write(output:IO,&:IO->Nil):Nil-instance-method","name":"write","doc":"Accepts an *output* `IO` that the content of the response should be written to.\n\nThe *output* `IO` is yielded directly.","summary":"<p>Accepts an <em>output</em> <code>IO</code> that the content of the response should be written to.</p>","abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO, & : IO -> Nil) : Nil","source_link":null,"def":{"name":"write","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(IO -> Nil)"},"return_type":"Nil","visibility":"Public","body":"yield output"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/Response/Writer","path":"Athena/Routing/Response/Writer.html","kind":"struct","full_name":"Athena::Routing::Response::Writer","name":"Writer","abstract":true,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Routing/Response/DirectWriter","kind":"struct","full_name":"Athena::Routing::Response::DirectWriter","name":"DirectWriter"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/Response","kind":"class","full_name":"Athena::Routing::Response","name":"Response"},"doc":"Determines how the content of an `ART::Response` will be written to the requests' response `IO`.\n\nBy default the content is written directly to the requests' response `IO` via `ART::Response::DirectWriter`.\nHowever, custom writers can be implemented to customize that behavior.  The most common use case would be for compression.\n\nWriters can also be defined as services and injected into a listener if they require additional external dependencies.\n\n### Example\n\n```\nrequire \"athena\"\nrequire \"compress/gzip\"\n\n# Define a custom writer to gzip the response\nstruct GzipWriter < ART::Response::Writer\n  def write(output : IO, & : IO -> Nil) : Nil\n    Compress::Gzip::Writer.open(output) do |gzip_io|\n      yield gzip_io\n    end\n  end\nend\n\n# Define a new event listener to handle applying this writer\n@[ADI::Register]\nstruct CompressionListener\n  include AED::EventListenerInterface\n\n  def self.subscribed_events : AED::SubscribedEvents\n    AED::SubscribedEvents{\n      ART::Events::Response => -256, # Listen on the Response event with a very low priority\n    }\n  end\n\n  def call(event : ART::Events::Response, dispatcher : AED::EventDispatcherInterface) : Nil\n    # If the request supports gzip encoding\n    if event.request.headers.includes_word?(\"accept-encoding\", \"gzip\")\n      # Change the `ART::Response` object's writer to be our `GzipWriter`\n      event.response.writer = GzipWriter.new\n\n      # Set the encoding of the response to gzip\n      event.response.headers[\"content-encoding\"] = \"gzip\"\n    end\n  end\nend\n\nclass ExampleController < ART::Controller\n  @[ART::Get(\"/users\")]\n  def users : Array(User)\n    User.all\n  end\nend\n\nART.run\n\n# GET /users # => [{\"id\":1,...},...] (gzipped)\n```","summary":"<p>Determines how the content of an <code><a href=\"../../../Athena/Routing/Response.html\">ART::Response</a></code> will be written to the requests' response <code>IO</code>.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"write(output:IO,&:IO->Nil):Nil-instance-method","html_id":"write(output:IO,&:IO->Nil):Nil-instance-method","name":"write","doc":"Accepts an *output* `IO` that the content of the response should be written to.","summary":"<p>Accepts an <em>output</em> <code>IO</code> that the content of the response should be written to.</p>","abstract":true,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"args_string":"(output : IO, & : IO -> Nil) : Nil","source_link":null,"def":{"name":"write","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(IO -> Nil)"},"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/Route","path":"Athena/Routing/Route.html","kind":"annotation","full_name":"Athena::Routing::Route","name":"Route","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines an endpoint with an arbitrary `HTTP` method.  Can be used for defining non-standard `HTTP` method routes.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* method : `String` - The `HTTP` method to use for the endpoint.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ART::Route(\"/some/path\", method: \"TRACE\")]\ndef trace_route : Nil\nend\n```","summary":"<p>Defines an endpoint with an arbitrary <code>HTTP</code> method.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/RouteHandler","path":"Athena/Routing/RouteHandler.html","kind":"struct","full_name":"Athena::Routing::RouteHandler","name":"RouteHandler","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"The entry-point into `Athena::Routing`.\n\nEmits events that handle a given request.","summary":"<p>The entry-point into <code><a href=\"../../Athena/Routing.html\">Athena::Routing</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(event_dispatcher:AED::EventDispatcherInterface,request_store:ART::RequestStore,argument_resolver:ART::Arguments::ArgumentResolverInterface)-class-method","html_id":"new(event_dispatcher:AED::EventDispatcherInterface,request_store:ART::RequestStore,argument_resolver:ART::Arguments::ArgumentResolverInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"event_dispatcher","doc":null,"default_value":"","external_name":"event_dispatcher","restriction":"AED::EventDispatcherInterface"},{"name":"request_store","doc":null,"default_value":"","external_name":"request_store","restriction":"ART::RequestStore"},{"name":"argument_resolver","doc":null,"default_value":"","external_name":"argument_resolver","restriction":"ART::Arguments::ArgumentResolverInterface"}],"args_string":"(event_dispatcher : AED::EventDispatcherInterface, request_store : ART::RequestStore, argument_resolver : ART::Arguments::ArgumentResolverInterface)","source_link":null,"def":{"name":"new","args":[{"name":"event_dispatcher","doc":null,"default_value":"","external_name":"event_dispatcher","restriction":"AED::EventDispatcherInterface"},{"name":"request_store","doc":null,"default_value":"","external_name":"request_store","restriction":"ART::RequestStore"},{"name":"argument_resolver","doc":null,"default_value":"","external_name":"argument_resolver","restriction":"ART::Arguments::ArgumentResolverInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(event_dispatcher, request_store, argument_resolver)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"handle(context:HTTP::Server::Context):Nil-instance-method","html_id":"handle(context:HTTP::Server::Context):Nil-instance-method","name":"handle","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"}],"args_string":"(context : HTTP::Server::Context) : Nil","source_link":null,"def":{"name":"handle","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"HTTP::Server::Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"begin\n  return_response(handle_raw(context.request), context)\nrescue ex : ::Exception\n  event = ART::Events::Exception.new(context.request, ex)\n  @event_dispatcher.dispatch(event)\n  exception = event.exception\n  if response = event.response\n  else\n    finish_request\n    raise(exception)\n  end\n  if exception.is_a?(ART::Exceptions::HTTPException)\n    response.status = exception.status\n    response.headers.merge!(exception.headers)\n  end\n  return_response(finish_response(response, context.request), context)\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/RouteResolver","path":"Athena/Routing/RouteResolver.html","kind":"class","full_name":"Athena::Routing::RouteResolver","name":"RouteResolver","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Registers an `ART::Action` for each action with the router.  This type is a singleton as opposed to a service to prevent all the routes from having to be redefined on each request.","summary":"<p>Registers an <code><a href=\"../../Athena/Routing/Action.html\">ART::Action</a></code> for each action with the router.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"resolve(request:HTTP::Request):Amber::Router::RoutedResult(Athena::Routing::ActionBase)-instance-method","html_id":"resolve(request:HTTP::Request):Amber::Router::RoutedResult(Athena::Routing::ActionBase)-instance-method","name":"resolve","doc":"Attempts to resolve the *request* into an `Amber::Router::RoutedResult(Athena::Routing::ActionBase)`.\n\nRaises an `ART::Exceptions::NotFound` exception if a corresponding `ART::Action` could not be resolved.\nRaises an `ART::Exceptions::MethodNotAllowed` exception if a route was matched but does not support the *request*'s method.","summary":"<p>Attempts to resolve the <em>request</em> into an <code>Amber::Router::RoutedResult(<a href=\"../../Athena/Routing/ActionBase.html\">Athena::Routing::ActionBase</a>)</code>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request) : Amber::Router::RoutedResult(Athena::Routing::ActionBase)","source_link":null,"def":{"name":"resolve","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Amber::Router::RoutedResult(Athena::Routing::ActionBase)","visibility":"Public","body":"matching_routes = @router.find_routes(request.path)\nif matching_routes.empty?\n  raise(ART::Exceptions::NotFound.new(\"No route found for '#{request.method} #{request.path}'\"))\nend\nsupported_methods = [] of String\nroute = matching_routes.find do |r|\n  action = r.payload.not_nil!\n  supported_methods << action.method\n  action.method == request.method\nend\nroute || (raise(ART::Exceptions::MethodNotAllowed.new(\"No route found for '#{request.method} #{request.path}': (Allow: #{supported_methods.join(\", \")})\")))\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/TimeConverter","path":"Athena/Routing/TimeConverter.html","kind":"struct","full_name":"Athena::Routing::TimeConverter","name":"TimeConverter","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/ParamConverterInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface","name":"ParamConverterInterface"},"ancestors":[{"html_id":"athena/Athena/Routing/ParamConverterInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface","name":"ParamConverterInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Converts a date(time) string into a `Time` instance.\n\nOptionally allows specifying the *format* and *location* to use when parsing the string.\nIf no *format* is specified, defaults to [Time.rfc_3339](https://crystal-lang.org/api/Time.html#parse_rfc3339%28time:String%29-class-method).\nDefaults to `UTC` if no *location* is specified with the format.\n\nRaises an `ART::Exceptions::BadRequest` if the date(time) string could not be parsed.\n\nNOTE: The format can be anything supported via [Time::Format](https://crystal-lang.org/api/Time/Format.html).\n\n### Example\n\n```\nrequire \"athena\"\n\nclass ExampleController < ART::Controller\n  @[ART::Get(path: \"/event/:start_time/:end_time\")]\n  @[ART::ParamConverter(\"start_time\", converter: ART::TimeConverter, format: \"%F\", location: Time::Location.load(\"Europe/Berlin\"))]\n  @[ART::ParamConverter(\"end_time\", converter: ART::TimeConverter)]\n  def event(start_time : Time, end_time : Time) : Nil\n    start_time # => 2020-04-07 00:00:00.0 +02:00 Europe/Berlin\n    end_time   # => 2020-04-08 12:34:56.0 UTC\n  end\nend\n\nART.run\n\n# GET /event/2020-04-07/2020-04-08T12:34:56Z\n```","summary":"<p>Converts a date(time) string into a <code>Time</code> instance.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(request:HTTP::Request,configuration:Configuration):Nil-instance-method","html_id":"apply(request:HTTP::Request,configuration:Configuration):Nil-instance-method","name":"apply","doc":"Applies the conversion logic based on the provided *request* and *configuration*.\n\nMost commonly this involves setting/overriding a value stored in the request's `ART::ParameterBag` via `request.attributes`.","summary":"<p>Applies the conversion logic based on the provided <em>request</em> and <em>configuration</em>.</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"configuration","doc":null,"default_value":"","external_name":"configuration","restriction":"Configuration"}],"args_string":"(request : HTTP::Request, configuration : Configuration) : Nil","source_link":null,"def":{"name":"apply","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"},{"name":"configuration","doc":null,"default_value":"","external_name":"configuration","restriction":"Configuration"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"begin\n  arg_name = configuration.name\n  if request.attributes.has?(arg_name)\n  else\n    return\n  end\n  value = request.attributes.get(arg_name, String)\n  time = (  format = configuration.format) ? Time.parse(value, format, configuration.location) : Time.parse_rfc3339(value)\n  request.attributes.set(arg_name, time, Time)\nrescue ex : Time::Format::Error\n  raise(ART::Exceptions::BadRequest.new(\"Invalid date(time) for argument '#{arg_name}'.\"))\nend"}}],"macros":[],"types":[{"html_id":"athena/Athena/Routing/TimeConverter/Configuration","path":"Athena/Routing/TimeConverter/Configuration.html","kind":"struct","full_name":"Athena::Routing::TimeConverter::Configuration","name":"Configuration","abstract":false,"superclass":{"html_id":"athena/Athena/Routing/ParamConverterInterface/ConfigurationInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::ConfigurationInterface","name":"ConfigurationInterface"},"ancestors":[{"html_id":"athena/Athena/Routing/ParamConverterInterface/ConfigurationInterface","kind":"struct","full_name":"Athena::Routing::ParamConverterInterface::ConfigurationInterface","name":"ConfigurationInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing/TimeConverter","kind":"struct","full_name":"Athena::Routing::TimeConverter","name":"TimeConverter"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String,converter:ART::ParamConverterInterface.class,format:String?=nil,location:Time::Location=Time::Location::UTC)-class-method","html_id":"new(name:String,converter:ART::ParamConverterInterface.class,format:String?=nil,location:Time::Location=Time::Location::UTC)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"converter","doc":null,"default_value":"","external_name":"converter","restriction":"ART::ParamConverterInterface.class"},{"name":"format","doc":null,"default_value":"nil","external_name":"format","restriction":"String | ::Nil"},{"name":"location","doc":null,"default_value":"Time::Location::UTC","external_name":"location","restriction":"Time::Location"}],"args_string":"(name : String, converter : <span class=\"t\">ART</span><span class=\"t\">::</span><span class=\"t\">ParamConverterInterface</span>.<span class=\"k\">class</span>, format : String? = <span class=\"n\">nil</span>, location : Time::Location = <span class=\"t\">Time</span><span class=\"t\">::</span><span class=\"t\">Location</span><span class=\"t\">::</span><span class=\"t\">UTC</span>)","source_link":null,"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"converter","doc":null,"default_value":"","external_name":"converter","restriction":"ART::ParamConverterInterface.class"},{"name":"format","doc":null,"default_value":"nil","external_name":"format","restriction":"String | ::Nil"},{"name":"location","doc":null,"default_value":"Time::Location::UTC","external_name":"location","restriction":"Time::Location"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, converter, format, location)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"format:String?-instance-method","html_id":"format:String?-instance-method","name":"format","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"format","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"@format"}},{"id":"location:Time::Location-instance-method","html_id":"location:Time::Location-instance-method","name":"location","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Time::Location","source_link":null,"def":{"name":"location","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time::Location","visibility":"Public","body":"@location"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Routing/Unlink","path":"Athena/Routing/Unlink.html","kind":"annotation","full_name":"Athena::Routing::Unlink","name":"Unlink","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Defines an `UNLINK` endpoint.\n\n## Fields\n\n* path : `String` - The path for the endpoint, may also be provided as the first positional argument.\n* constraints : `Hash(String, Regex)` - A mapping between a route's path parameters and its constraints.\n\n## Example\n\n```\n@[ART::Unlink(path: \"/users/:id\")]\ndef unlink_user(id : Int32) : Nil\nend\n```","summary":"<p>Defines an <code>UNLINK</code> endpoint.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Routing/View","path":"Athena/Routing/View.html","kind":"annotation","full_name":"Athena::Routing::View","name":"View","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Routing","kind":"module","full_name":"Athena::Routing","name":"Routing"},"doc":"Configures how the endpoint should be rendered.\n\nSee `ART::Action::View`.\n\n## Fields\n\n* status : `HTTP::Status` - The `HTTP::Status` the endpoint should return.  Defaults to `HTTP::Status::OK` (200).\n* serialization_groups : `Array(String)` - The serialization groups to use for this route as part of `ASR::ExclusionStrategies::Groups`.  Defaults to `[\"default\"]`.\n* emit_nil : `Bool` - If `nil` values should be serialized.  Defaults to `false`.\n\n## Example\n\n```\n@[ART::Post(path: \"/publish/:id\")]\n@[ART::View(status: :accepted, serialization_groups: [\"default\", \"detailed\"])]\ndef publish(id : Int32) : Article\n  article = Article.find id\n  article.published = true\n  article\nend\n```","summary":"<p>Configures how the endpoint should be rendered.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Serializer","path":"Athena/Serializer.html","kind":"module","full_name":"Athena::Serializer","name":"Serializer","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena","kind":"module","full_name":"Athena","name":"Athena"},"doc":"Athena's Serializer component, `ASR` for short, adds enhanced (de)serialization features to your project.\n\n## Getting Started\n\nThe serializer component utilizes a module to specify that a type is serializable, as well as annotations to control how it gets (de)serialized.\n\n### Installation\n\nAdd the dependency to your `shard.yml`:\n\n```yaml\ndependencies:\n  athena-serializer:\n    github: athena-framework/serializer\n    version: ~> 0.1.0\n```\n\nRun `shards install`.\n\n### Usage\n\nSee the `ASR::Annotations` namespace a complete list of annotations, as well as each annotation for more detailed information.\n\n```\n# ExclusionPolicy specifies that all properties should not be (de)serialized\n# unless exposed via the `ASRA::Expose` annotation.\n@[ASRA::ExclusionPolicy(:all)]\n@[ASRA::AccessorOrder(:alphabetical)]\nclass Example\n  include ASR::Serializable\n\n  # Groups can be used to create different \"views\" of a type.\n  @[ASRA::Expose]\n  @[ASRA::Groups(\"details\")]\n  property name : String\n\n  # The `ASRA::Name` controls the name that this property\n  # should be deserialized from or be serialized to.\n  # It can also be used to set the default serialized naming strategy on the type.\n  @[ASRA::Expose]\n  @[ASRA::Name(deserialize: \"a_prop\", serialize: \"a_prop\")]\n  property some_prop : String\n\n  # Define a custom accessor used to get the value for serialization.\n  @[ASRA::Expose]\n  @[ASRA::Groups(\"default\", \"details\")]\n  @[ASRA::Accessor(getter: get_title)]\n  property title : String\n\n  # ReadOnly properties cannot be set on deserialization\n  @[ASRA::Expose]\n  @[ASRA::ReadOnly]\n  property created_at : Time = Time.utc\n\n  # Allows the property to be set via deserialization,\n  # but not exposed when serialized.\n  @[ASRA::IgnoreOnSerialize]\n  property password : String?\n\n  # Because of the `:all` exclusion policy, and not having the `ASRA::Expose` annotation,\n  # these properties are not exposed.\n  getter first_name : String?\n  getter last_name : String?\n\n  # Runs directly after `self` is deserialized\n  @[ASRA::PostDeserialize]\n  def split_name : Nil\n    @first_name, @last_name = @name.split(' ')\n  end\n\n  # Allows using the return value of a method as a key/value in the serialized output.\n  @[ASRA::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\n\n  private def get_title : String\n    @title.downcase\n  end\nend\n\nobj = ASR.serializer.deserialize Example, %({\"name\":\"FIRST LAST\",\"a_prop\":\"STR\",\"title\":\"TITLE\",\"password\":\"monkey123\",\"created_at\":\"2020-10-10T12:34:56Z\"}), :json\nobj                                                                                     # => #<Example:0x7f3e3b106740 @created_at=2020-07-05 23:06:58.943298289 UTC, @name=\"FIRST LAST\", @some_prop=\"STR\", @title=\"TITLE\", @password=\"monkey123\", @first_name=\"FIRST\", @last_name=\"LAST\">\nASR.serializer.serialize obj, :json                                                     # => {\"a_prop\":\"STR\",\"created_at\":\"2020-07-05T23:06:58.94Z\",\"get_val\":\"VAL\",\"name\":\"FIRST LAST\",\"title\":\"title\"}\nASR.serializer.serialize obj, :json, ASR::SerializationContext.new.groups = [\"details\"] # => {\"name\":\"FIRST LAST\",\"title\":\"title\"}\n```","summary":"<p>Athena's Serializer component, <code><a href=\"../ASR.html\">ASR</a></code> for short, adds enhanced (de)serialization features to your project.</p>","class_methods":[{"id":"serializer-class-method","html_id":"serializer-class-method","name":"serializer","doc":"Returns an `ASR::SerializerInterface` instance for ad-hoc (de)serialization.\n\nThe serializer is cached and only instantiated once.","summary":"<p>Returns an <code><a href=\"../Athena/Serializer/SerializerInterface.html\">ASR::SerializerInterface</a></code> instance for ad-hoc (de)serialization.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"serializer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@serializer).nil?\n  @@serializer = (ASR::Serializer.new)\nelse\n  value\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Serializer/Annotations","path":"Athena/Serializer/Annotations.html","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"`Athena::Serializer` uses annotations to control how an object gets serialized and deserialized.\nThis module includes all the default serialization and deserialization annotations. The `ASRA` alias can be used as a shorthand when applying the annotations.","summary":"<p><code><a href=\"../../Athena/Serializer.html\">Athena::Serializer</a></code> uses annotations to control how an object gets serialized and deserialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Serializer/Annotations/Accessor","path":"Athena/Serializer/Annotations/Accessor.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Accessor","name":"Accessor","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Allows using methods/modules to control how a property is retrieved/set.\n\n## Fields\n* `getter` - A method name whose return value will be used as the serialized value.\n* `setter` - A method name that accepts the deserialized value.  Can be used to apply additional logic before setting the properties value.\n* `converter` - A module that defines a `.deserialize` method.  Can be used to share common deserialization between types.\n* `path : Tuple` - A set of keys used to navigate to a value during deserialization.  The value of the last key will be used as the property's value.\n\n## Example\n\n### Getter/Setter\n\n```\nclass AccessorExample\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Accessor(getter: get_foo, setter: set_foo)]\n  property foo : String = \"foo\"\n\n  private def set_foo(foo : String) : String\n    @foo = foo.upcase\n  end\n\n  private def get_foo : String\n    @foo.upcase\n  end\nend\n\nASR.serializer.serialize AccessorExample.new, :json                 # => {\"foo\":\"FOO\"}\nASR.serializer.deserialize AccessorExample, %({\"foo\":\"bar\"}), :json # => #<AccessorExample:0x7f5915e25c20 @foo=\"BAR\">\n```\n\n### Converter\n\n```\nmodule ReverseConverter\n  def self.deserialize(navigator : ASR::Navigators::DeserializationNavigatorInterface, metadata : ASR::PropertyMetadataBase, data : ASR::Any) : String\n    data.as_s.reverse\n  end\nend\n\nclass ConverterExample\n  include ASR::Serializable\n\n  @[ASRA::Accessor(converter: ReverseConverter)]\n  getter str : String\nend\n\nASR.serializer.deserialize ConverterExample, %({\"str\":\"jim\"}), :json # => #<ConverterExample:0x7f9745fa6d60 @str=\"mij\">\n```\n\n### Path\n\n```\nclass Example\n  include ASR::Serializable\n\n  getter id : Int64\n\n  @[ASRA::Accessor(path: {\"stats\", \"HP\"})]\n  getter hp : Int32\n\n  @[ASRA::Accessor(path: {\"stats\", \"Attack\"})]\n  getter attack : Int32\n\n  @[ASRA::Accessor(path: {\"downs\", -1, \"last_down\"})]\n  getter last_down : Time\nend\n\nDATA = <<-JSON\n{\n  \"id\": 1,\n  \"stats\": {\n    \"HP\": 45,\n    \"Attack\": 49\n  },\n  \"downs\": [\n    {\n      \"id\": 1,\n      \"last_down\": \"2020-05-019T05:23:17Z\"\n    },\n    {\n      \"id\": 2,\n      \"last_down\": \"2020-04-07T12:34:56Z\"\n    }\n  ]\n\n}\nJSON\n\nASR.serializer.deserialize Example, DATA, :json\n# #<Example:0x7f43c4ddf580\n#  @attack=49,\n#  @hp=45,\n#  @id=1,\n#  @last_down=2020-04-07 12:34:56.0 UTC>\n```","summary":"<p>Allows using methods/modules to control how a property is retrieved/set.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/AccessorOrder","path":"Athena/Serializer/Annotations/AccessorOrder.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::AccessorOrder","name":"AccessorOrder","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Can be applied to a type to control the order of properties when serialized.  Valid values: `:alphabetical`, and `:custom`.\n\nBy default properties are ordered in the order in which they are defined.\n\n## Fields\n* `order` - Used to specify the order of the properties when using `:custom` ordering.\n\n## Example\n\n```\nclass Default\n  include ASR::Serializable\n\n  def initialize; end\n\n  property a : String = \"A\"\n  property z : String = \"Z\"\n  property two : String = \"two\"\n  property one : String = \"one\"\n  property a_a : Int32 = 123\n\n  @[ASRA::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\nend\n\nASR.serializer.serialize Default.new, :json # => {\"a\":\"A\",\"z\":\"Z\",\"two\":\"two\",\"one\":\"one\",\"a_a\":123,\"get_val\":\"VAL\"}\n\n@[ASRA::AccessorOrder(:alphabetical)]\nclass Abc\n  include ASR::Serializable\n\n  def initialize; end\n\n  property a : String = \"A\"\n  property z : String = \"Z\"\n  property two : String = \"two\"\n  property one : String = \"one\"\n  property a_a : Int32 = 123\n\n  @[ASRA::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\nend\n\nASR.serializer.serialize Abc.new, :json # => {\"a\":\"A\",\"a_a\":123,\"get_val\":\"VAL\",\"one\":\"one\",\"two\":\"two\",\"z\":\"Z\"}\n\n@[ASRA::AccessorOrder(:custom, order: [\"two\", \"z\", \"get_val\", \"a\", \"one\", \"a_a\"])]\nclass Custom\n  include ASR::Serializable\n\n  def initialize; end\n\n  property a : String = \"A\"\n  property z : String = \"Z\"\n  property two : String = \"two\"\n  property one : String = \"one\"\n  property a_a : Int32 = 123\n\n  @[ASRA::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\nend\n\nASR.serializer.serialize Custom.new, :json # => {\"two\":\"two\",\"z\":\"Z\",\"get_val\":\"VAL\",\"a\":\"A\",\"one\":\"one\",\"a_a\":123}\n```","summary":"<p>Can be applied to a type to control the order of properties when serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Discriminator","path":"Athena/Serializer/Annotations/Discriminator.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Discriminator","name":"Discriminator","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Allows deserializing an object based on the value of a specific field.\n\n## Fields\n* `key : String` - The field that should be read from the data to determine the correct type.\n* `map : Hash | NamedTuple` - Maps the possible `key` values to their corresponding types.\n\n## Example\n\n```\n@[ASRA::Discriminator(key: \"type\", map: {point: Point, circle: Circle})]\nabstract class Shape\n  include ASR::Serializable\n\n  property type : String\nend\n\nclass Point < Shape\n  property x : Int32\n  property y : Int32\nend\n\nclass Circle < Shape\n  property x : Int32\n  property y : Int32\n  property radius : Int32\nend\n\nASR.serializer.deserialize Shape, %({\"type\":\"point\",\"x\":10,\"y\":20}), :json              # => #<Point:0x7fbbf7f8bc20 @type=\"point\", @x=10, @y=20>\nASR.serializer.deserialize Shape, %({\"type\":\"circle\",\"x\":30,\"y\":40,\"radius\":12}), :json # => #<Circle:0x7fbbf7f93c60 @radius=12, @type=\"circle\", @x=30, @y=40>\n```","summary":"<p>Allows deserializing an object based on the value of a specific field.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Exclude","path":"Athena/Serializer/Annotations/Exclude.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Exclude","name":"Exclude","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should not be serialized/deserialized when used with `:none` `ASRA::ExclusionPolicy`.\n\nAlso see, `ASRA::IgnoreOnDeserialize` and `ASRA::IgnoreOnSerialize`.\n\n## Example\n\n```\n@[ASRA::ExclusionPolicy(:none)]\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  property name : String = \"Jim\"\n\n  @[ASRA::Exclude]\n  property password : String = \"monkey\"\nend\n\nASR.serializer.serialize Example.new, :json                                          # => {\"name\":\"Jim\"}\nASR.serializer.deserialize Example, %({\"name\":\"Jim\",\"password\":\"password1!\"}), :json # => #<Example:0x7f6eec4b6a60 @name=\"Jim\", @password=\"monkey\">\n```\n\nNOTE: On deserialization, the excluded property must be nilable, or have a default value.","summary":"<p>Indicates that a property should not be serialized/deserialized when used with <code>:none</code> <code><a href=\"../../../Athena/Serializer/Annotations/ExclusionPolicy.html\">ASRA::ExclusionPolicy</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/ExclusionPolicy","path":"Athena/Serializer/Annotations/ExclusionPolicy.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::ExclusionPolicy","name":"ExclusionPolicy","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Defines the default exclusion policy to use on a class.  Valid values: `:none`, and `:all`.\n\nUsed with `ASRA::Expose` and `ASRA::Exclude`.","summary":"<p>Defines the default exclusion policy to use on a class.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Expose","path":"Athena/Serializer/Annotations/Expose.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Expose","name":"Expose","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should be serialized/deserialized when used with `:all` `ASRA::ExclusionPolicy`.\n\nAlso see, `ASRA::IgnoreOnDeserialize` and `ASRA::IgnoreOnSerialize`.\n\n## Example\n\n```\n@[ASRA::ExclusionPolicy(:all)]\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Expose]\n  property name : String = \"Jim\"\n\n  property password : String = \"monkey\"\nend\n\nASR.serializer.serialize Example.new, :json                                          # => {\"name\":\"Jim\"}\nASR.serializer.deserialize Example, %({\"name\":\"Jim\",\"password\":\"password1!\"}), :json # => #<Example:0x7f6eec4b6a60 @name=\"Jim\", @password=\"monkey\">\n```\n\nNOTE: On deserialization, the excluded property must be nilable, or have a default value.","summary":"<p>Indicates that a property should be serialized/deserialized when used with <code>:all</code> <code><a href=\"../../../Athena/Serializer/Annotations/ExclusionPolicy.html\">ASRA::ExclusionPolicy</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Groups","path":"Athena/Serializer/Annotations/Groups.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Groups","name":"Groups","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Defines the group(s) a property belongs to.  Properties are automatically added to the `default` group\nif no groups are explicitly defined.\n\nSee `ASR::ExclusionStrategies::Groups`.","summary":"<p>Defines the group(s) a property belongs to.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/IgnoreOnDeserialize","path":"Athena/Serializer/Annotations/IgnoreOnDeserialize.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::IgnoreOnDeserialize","name":"IgnoreOnDeserialize","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should not be set on deserialization, but should be serialized.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  property name : String\n\n  @[ASRA::IgnoreOnDeserialize]\n  property password : String?\nend\n\nobj = ASR.serializer.deserialize Example, %({\"name\":\"Jim\",\"password\":\"monkey123\"}), :json\n\nobj.password # => nil\nobj.name     # => Jim\n\nobj.password = \"foobar\"\n\nASR.serializer.serialize obj, :json # => {\"name\":\"Jim\",\"password\":\"foobar\"}\n```","summary":"<p>Indicates that a property should not be set on deserialization, but should be serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/IgnoreOnSerialize","path":"Athena/Serializer/Annotations/IgnoreOnSerialize.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::IgnoreOnSerialize","name":"IgnoreOnSerialize","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should be set on deserialization, but should not be serialized.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  property name : String\n\n  @[ASRA::IgnoreOnSerialize]\n  property password : String?\nend\n\nobj = ASR.serializer.deserialize Example, %({\"name\":\"Jim\",\"password\":\"monkey123\"}), :json\n\nobj.password # => monkey123\nobj.name     # => Jim\n\nobj.password = \"foobar\"\n\nASR.serializer.serialize obj, :json # => {\"name\":\"Jim\"}\n```","summary":"<p>Indicates that a property should be set on deserialization, but should not be serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Name","path":"Athena/Serializer/Annotations/Name.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Name","name":"Name","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Defines the `key` to use during (de)serialization.  If not provided, the name of the property is used.\nAlso allows defining aliases that can be used for that property when deserializing.\n\n## Fields\n\n* `serialize : String` - The key to use for this property during serialization.\n* `deserialize : String` - The key to use for this property during deserialization.\n* `aliases : Array(String)` - A set of keys to use for this property during deserialization; is equivalent to multiple `deserialize` keys.\n* `strategy : Symbol` - Defines the default serialization naming strategy for this type.  Can be overridden using the `serialize` field.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Name(serialize: \"myAddress\")]\n  property my_home_address : String = \"123 Fake Street\"\n\n  @[ASRA::Name(deserialize: \"some_key\", serialize: \"a_value\")]\n  property both_names : String = \"str\"\n\n  @[ASRA::Name(aliases: [\"val\", \"value\", \"some_value\"])]\n  property some_value : String = \"some_val\"\nend\n\nASR.serializer.serialize Example.new, :json # => {\"myAddress\":\"123 Fake Street\",\"a_value\":\"str\",\"some_value\":\"some_val\"}\n\nobj = ASR.serializer.deserialize Example, %({\"my_home_address\":\"555 Mason Ave\",\"some_key\":\"deserialized from diff key\",\"value\":\"some_other_val\"}), :json\n\nobj.my_home_address # => \"555 Mason Ave\"\nobj.both_names      # => \"deserialized from diff key\"\nobj.some_value      # => \"some_other_val\"\n```\n\n### Naming Strategies\n\nBy default the keys in the serialized data match exactly to the name of the property.\nNaming strategies allow changing this behavior for all properties within the type.\nThe serialized name can still be overridden on a per-property basis via\nusing the `ASRA::Name` annotation with the `serialize` field.\n\nThe available naming strategies include:\n* `:camelcase`\n* `:underscore`\n* `:identical`\n\n```\n@[ASRA::Name(strategy: :camelcase)]\nclass User\n  include ASR::Serializable\n\n  def initialize; end\n\n  property id : Int32 = 1\n  property first_name : String = \"Jon\"\n  property last_name : String = \"Snow\"\nend\n\nASR.serializer.serialize User.new, :json # => {\"id\":1,\"firstName\":\"Jon\",\"lastName\":\"Snow\"}\n```","summary":"<p>Defines the <code>key</code> to use during (de)serialization.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/PostDeserialize","path":"Athena/Serializer/Annotations/PostDeserialize.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::PostDeserialize","name":"PostDeserialize","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Defines a callback method(s) that are ran directly after the object has been deserialized.\n\n## Example\n\n```\nrecord Example, name : String, first_name : String?, last_name : String? do\n  include ASR::Serializable\n\n  @[ASRA::PostDeserialize]\n  private def split_name : Nil\n    @first_name, @last_name = @name.split(' ')\n  end\nend\n\nobj = ASR.serializer.deserialize Example, %({\"name\":\"Jon Snow\"}), :json\n\nobj.name       # => Jon Snow\nobj.first_name # => Jon\nobj.last_name  # => Snow\n```","summary":"<p>Defines a callback method(s) that are ran directly after the object has been deserialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/PostSerialize","path":"Athena/Serializer/Annotations/PostSerialize.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::PostSerialize","name":"PostSerialize","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Defines a callback method that is executed directly after the object has been serialized.\n\n## Example\n\n```\n@[ASRA::ExclusionPolicy(:all)]\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Expose]\n  @name : String?\n\n  property first_name : String = \"Jon\"\n  property last_name : String = \"Snow\"\n\n  @[ASRA::PreSerialize]\n  private def pre_ser : Nil\n    @name = \"#{first_name} #{last_name}\"\n  end\n\n  @[ASRA::PostSerialize]\n  private def post_ser : Nil\n    @name = nil\n  end\nend\n\nASR.serializer.serialize Example.new, :json # => {\"name\":\"Jon Snow\"}\n```","summary":"<p>Defines a callback method that is executed directly after the object has been serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/PreSerialize","path":"Athena/Serializer/Annotations/PreSerialize.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::PreSerialize","name":"PreSerialize","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Defines a callback method that is executed directly before the object has been serialized.\n\n## Example\n\n```\n@[ASRA::ExclusionPolicy(:all)]\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Expose]\n  @name : String?\n\n  property first_name : String = \"Jon\"\n  property last_name : String = \"Snow\"\n\n  @[ASRA::PreSerialize]\n  private def pre_ser : Nil\n    @name = \"#{first_name} #{last_name}\"\n  end\n\n  @[ASRA::PostSerialize]\n  private def post_ser : Nil\n    @name = nil\n  end\nend\n\nASR.serializer.serialize Example.new, :json # => {\"name\":\"Jon Snow\"}\n```","summary":"<p>Defines a callback method that is executed directly before the object has been serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/ReadOnly","path":"Athena/Serializer/Annotations/ReadOnly.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::ReadOnly","name":"ReadOnly","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property is read-only and cannot be set during deserialization.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  property name : String\n\n  @[ASRA::ReadOnly]\n  property password : String?\nend\n\nobj = ASR.serializer.deserialize Example, %({\"name\":\"Fred\",\"password\":\"password1\"}), :json\n\nobj.name     # => \"Fred\"\nobj.password # => nil\n```\n\nNOTE: The property must be nilable, or have a default value.","summary":"<p>Indicates that a property is read-only and cannot be set during deserialization.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Since","path":"Athena/Serializer/Annotations/Since.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Since","name":"Since","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Represents the first version a property was available.\n\nSee `ASR::ExclusionStrategies::Version`.\n\nNOTE: Value must be a `SemanticVersion` version.","summary":"<p>Represents the first version a property was available.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Skip","path":"Athena/Serializer/Annotations/Skip.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Skip","name":"Skip","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should not be serialized or deserialized.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  property name : String = \"Jim\"\n\n  @[ASRA::Skip]\n  property password : String = \"monkey\"\nend\n\nASR.serializer.deserialize Example, %({\"name\":\"Fred\",\"password\":\"foobar\"}), :json # => #<Example:0x7fe4dc98bce0 @name=\"Fred\", @password=\"monkey\">\nASR.serializer.serialize Example.new, :json                                       # => {\"name\":\"Fred\"}\n```","summary":"<p>Indicates that a property should not be serialized or deserialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/SkipWhenEmpty","path":"Athena/Serializer/Annotations/SkipWhenEmpty.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::SkipWhenEmpty","name":"SkipWhenEmpty","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Indicates that a property should not be serialized when it is empty.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  property id : Int64 = 1\n\n  @[ASRA::SkipWhenEmpty]\n  property value : String = \"value\"\n\n  @[ASRA::SkipWhenEmpty]\n  property values : Array(String) = %w(one two three)\nend\n\nobj = Example.new\n\nASR.serializer.serialize obj, :json # => {\"id\":1,\"value\":\"value\",\"values\":[\"one\",\"two\",\"three\"]}\n\nobj.value = \"\"\nobj.values = [] of String\n\nASR.serializer.serialize obj, :json # => {\"id\":1}\n```\n\nNOTE: Can be used on any type that defines an `#empty?` method.","summary":"<p>Indicates that a property should not be serialized when it is empty.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/Until","path":"Athena/Serializer/Annotations/Until.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::Until","name":"Until","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Represents the last version a property was available.\n\nSee `ASR::ExclusionStrategies::Version`.\n\nNOTE: Value must be a `SemanticVersion` version.","summary":"<p>Represents the last version a property was available.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Annotations/VirtualProperty","path":"Athena/Serializer/Annotations/VirtualProperty.html","kind":"annotation","full_name":"Athena::Serializer::Annotations::VirtualProperty","name":"VirtualProperty","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Annotations","kind":"module","full_name":"Athena::Serializer::Annotations","name":"Annotations"},"doc":"Can be applied to a method to make it act like a property.\n\n## Example\n\n```\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  property foo : String = \"foo\"\n\n  @[ASRA::VirtualProperty]\n  @[ASRA::Name(serialize: \"testing\")]\n  def some_method : Bool\n    false\n  end\n\n  @[ASRA::VirtualProperty]\n  def get_val : String\n    \"VAL\"\n  end\nend\n\nASR.serializer.serialize Example.new, :json # => {\"foo\":\"foo\",\"testing\":false,\"get_val\":\"VAL\"}\n```\n\nNOTE: The return type restriction _MUST_ be defined.","summary":"<p>Can be applied to a method to make it act like a property.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Serializer/Any","path":"Athena/Serializer/Any.html","kind":"module","full_name":"Athena::Serializer::Any","name":"Any","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Defines an abstraction that format specific types, such as `JSON::Any`, or `YAML::Any` must implement.","summary":"<p>Defines an abstraction that format specific types, such as <code>JSON::Any</code>, or <code>YAML::Any</code> must implement.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"as_a-instance-method","html_id":"as_a-instance-method","name":"as_a","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":null,"def":{"name":"as_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"as_a?-instance-method","html_id":"as_a?-instance-method","name":"as_a?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":null,"def":{"name":"as_a?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"as_bool:Bool-instance-method","html_id":"as_bool:Bool-instance-method","name":"as_bool","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"as_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"as_f:Float64-instance-method","html_id":"as_f:Float64-instance-method","name":"as_f","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Float64","source_link":null,"def":{"name":"as_f","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":""}},{"id":"as_f32:Float32-instance-method","html_id":"as_f32:Float32-instance-method","name":"as_f32","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Float32","source_link":null,"def":{"name":"as_f32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":""}},{"id":"as_f32?:Float32?-instance-method","html_id":"as_f32?:Float32?-instance-method","name":"as_f32?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Float32?","source_link":null,"def":{"name":"as_f32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32 | ::Nil","visibility":"Public","body":""}},{"id":"as_f?:Float64?-instance-method","html_id":"as_f?:Float64?-instance-method","name":"as_f?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Float64?","source_link":null,"def":{"name":"as_f?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64 | ::Nil","visibility":"Public","body":""}},{"id":"as_i:Int32-instance-method","html_id":"as_i:Int32-instance-method","name":"as_i","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32","source_link":null,"def":{"name":"as_i","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"as_i64:Int64-instance-method","html_id":"as_i64:Int64-instance-method","name":"as_i64","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int64","source_link":null,"def":{"name":"as_i64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":""}},{"id":"as_i64?:Int64?-instance-method","html_id":"as_i64?:Int64?-instance-method","name":"as_i64?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int64?","source_link":null,"def":{"name":"as_i64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":""}},{"id":"as_i?:Int32?-instance-method","html_id":"as_i?:Int32?-instance-method","name":"as_i?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Int32?","source_link":null,"def":{"name":"as_i?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32 | ::Nil","visibility":"Public","body":""}},{"id":"as_s:String-instance-method","html_id":"as_s:String-instance-method","name":"as_s","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : String","source_link":null,"def":{"name":"as_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"as_s?:String?-instance-method","html_id":"as_s?:String?-instance-method","name":"as_s?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : String?","source_link":null,"def":{"name":"as_s?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":""}},{"id":"dig(key,*keys)-instance-method","html_id":"dig(key,*keys)-instance-method","name":"dig","doc":null,"summary":null,"abstract":true,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":""}],"args_string":"(key, *keys)","source_link":null,"def":{"name":"dig","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"keys","doc":null,"default_value":"","external_name":"keys","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"is_nil?:Bool-instance-method","html_id":"is_nil?:Bool-instance-method","name":"is_nil?","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"is_nil?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"raw-instance-method","html_id":"raw-instance-method","name":"raw","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":null,"def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Context","path":"Athena/Serializer/Context.html","kind":"class","full_name":"Athena::Serializer::Context","name":"Context","abstract":true,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Serializer/DeserializationContext","kind":"class","full_name":"Athena::Serializer::DeserializationContext","name":"DeserializationContext"},{"html_id":"athena/Athena/Serializer/SerializationContext","kind":"class","full_name":"Athena::Serializer::SerializationContext","name":"SerializationContext"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Stores runtime data about the current action.\n\nSuch as what serialization groups/version to use when serializing.\n\nNOTE: Cannot be used for more than one action.","summary":"<p>Stores runtime data about the current action.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"add_exclusion_strategy(strategy:ASR::ExclusionStrategies::ExclusionStrategyInterface):self-instance-method","html_id":"add_exclusion_strategy(strategy:ASR::ExclusionStrategies::ExclusionStrategyInterface):self-instance-method","name":"add_exclusion_strategy","doc":"Adds *strategy* to `self`.\n\n* `exclusion_strategy` is set to *strategy* if there previously was no strategy.\n* `exclusion_strategy` is set to `ASR::ExclusionStrategies::Disjunct` if there was a `exclusion_strategy` already set.\n* *strategy* is added to the `ASR::ExclusionStrategies::Disjunct` if there are multiple strategies.","summary":"<p>Adds <em>strategy</em> to <code>self</code>.</p>","abstract":false,"args":[{"name":"strategy","doc":null,"default_value":"","external_name":"strategy","restriction":"ASR::ExclusionStrategies::ExclusionStrategyInterface"}],"args_string":"(strategy : ASR::ExclusionStrategies::ExclusionStrategyInterface) : <span class=\"k\">self</span>","source_link":null,"def":{"name":"add_exclusion_strategy","args":[{"name":"strategy","doc":null,"default_value":"","external_name":"strategy","restriction":"ASR::ExclusionStrategies::ExclusionStrategyInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"current_strategy = @exclusion_strategy\ncase current_strategy\nwhen Nil\n  @exclusion_strategy = strategy\nwhen ASR::ExclusionStrategies::Disjunct\n  current_strategy.members << strategy\nelse\n  @exclusion_strategy = ASR::ExclusionStrategies::Disjunct.new([current_strategy, strategy])\nend\nself\n"}},{"id":"exclusion_strategy:ASR::ExclusionStrategies::ExclusionStrategyInterface?-instance-method","html_id":"exclusion_strategy:ASR::ExclusionStrategies::ExclusionStrategyInterface?-instance-method","name":"exclusion_strategy","doc":"The `ASR::ExclusionStrategies::ExclusionStrategyInterface` being used.","summary":"<p>The <code><a href=\"../../Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface.html\">ASR::ExclusionStrategies::ExclusionStrategyInterface</a></code> being used.</p>","abstract":false,"args":[],"args_string":" : ASR::ExclusionStrategies::ExclusionStrategyInterface?","source_link":null,"def":{"name":"exclusion_strategy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::ExclusionStrategies::ExclusionStrategyInterface | ::Nil","visibility":"Public","body":"@exclusion_strategy"}},{"id":"groups:Array(String)?-instance-method","html_id":"groups:Array(String)?-instance-method","name":"groups","doc":"Returns the serialization groups, if any, currently set on `self`.","summary":"<p>Returns the serialization groups, if any, currently set on <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Array(String)?","source_link":null,"def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String) | ::Nil","visibility":"Public","body":"@groups"}},{"id":"groups=(groups:Array(String)):self-instance-method","html_id":"groups=(groups:Array(String)):self-instance-method","name":"groups=","doc":"Sets the group(s) to compare against properties' `ASRA::Groups` annotations.\n\nAdds a `ASR::ExclusionStrategies::Groups` automatically if set.","summary":"<p>Sets the group(s) to compare against properties' <code><a href=\"../../Athena/Serializer/Annotations/Groups.html\">ASRA::Groups</a></code> annotations.</p>","abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"args_string":"(groups : Array(String)) : <span class=\"k\">self</span>","source_link":null,"def":{"name":"groups=","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"if groups.empty?\n  raise(ArgumentError.new(\"Groups cannot be empty\"))\nend\n@groups = groups\nself\n"}},{"id":"version:SemanticVersion?-instance-method","html_id":"version:SemanticVersion?-instance-method","name":"version","doc":"Returns the version, if any, currently set on `self`.","summary":"<p>Returns the version, if any, currently set on <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : SemanticVersion?","source_link":null,"def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"@version"}},{"id":"version=(version:String):self-instance-method","html_id":"version=(version:String):self-instance-method","name":"version=","doc":"Sets the *version* to compare against properties' `ASRA::Since` and `ASRA::Until` annotations.\n\nAdds an `ASR::ExclusionStrategies::Version` automatically if set.","summary":"<p>Sets the <em>version</em> to compare against properties' <code><a href=\"../../Athena/Serializer/Annotations/Since.html\">ASRA::Since</a></code> and <code><a href=\"../../Athena/Serializer/Annotations/Until.html\">ASRA::Until</a></code> annotations.</p>","abstract":false,"args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"String"}],"args_string":"(version : String) : <span class=\"k\">self</span>","source_link":null,"def":{"name":"version=","args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"@version = SemanticVersion.parse(version)\nself\n"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/DeserializationContext","path":"Athena/Serializer/DeserializationContext.html","kind":"class","full_name":"Athena::Serializer::DeserializationContext","name":"DeserializationContext","abstract":false,"superclass":{"html_id":"athena/Athena/Serializer/Context","kind":"class","full_name":"Athena::Serializer::Context","name":"Context"},"ancestors":[{"html_id":"athena/Athena/Serializer/Context","kind":"class","full_name":"Athena::Serializer::Context","name":"Context"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"The `ASR::Context` specific to deserialization.","summary":"<p>The <code><a href=\"../../Athena/Serializer/Context.html\">ASR::Context</a></code> specific to deserialization.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/ExclusionStrategies","path":"Athena/Serializer/ExclusionStrategies.html","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies","name":"ExclusionStrategies","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Exclusion Strategies allow controlling which properties should be (de)serialized.\n\n`Athena::Serializer` includes two common strategies: `ASR::ExclusionStrategies::Groups`, and `ASR::ExclusionStrategies::Version`.\n\nCustom strategies can be implemented by via `ExclusionStrategies::ExclusionStrategyInterface`.\n\nOPTIMIZE:  Once feasible, support compile time exclusion strategies.","summary":"<p>Exclusion Strategies allow controlling which properties should be (de)serialized.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/Disjunct","path":"Athena/Serializer/ExclusionStrategies/Disjunct.html","kind":"struct","full_name":"Athena::Serializer::ExclusionStrategies::Disjunct","name":"Disjunct","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/ExclusionStrategies","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies","name":"ExclusionStrategies"},"doc":"Wraps an `Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)`, excluding a property if any member skips it.\n\nUsed internally to allow multiple exclusion strategies to be used within a single instance variable for `ASR::Context#add_exclusion_strategy`.","summary":"<p>Wraps an <code>Array(<a href=\"../../../Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface.html\">ASR::ExclusionStrategies::ExclusionStrategyInterface</a>)</code>, excluding a property if any member skips it.</p>","class_methods":[],"constructors":[{"id":"new(members:Array(ASR::ExclusionStrategies::ExclusionStrategyInterface))-class-method","html_id":"new(members:Array(ASR::ExclusionStrategies::ExclusionStrategyInterface))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"members","doc":null,"default_value":"","external_name":"members","restriction":"Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)"}],"args_string":"(members : Array(ASR::ExclusionStrategies::ExclusionStrategyInterface))","source_link":null,"def":{"name":"new","args":[{"name":"members","doc":null,"default_value":"","external_name":"members","restriction":"Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(members)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"members:Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)-instance-method","html_id":"members:Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)-instance-method","name":"members","doc":"The wrapped exclusion strategies.","summary":"<p>The wrapped exclusion strategies.</p>","abstract":false,"args":[],"args_string":" : Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)","source_link":null,"def":{"name":"members","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(ASR::ExclusionStrategies::ExclusionStrategyInterface)","visibility":"Public","body":"@members"}},{"id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","html_id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","name":"skip_property?","doc":"Returns `true` if a property should _NOT_ be (de)serialized.","summary":"<p>Returns <code>true</code> if a property should <em>NOT</em> be (de)serialized.</p>","abstract":false,"args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"args_string":"(metadata : ASR::PropertyMetadataBase, context : ASR::Context) : Bool","source_link":null,"def":{"name":"skip_property?","args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@members.any?(&.skip_property?(metadata, context))"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","path":"Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface.html","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/Disjunct","kind":"struct","full_name":"Athena::Serializer::ExclusionStrategies::Disjunct","name":"Disjunct"},{"html_id":"athena/Athena/Serializer/ExclusionStrategies/Groups","kind":"struct","full_name":"Athena::Serializer::ExclusionStrategies::Groups","name":"Groups"},{"html_id":"athena/Athena/Serializer/ExclusionStrategies/Version","kind":"struct","full_name":"Athena::Serializer::ExclusionStrategies::Version","name":"Version"}],"namespace":{"html_id":"athena/Athena/Serializer/ExclusionStrategies","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies","name":"ExclusionStrategies"},"doc":"Represents a specific exclusion strategy.\n\nCustom logic can be implemented by defining a type with this interface.\nIt can then be used via `ASR::Context#add_exclusion_strategy`.\n\n## Example\n\n```\nstruct OddNumberExclusionStrategy\n  include Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface\n\n  # :inherit:\n  #\n  # Skips serializing odd numbered values\n  def skip_property?(metadata : ASR::PropertyMetadataBase, context : ASR::Context) : Bool\n    # Don't skip if the value is nil\n    return false unless value = (metadata.value)\n\n    # Only skip on serialization, if the value is an number, and if it's odd.\n    context.is_a?(ASR::SerializationContext) && value.is_a?(Number) && value.odd?\n  end\nend\n\nserialization_context = ASR::SerializationContext.new\nserialization_context.add_exclusion_strategy OddNumberExclusionStrategy.new\n\ndeserialization_context = ASR::DeserializationContext.new\ndeserialization_context.add_exclusion_strategy OddNumberExclusionStrategy.new\n\nrecord Values, one : Int32 = 1, two : Int32 = 2, three : Int32 = 3 do\n  include ASR::Serializable\nend\n\nASR.serializer.serialize Values.new, :json, serialization_context                                 # => {\"two\":2}\nASR.serializer.deserialize Values, %({\"one\":4,\"two\":5,\"three\":6}), :json, deserialization_context # => Values(@one=4, @three=6, @two=5)\n```","summary":"<p>Represents a specific exclusion strategy.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","html_id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","name":"skip_property?","doc":"Returns `true` if a property should _NOT_ be (de)serialized.","summary":"<p>Returns <code>true</code> if a property should <em>NOT</em> be (de)serialized.</p>","abstract":true,"args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"args_string":"(metadata : ASR::PropertyMetadataBase, context : ASR::Context) : Bool","source_link":null,"def":{"name":"skip_property?","args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/ExclusionStrategies/Groups","path":"Athena/Serializer/ExclusionStrategies/Groups.html","kind":"struct","full_name":"Athena::Serializer::ExclusionStrategies::Groups","name":"Groups","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/ExclusionStrategies","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies","name":"ExclusionStrategies"},"doc":"Allows creating different views of your objects by limiting which properties get serialized, based on the group(s) each property is a part of.\n\nIt is enabled by default when using `ASR::Context#groups=`.\n\n```\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Groups(\"list\", \"details\")]\n  property id : Int64 = 1\n\n  @[ASRA::Groups(\"list\", \"details\")]\n  property title : String = \"TITLE\"\n\n  @[ASRA::Groups(\"list\")]\n  property comment_summaries : Array(String) = [\"Sentence 1.\", \"Sentence 2.\"]\n\n  @[ASRA::Groups(\"details\")]\n  property comments : Array(String) = [\"Sentence 1.  Another sentence.\", \"Sentence 2.  Some other stuff.\"]\n\n  # Properties not explicitly given a group are added to the `\"default\"` group.\n  property created_at : Time = Time.utc(2019, 1, 1)\n  property updated_at : Time?\nend\n\nobj = Example.new\n\nASR.serializer.serialize obj, :json, ASR::SerializationContext.new.groups = [\"list\"]            # => {\"id\":1,\"title\":\"TITLE\",\"comment_summaries\":[\"Sentence 1.\",\"Sentence 2.\"]}\nASR.serializer.serialize obj, :json, ASR::SerializationContext.new.groups = [\"details\"]         # => {\"id\":1,\"title\":\"TITLE\",\"comments\":[\"Sentence 1.  Another sentence.\",\"Sentence 2.  Some other stuff.\"]}\nASR.serializer.serialize obj, :json, ASR::SerializationContext.new.groups = [\"list\", \"default\"] # => {\"id\":1,\"title\":\"TITLE\",\"comment_summaries\":[\"Sentence 1.\",\"Sentence 2.\"],\"created_at\":\"2019-01-01T00:00:00Z\"}\n```","summary":"<p>Allows creating different views of your objects by limiting which properties get serialized, based on the group(s) each property is a part of.</p>","class_methods":[],"constructors":[{"id":"new(groups:Array(String))-class-method","html_id":"new(groups:Array(String))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"args_string":"(groups : Array(String))","source_link":null,"def":{"name":"new","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(groups)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*groups:String)-class-method","html_id":"new(*groups:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"String"}],"args_string":"(*groups : String)","source_link":null,"def":{"name":"new","args":[{"name":"groups","doc":null,"default_value":"","external_name":"groups","restriction":"String"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(groups.to_a)"}}],"instance_methods":[{"id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","html_id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","name":"skip_property?","doc":"Returns `true` if a property should _NOT_ be (de)serialized.","summary":"<p>Returns <code>true</code> if a property should <em>NOT</em> be (de)serialized.</p>","abstract":false,"args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"args_string":"(metadata : ASR::PropertyMetadataBase, context : ASR::Context) : Bool","source_link":null,"def":{"name":"skip_property?","args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(metadata.groups & @groups).empty?"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/ExclusionStrategies/Version","path":"Athena/Serializer/ExclusionStrategies/Version.html","kind":"struct","full_name":"Athena::Serializer::ExclusionStrategies::Version","name":"Version","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/ExclusionStrategies/ExclusionStrategyInterface","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies::ExclusionStrategyInterface","name":"ExclusionStrategyInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/ExclusionStrategies","kind":"module","full_name":"Athena::Serializer::ExclusionStrategies","name":"ExclusionStrategies"},"doc":"Serialize properties based on a `SemanticVersion` string.\n\nIt is enabled by default when using `ASR::Context#version=`.\n\n```\nclass Example\n  include ASR::Serializable\n\n  def initialize; end\n\n  @[ASRA::Until(\"1.0.0\")]\n  property name : String = \"Legacy Name\"\n\n  @[ASRA::Since(\"1.1.0\")]\n  property name2 : String = \"New Name\"\nend\n\nobj = Example.new\n\nASR.serializer.serialize obj, :json, ASR::SerializationContext.new.version = \"0.30.0\" # => {\"name\":\"Legacy Name\"}\nASR.serializer.serialize obj, :json, ASR::SerializationContext.new.version = \"1.2.0\"  # => {\"name2\":\"New Name\"}\n```","summary":"<p>Serialize properties based on a <code>SemanticVersion</code> string.</p>","class_methods":[],"constructors":[{"id":"new(version:SemanticVersion)-class-method","html_id":"new(version:SemanticVersion)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"SemanticVersion"}],"args_string":"(version : SemanticVersion)","source_link":null,"def":{"name":"new","args":[{"name":"version","doc":null,"default_value":"","external_name":"version","restriction":"SemanticVersion"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(version)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","html_id":"skip_property?(metadata:ASR::PropertyMetadataBase,context:ASR::Context):Bool-instance-method","name":"skip_property?","doc":"Returns `true` if a property should _NOT_ be (de)serialized.","summary":"<p>Returns <code>true</code> if a property should <em>NOT</em> be (de)serialized.</p>","abstract":false,"args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"args_string":"(metadata : ASR::PropertyMetadataBase, context : ASR::Context) : Bool","source_link":null,"def":{"name":"skip_property?","args":[{"name":"metadata","doc":null,"default_value":"","external_name":"metadata","restriction":"ASR::PropertyMetadataBase"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::Context"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if (since_version = metadata.since_version) && @version < since_version\n  return true\nend\nif (until_version = metadata.until_version) && @version >= until_version\n  return true\nend\nfalse\n"}},{"id":"version:SemanticVersion-instance-method","html_id":"version:SemanticVersion-instance-method","name":"version","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : SemanticVersion","source_link":null,"def":{"name":"version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SemanticVersion","visibility":"Public","body":"@version"}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Serializer/Format","path":"Athena/Serializer/Format.html","kind":"enum","full_name":"Athena::Serializer::Format","name":"Format","abstract":false,"superclass":null,"ancestors":[{"html_id":"athena/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"athena/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"JSON","name":"JSON","value":"0","doc":null,"summary":null},{"id":"YAML","name":"YAML","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"The built-in supported formats.","summary":"<p>The built-in supported formats.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"deserialization_visitor-instance-method","html_id":"deserialization_visitor-instance-method","name":"deserialization_visitor","doc":"Returns the `ASR::Visitors::DeserializationVisitorInterface` related to `self`.","summary":"<p>Returns the <code><a href=\"../../Athena/Serializer/Visitors/DeserializationVisitorInterface.html\">ASR::Visitors::DeserializationVisitorInterface</a></code> related to <code>self</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"deserialization_visitor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case self\nin .json?\n  ASR::Visitors::JSONDeserializationVisitor\nin .yaml?\n  ASR::Visitors::YAMLDeserializationVisitor\nend"}},{"id":"json?-instance-method","html_id":"json?-instance-method","name":"json?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"json?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == JSON"}},{"id":"serialization_visitor-instance-method","html_id":"serialization_visitor-instance-method","name":"serialization_visitor","doc":"Returns the `ASR::Visitors::SerializationVisitorInterface` related to `self`.","summary":"<p>Returns the <code><a href=\"../../Athena/Serializer/Visitors/SerializationVisitorInterface.html\">ASR::Visitors::SerializationVisitorInterface</a></code> related to <code>self</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"serialization_visitor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case self\nin .json?\n  ASR::Visitors::JSONSerializationVisitor\nin .yaml?\n  ASR::Visitors::YAMLSerializationVisitor\nend"}},{"id":"yaml?-instance-method","html_id":"yaml?-instance-method","name":"yaml?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"yaml?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == YAML"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/InstantiateObjectConstructor","path":"Athena/Serializer/InstantiateObjectConstructor.html","kind":"struct","full_name":"Athena::Serializer::InstantiateObjectConstructor","name":"InstantiateObjectConstructor","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/ObjectConstructorInterface","kind":"module","full_name":"Athena::Serializer::ObjectConstructorInterface","name":"ObjectConstructorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/ObjectConstructorInterface","kind":"module","full_name":"Athena::Serializer::ObjectConstructorInterface","name":"ObjectConstructorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Default `ASR::ObjectConstructorInterface` implementation.\n\nDirectly instantiates the object via a custom initializer added by `ASR::Serializable`.","summary":"<p>Default <code><a href=\"../../Athena/Serializer/ObjectConstructorInterface.html\">ASR::ObjectConstructorInterface</a></code> implementation.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"construct(navigator:ASR::Navigators::DeserializationNavigatorInterface,properties:Array(PropertyMetadataBase),data:ASR::Any,type)-instance-method","html_id":"construct(navigator:ASR::Navigators::DeserializationNavigatorInterface,properties:Array(PropertyMetadataBase),data:ASR::Any,type)-instance-method","name":"construct","doc":"Creates an instance of *type* and applies the provided *properties* onto it, with the provided *data*.","summary":"<p>Creates an instance of <em>type</em> and applies the provided <em>properties</em> onto it, with the provided <em>data</em>.</p>","abstract":false,"args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"ASR::Navigators::DeserializationNavigatorInterface"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"args_string":"(navigator : ASR::Navigators::DeserializationNavigatorInterface, properties : Array(PropertyMetadataBase), data : ASR::Any, type)","source_link":null,"def":{"name":"construct","args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"ASR::Navigators::DeserializationNavigatorInterface"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type.new(navigator, properties, data)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Model","path":"Athena/Serializer/Model.html","kind":"module","full_name":"Athena::Serializer::Model","name":"Model","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Used to denote a type that is (de)serializable.\n\nThis module can be used to make the compiler happy in some situations, it doesn't do anything on its own.\nYou most likely want to use `ASR::Serializable` instead.\n\n```\nrequire \"athena-serializer\"\n\nabstract struct BaseModel\n  # `ASR::Model` is needed here to ensure typings are correct for the deserialization process.\n  # Child types should still include `ASR::Serializable`.\n  include ASR::Model\nend\n\nrecord ModelOne < BaseModel, id : Int32, name : String do\n  include ASR::Serializable\nend\n\nrecord ModelTwo < BaseModel, id : Int32, name : String do\n  include ASR::Serializable\nend\n\nrecord Unionable, type : BaseModel.class\n```","summary":"<p>Used to denote a type that is (de)serializable.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Navigators","path":"Athena/Serializer/Navigators.html","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Serializer/Navigators/DeserializationNavigator","path":"Athena/Serializer/Navigators/DeserializationNavigator.html","kind":"struct","full_name":"Athena::Serializer::Navigators::DeserializationNavigator","name":"DeserializationNavigator","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/Navigators/DeserializationNavigatorInterface","kind":"module","full_name":"Athena::Serializer::Navigators::DeserializationNavigatorInterface","name":"DeserializationNavigatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/Navigators/DeserializationNavigatorInterface","kind":"module","full_name":"Athena::Serializer::Navigators::DeserializationNavigatorInterface","name":"DeserializationNavigatorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Navigators","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(visitor:ASR::Visitors::DeserializationVisitorInterface,context:ASR::DeserializationContext,object_constructor:ASR::ObjectConstructorInterface)-class-method","html_id":"new(visitor:ASR::Visitors::DeserializationVisitorInterface,context:ASR::DeserializationContext,object_constructor:ASR::ObjectConstructorInterface)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::DeserializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::DeserializationContext"},{"name":"object_constructor","doc":null,"default_value":"","external_name":"object_constructor","restriction":"ASR::ObjectConstructorInterface"}],"args_string":"(visitor : ASR::Visitors::DeserializationVisitorInterface, context : ASR::DeserializationContext, object_constructor : ASR::ObjectConstructorInterface)","source_link":null,"def":{"name":"new","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::DeserializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::DeserializationContext"},{"name":"object_constructor","doc":null,"default_value":"","external_name":"object_constructor","restriction":"ASR::ObjectConstructorInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(visitor, context, object_constructor)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"accept(type:T.class,data:ASR::Any)forallT-instance-method","html_id":"accept(type:T.class,data:ASR::Any)forallT-instance-method","name":"accept","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(type : <span class=\"t\">T</span>.<span class=\"k\">class</span>, data : ASR::Any) forall T","source_link":null,"def":{"name":"accept","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"T.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if T.instance <= ASR::Model %}\n      {% if ann = T.instance.annotation(ASRA::Discriminator) %}\n        if key = data[{{ ann[:key] }}]?\n          type = case key\n            {% for k, t in ann[:map] %}\n              when {{ k.id.stringify }} then {{ t }}\n            {% end %}\n          else\n            raise \"Unknown '#{{{ ann[:key] }}}' discriminator value: '#{key}'.\"\n          end\n        else\n          raise \"Missing discriminator field '#{{{ ann[:key] }}}'.\"\n        end\n      {% end %}\n\n      properties = type.deserialization_properties\n\n      # Apply exclusion strategies if one is defined\n      if strategy = @context.exclusion_strategy\n        properties.reject! { |property| strategy.skip_property? property, @context }\n      end\n\n      object = @object_constructor.construct self, properties, data, type\n\n      object.run_postdeserialize\n\n      object\n    {% else %}\n      {% if T.class.has_method?(:deserialize) %}\n        @visitor.visit type, data\n      {% end %}\n    {% end %}"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Navigators/DeserializationNavigatorInterface","path":"Athena/Serializer/Navigators/DeserializationNavigatorInterface.html","kind":"module","full_name":"Athena::Serializer::Navigators::DeserializationNavigatorInterface","name":"DeserializationNavigatorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/Navigators/DeserializationNavigator","kind":"struct","full_name":"Athena::Serializer::Navigators::DeserializationNavigator","name":"DeserializationNavigator"}],"namespace":{"html_id":"athena/Athena/Serializer/Navigators","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"accept(type,data:ASR::Any)-instance-method","html_id":"accept(type,data:ASR::Any)-instance-method","name":"accept","doc":null,"summary":null,"abstract":true,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(type, data : ASR::Any)","source_link":null,"def":{"name":"accept","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Navigators/NavigatorFactory","path":"Athena/Serializer/Navigators/NavigatorFactory.html","kind":"struct","full_name":"Athena::Serializer::Navigators::NavigatorFactory","name":"NavigatorFactory","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/Navigators/NavigatorFactoryInterface","kind":"module","full_name":"Athena::Serializer::Navigators::NavigatorFactoryInterface","name":"NavigatorFactoryInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/Navigators/NavigatorFactoryInterface","kind":"module","full_name":"Athena::Serializer::Navigators::NavigatorFactoryInterface","name":"NavigatorFactoryInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Navigators","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(object_constructor:ASR::ObjectConstructorInterface=ASR::InstantiateObjectConstructor.new)-class-method","html_id":"new(object_constructor:ASR::ObjectConstructorInterface=ASR::InstantiateObjectConstructor.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"object_constructor","doc":null,"default_value":"ASR::InstantiateObjectConstructor.new","external_name":"object_constructor","restriction":"ASR::ObjectConstructorInterface"}],"args_string":"(object_constructor : ASR::ObjectConstructorInterface = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">InstantiateObjectConstructor</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"object_constructor","doc":null,"default_value":"ASR::InstantiateObjectConstructor.new","external_name":"object_constructor","restriction":"ASR::ObjectConstructorInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(object_constructor)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"get_deserialization_navigator(visitor:ASR::Visitors::DeserializationVisitorInterface,context:ASR::DeserializationContext):ASR::Navigators::DeserializationNavigatorInterface-instance-method","html_id":"get_deserialization_navigator(visitor:ASR::Visitors::DeserializationVisitorInterface,context:ASR::DeserializationContext):ASR::Navigators::DeserializationNavigatorInterface-instance-method","name":"get_deserialization_navigator","doc":null,"summary":null,"abstract":false,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::DeserializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::DeserializationContext"}],"args_string":"(visitor : ASR::Visitors::DeserializationVisitorInterface, context : ASR::DeserializationContext) : ASR::Navigators::DeserializationNavigatorInterface","source_link":null,"def":{"name":"get_deserialization_navigator","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::DeserializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::DeserializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Navigators::DeserializationNavigatorInterface","visibility":"Public","body":"ASR::Navigators::DeserializationNavigator.new(visitor, context, @object_constructor)"}},{"id":"get_serialization_navigator(visitor:ASR::Visitors::SerializationVisitorInterface,context:ASR::SerializationContext):ASR::Navigators::SerializationNavigatorInterface-instance-method","html_id":"get_serialization_navigator(visitor:ASR::Visitors::SerializationVisitorInterface,context:ASR::SerializationContext):ASR::Navigators::SerializationNavigatorInterface-instance-method","name":"get_serialization_navigator","doc":null,"summary":null,"abstract":false,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::SerializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(visitor : ASR::Visitors::SerializationVisitorInterface, context : ASR::SerializationContext) : ASR::Navigators::SerializationNavigatorInterface","source_link":null,"def":{"name":"get_serialization_navigator","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::SerializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Navigators::SerializationNavigatorInterface","visibility":"Public","body":"ASR::Navigators::SerializationNavigator.new(visitor, context)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Navigators/NavigatorFactoryInterface","path":"Athena/Serializer/Navigators/NavigatorFactoryInterface.html","kind":"module","full_name":"Athena::Serializer::Navigators::NavigatorFactoryInterface","name":"NavigatorFactoryInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/Navigators/NavigatorFactory","kind":"struct","full_name":"Athena::Serializer::Navigators::NavigatorFactory","name":"NavigatorFactory"}],"namespace":{"html_id":"athena/Athena/Serializer/Navigators","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"get_deserialization_navigator(visitor:ASR::Visitors::DeserializationVisitorInterface,context:ASR::DeserializationContext):ASR::Navigators::DeserializationNavigatorInterface-instance-method","html_id":"get_deserialization_navigator(visitor:ASR::Visitors::DeserializationVisitorInterface,context:ASR::DeserializationContext):ASR::Navigators::DeserializationNavigatorInterface-instance-method","name":"get_deserialization_navigator","doc":null,"summary":null,"abstract":true,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::DeserializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::DeserializationContext"}],"args_string":"(visitor : ASR::Visitors::DeserializationVisitorInterface, context : ASR::DeserializationContext) : ASR::Navigators::DeserializationNavigatorInterface","source_link":null,"def":{"name":"get_deserialization_navigator","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::DeserializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::DeserializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Navigators::DeserializationNavigatorInterface","visibility":"Public","body":""}},{"id":"get_serialization_navigator(visitor:ASR::Visitors::SerializationVisitorInterface,context:ASR::SerializationContext):ASR::Navigators::SerializationNavigatorInterface-instance-method","html_id":"get_serialization_navigator(visitor:ASR::Visitors::SerializationVisitorInterface,context:ASR::SerializationContext):ASR::Navigators::SerializationNavigatorInterface-instance-method","name":"get_serialization_navigator","doc":null,"summary":null,"abstract":true,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::SerializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(visitor : ASR::Visitors::SerializationVisitorInterface, context : ASR::SerializationContext) : ASR::Navigators::SerializationNavigatorInterface","source_link":null,"def":{"name":"get_serialization_navigator","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::SerializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Navigators::SerializationNavigatorInterface","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Navigators/SerializationNavigator","path":"Athena/Serializer/Navigators/SerializationNavigator.html","kind":"struct","full_name":"Athena::Serializer::Navigators::SerializationNavigator","name":"SerializationNavigator","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/Navigators/SerializationNavigatorInterface","kind":"module","full_name":"Athena::Serializer::Navigators::SerializationNavigatorInterface","name":"SerializationNavigatorInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/Navigators/SerializationNavigatorInterface","kind":"module","full_name":"Athena::Serializer::Navigators::SerializationNavigatorInterface","name":"SerializationNavigatorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Navigators","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(visitor:ASR::Visitors::SerializationVisitorInterface,context:ASR::SerializationContext)-class-method","html_id":"new(visitor:ASR::Visitors::SerializationVisitorInterface,context:ASR::SerializationContext)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::SerializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(visitor : ASR::Visitors::SerializationVisitorInterface, context : ASR::SerializationContext)","source_link":null,"def":{"name":"new","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"ASR::Visitors::SerializationVisitorInterface"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(visitor, context)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"accept(data:ASR::Model):Nil-instance-method","html_id":"accept(data:ASR::Model):Nil-instance-method","name":"accept","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"args_string":"(data : ASR::Model) : Nil","source_link":null,"def":{"name":"accept","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"data.run_preserialize\nproperties = data.serialization_properties\nif strategy = @context.exclusion_strategy\n  properties.reject! do |property|\n    strategy.skip_property?(property, @context)\n  end\nend\nproperties.reject! do |property|\n  val = property.value\n  skip_when_empty = (property.skip_when_empty? && (val.responds_to?(:\"empty?\"))) && val.empty?\n  skip_nil = (!@context.emit_nil?) && val.nil?\n  skip_when_empty || skip_nil\nend\n@visitor.visit(properties)\ndata.run_postserialize\n"}},{"id":"accept(data:_):Nil-instance-method","html_id":"accept(data:_):Nil-instance-method","name":"accept","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"args_string":"(data : _) : Nil","source_link":null,"def":{"name":"accept","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@visitor.visit(data)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Navigators/SerializationNavigatorInterface","path":"Athena/Serializer/Navigators/SerializationNavigatorInterface.html","kind":"module","full_name":"Athena::Serializer::Navigators::SerializationNavigatorInterface","name":"SerializationNavigatorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/Navigators/SerializationNavigator","kind":"struct","full_name":"Athena::Serializer::Navigators::SerializationNavigator","name":"SerializationNavigator"}],"namespace":{"html_id":"athena/Athena/Serializer/Navigators","kind":"module","full_name":"Athena::Serializer::Navigators","name":"Navigators"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"accept(data:ASR::Model):Nil-instance-method","html_id":"accept(data:ASR::Model):Nil-instance-method","name":"accept","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"args_string":"(data : ASR::Model) : Nil","source_link":null,"def":{"name":"accept","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"accept(data:_):Nil-instance-method","html_id":"accept(data:_):Nil-instance-method","name":"accept","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"args_string":"(data : _) : Nil","source_link":null,"def":{"name":"accept","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]}]},{"html_id":"athena/Athena/Serializer/ObjectConstructorInterface","path":"Athena/Serializer/ObjectConstructorInterface.html","kind":"module","full_name":"Athena::Serializer::ObjectConstructorInterface","name":"ObjectConstructorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/InstantiateObjectConstructor","kind":"struct","full_name":"Athena::Serializer::InstantiateObjectConstructor","name":"InstantiateObjectConstructor"}],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Determines how a new object is constructed during deserialization.\n\nBy default it is directly instantiated via `.new` as part of `ASR::InstantiateObjectConstructor`.\n\nHowever custom constructors can be defined.  A use case could be retrieving the object from the database as part of a `PUT` request in order\nto apply the deserialized data onto it.  This would allow it to retain the PK, any timestamps, or `ASRA::ReadOnly` values.","summary":"<p>Determines how a new object is constructed during deserialization.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"construct(navigator:ASR::Navigators::DeserializationNavigatorInterface,properties:Array(PropertyMetadataBase),data:ASR::Any,type)-instance-method","html_id":"construct(navigator:ASR::Navigators::DeserializationNavigatorInterface,properties:Array(PropertyMetadataBase),data:ASR::Any,type)-instance-method","name":"construct","doc":"Creates an instance of *type* and applies the provided *properties* onto it, with the provided *data*.","summary":"<p>Creates an instance of <em>type</em> and applies the provided <em>properties</em> onto it, with the provided <em>data</em>.</p>","abstract":true,"args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"ASR::Navigators::DeserializationNavigatorInterface"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"args_string":"(navigator : ASR::Navigators::DeserializationNavigatorInterface, properties : Array(PropertyMetadataBase), data : ASR::Any, type)","source_link":null,"def":{"name":"construct","args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"ASR::Navigators::DeserializationNavigatorInterface"},{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/PropertyMetadata","path":"Athena/Serializer/PropertyMetadata.html","kind":"struct","full_name":"Athena::Serializer::PropertyMetadata(IvarType, ValueType, ClassType)","name":"PropertyMetadata","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/PropertyMetadataBase","kind":"module","full_name":"Athena::Serializer::PropertyMetadataBase","name":"PropertyMetadataBase"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/PropertyMetadataBase","kind":"module","full_name":"Athena::Serializer::PropertyMetadataBase","name":"PropertyMetadataBase"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Stores metadata related to a specific property.\n\nThis includes its name (internal and external), value, versions/groups, and any aliases.","summary":"<p>Stores metadata related to a specific property.</p>","class_methods":[],"constructors":[{"id":"new(name:String,external_name:String,value:ValueType=nil,skip_when_empty:Bool=false,groups:Array(String)=[&quot;default&quot;],aliases:Array(String)=[]ofString,since_version:SemanticVersion?=nil,until_version:SemanticVersion?=nil,type:IvarType.class=IvarType,class__arg0:ClassType.class=ClassType)-class-method","html_id":"new(name:String,external_name:String,value:ValueType=nil,skip_when_empty:Bool=false,groups:Array(String)=[&quot;default&quot;],aliases:Array(String)=[]ofString,since_version:SemanticVersion?=nil,until_version:SemanticVersion?=nil,type:IvarType.class=IvarType,class__arg0:ClassType.class=ClassType)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"external_name","doc":null,"default_value":"","external_name":"external_name","restriction":"String"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"ValueType"},{"name":"skip_when_empty","doc":null,"default_value":"false","external_name":"skip_when_empty","restriction":"Bool"},{"name":"groups","doc":null,"default_value":"[\"default\"]","external_name":"groups","restriction":"Array(String)"},{"name":"aliases","doc":null,"default_value":"[] of String","external_name":"aliases","restriction":"Array(String)"},{"name":"since_version","doc":null,"default_value":"nil","external_name":"since_version","restriction":"SemanticVersion | ::Nil"},{"name":"until_version","doc":null,"default_value":"nil","external_name":"until_version","restriction":"SemanticVersion | ::Nil"},{"name":"type","doc":null,"default_value":"IvarType","external_name":"type","restriction":"IvarType.class"},{"name":"__arg0","doc":null,"default_value":"ClassType","external_name":"class","restriction":"ClassType.class"}],"args_string":"(name : String, external_name : String, value : ValueType = <span class=\"n\">nil</span>, skip_when_empty : Bool = <span class=\"n\">false</span>, groups : Array(String) = [<span class=\"s\">&quot;default&quot;</span>], aliases : Array(String) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">String</span>, since_version : SemanticVersion? = <span class=\"n\">nil</span>, until_version : SemanticVersion? = <span class=\"n\">nil</span>, type : <span class=\"t\">IvarType</span>.<span class=\"k\">class</span> = <span class=\"t\">IvarType</span>, class __arg0 : <span class=\"t\">ClassType</span>.<span class=\"k\">class</span> = <span class=\"t\">ClassType</span>)","source_link":null,"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"external_name","doc":null,"default_value":"","external_name":"external_name","restriction":"String"},{"name":"value","doc":null,"default_value":"nil","external_name":"value","restriction":"ValueType"},{"name":"skip_when_empty","doc":null,"default_value":"false","external_name":"skip_when_empty","restriction":"Bool"},{"name":"groups","doc":null,"default_value":"[\"default\"]","external_name":"groups","restriction":"Array(String)"},{"name":"aliases","doc":null,"default_value":"[] of String","external_name":"aliases","restriction":"Array(String)"},{"name":"since_version","doc":null,"default_value":"nil","external_name":"since_version","restriction":"SemanticVersion | ::Nil"},{"name":"until_version","doc":null,"default_value":"nil","external_name":"until_version","restriction":"SemanticVersion | ::Nil"},{"name":"type","doc":null,"default_value":"IvarType","external_name":"type","restriction":"IvarType.class"},{"name":"__arg0","doc":null,"default_value":"ClassType","external_name":"class","restriction":"ClassType.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = PropertyMetadata(IvarType, ValueType, ClassType).allocate\n_.initialize(name, external_name, value, skip_when_empty, groups, aliases, since_version, until_version, type, __arg0)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"aliases:Array(String)-instance-method","html_id":"aliases:Array(String)-instance-method","name":"aliases","doc":"Deserialize this property from the property's name or any name in *aliases*.\n\nSee `ASRA::Name`.","summary":"<p>Deserialize this property from the property's name or any name in <em>aliases</em>.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"aliases","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@aliases"}},{"id":"class:ClassType.class-instance-method","html_id":"class:ClassType.class-instance-method","name":"class","doc":"The class that the property is part of.","summary":"<p>The class that the property is part of.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">ClassType</span>.<span class=\"k\">class</span>","source_link":null,"def":{"name":"class","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ClassType.class","visibility":"Public","body":"@class"}},{"id":"external_name:String-instance-method","html_id":"external_name:String-instance-method","name":"external_name","doc":"The name that should be used for serialization/deserialization.","summary":"<p>The name that should be used for serialization/deserialization.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"external_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@external_name"}},{"id":"groups:Array(String)-instance-method","html_id":"groups:Array(String)-instance-method","name":"groups","doc":"The serialization groups this property belongs to.\n\nSee `ASR::ExclusionStrategies::Groups`.","summary":"<p>The serialization groups this property belongs to.</p>","abstract":false,"args":[],"args_string":" : Array(String)","source_link":null,"def":{"name":"groups","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@groups"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":"The name of the property.","summary":"<p>The name of the property.</p>","abstract":false,"args":[],"args_string":" : String","source_link":null,"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"since_version:SemanticVersion?-instance-method","html_id":"since_version:SemanticVersion?-instance-method","name":"since_version","doc":"Represents the first version this property is available.\n\nSee `ASR::ExclusionStrategies::Version`.","summary":"<p>Represents the first version this property is available.</p>","abstract":false,"args":[],"args_string":" : SemanticVersion?","source_link":null,"def":{"name":"since_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"@since_version"}},{"id":"since_version=(since_version:SemanticVersion?)-instance-method","html_id":"since_version=(since_version:SemanticVersion?)-instance-method","name":"since_version=","doc":"Represents the first version this property is available.\n\nSee `ASR::ExclusionStrategies::Version`.","summary":"<p>Represents the first version this property is available.</p>","abstract":false,"args":[{"name":"since_version","doc":null,"default_value":"","external_name":"since_version","restriction":"SemanticVersion | ::Nil"}],"args_string":"(since_version : SemanticVersion?)","source_link":null,"def":{"name":"since_version=","args":[{"name":"since_version","doc":null,"default_value":"","external_name":"since_version","restriction":"SemanticVersion | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@since_version = since_version"}},{"id":"skip_when_empty?:Bool-instance-method","html_id":"skip_when_empty?:Bool-instance-method","name":"skip_when_empty?","doc":"If this property should not be serialized if it is empty.\n\nSee `ASRA::SkipWhenEmpty`.","summary":"<p>If this property should not be serialized if it is empty.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"skip_when_empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@skip_when_empty"}},{"id":"type:IvarType.class-instance-method","html_id":"type:IvarType.class-instance-method","name":"type","doc":"The type of the property.","summary":"<p>The type of the property.</p>","abstract":false,"args":[],"args_string":" : <span class=\"t\">IvarType</span>.<span class=\"k\">class</span>","source_link":null,"def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"IvarType.class","visibility":"Public","body":"@type"}},{"id":"until_version:SemanticVersion?-instance-method","html_id":"until_version:SemanticVersion?-instance-method","name":"until_version","doc":"Represents the last version this property was available.\n\nSee `ASR::ExclusionStrategies::Version`.","summary":"<p>Represents the last version this property was available.</p>","abstract":false,"args":[],"args_string":" : SemanticVersion?","source_link":null,"def":{"name":"until_version","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SemanticVersion | ::Nil","visibility":"Public","body":"@until_version"}},{"id":"until_version=(until_version:SemanticVersion?)-instance-method","html_id":"until_version=(until_version:SemanticVersion?)-instance-method","name":"until_version=","doc":"Represents the last version this property was available.\n\nSee `ASR::ExclusionStrategies::Version`.","summary":"<p>Represents the last version this property was available.</p>","abstract":false,"args":[{"name":"until_version","doc":null,"default_value":"","external_name":"until_version","restriction":"SemanticVersion | ::Nil"}],"args_string":"(until_version : SemanticVersion?)","source_link":null,"def":{"name":"until_version=","args":[{"name":"until_version","doc":null,"default_value":"","external_name":"until_version","restriction":"SemanticVersion | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@until_version = until_version"}},{"id":"value:ValueType-instance-method","html_id":"value:ValueType-instance-method","name":"value","doc":"The value of the property (when serializing).","summary":"<p>The value of the property (when serializing).</p>","abstract":false,"args":[],"args_string":" : ValueType","source_link":null,"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ValueType","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/PropertyMetadataBase","path":"Athena/Serializer/PropertyMetadataBase.html","kind":"module","full_name":"Athena::Serializer::PropertyMetadataBase","name":"PropertyMetadataBase","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/PropertyMetadata","kind":"struct","full_name":"Athena::Serializer::PropertyMetadata(IvarType, ValueType, ClassType)","name":"PropertyMetadata"}],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Parent type of a property metadata just used for typing.\n\nSee `ASR::PropertyMetadata`.","summary":"<p>Parent type of a property metadata just used for typing.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Serializable","path":"Athena/Serializer/Serializable.html","kind":"module","full_name":"Athena::Serializer::Serializable","name":"Serializable","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Adds the necessary methods to a `struct`/`class` to allow for (de)serialization of that type.\n\n```\nrequire \"athena-serializer\"\n\nrecord Example, id : Int32, name : String do\n  include ASR::Serializable\nend\n\nobj = ASR.serializer.deserialize Example, %({\"id\":1,\"name\":\"George\"}), :json\nobj                                 # => Example(@id=1, @name=\"George\")\nASR.serializer.serialize obj, :yaml # =>\n# ---\n# id: 1\n# name: George\n```","summary":"<p>Adds the necessary methods to a <code>struct</code>/<code>class</code> to allow for (de)serialization of that type.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/SerializationContext","path":"Athena/Serializer/SerializationContext.html","kind":"class","full_name":"Athena::Serializer::SerializationContext","name":"SerializationContext","abstract":false,"superclass":{"html_id":"athena/Athena/Serializer/Context","kind":"class","full_name":"Athena::Serializer::Context","name":"Context"},"ancestors":[{"html_id":"athena/Athena/Serializer/Context","kind":"class","full_name":"Athena::Serializer::Context","name":"Context"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"The `ASR::Context` specific to serialization.\n\nAllows specifying if `nil` values should be serialized.","summary":"<p>The <code><a href=\"../../Athena/Serializer/Context.html\">ASR::Context</a></code> specific to serialization.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"emit_nil=(emit_nil:Bool)-instance-method","html_id":"emit_nil=(emit_nil:Bool)-instance-method","name":"emit_nil=","doc":"If `nil` values should be serialized.","summary":"<p>If <code>nil</code> values should be serialized.</p>","abstract":false,"args":[{"name":"emit_nil","doc":null,"default_value":"","external_name":"emit_nil","restriction":"Bool"}],"args_string":"(emit_nil : Bool)","source_link":null,"def":{"name":"emit_nil=","args":[{"name":"emit_nil","doc":null,"default_value":"","external_name":"emit_nil","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@emit_nil = emit_nil"}},{"id":"emit_nil?:Bool-instance-method","html_id":"emit_nil?:Bool-instance-method","name":"emit_nil?","doc":"If `nil` values should be serialized.","summary":"<p>If <code>nil</code> values should be serialized.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":null,"def":{"name":"emit_nil?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@emit_nil"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Serializer","path":"Athena/Serializer/Serializer.html","kind":"struct","full_name":"Athena::Serializer::Serializer","name":"Serializer","abstract":false,"superclass":{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"athena/Athena/Serializer/SerializerInterface","kind":"module","full_name":"Athena::Serializer::SerializerInterface","name":"SerializerInterface"},{"html_id":"athena/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"athena/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/SerializerInterface","kind":"module","full_name":"Athena::Serializer::SerializerInterface","name":"SerializerInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"Default implementation of `ASR::SerializerInterface`.\n\nProvides the main API used to (de)serialize objects.\n\nCustom formats can be implemented by creating the required visitors for that type, then overriding `#get_deserialization_visitor_class` and `#get_serialization_visitor_class`.\n\n```\n# Redefine the visitor class getters in order to first check for custom formats.\n# This assumes these visitor types are defined, with the proper logic to handle\n# the (de)serialization process.\nstruct Athena::Serializer::Serializer\n  protected def get_deserialization_visitor_class(format : ASR::Format | String)\n    return MessagePackDeserializationVisitor if format == \"message_pack\"\n\n    previous_def\n  end\n\n  protected def get_serialization_visitor_class(format : ASR::Format | String)\n    return MessagePackSerializationVisitor if format == \"message_pack\"\n\n    previous_def\n  end\nend\n```","summary":"<p>Default implementation of <code><a href=\"../../Athena/Serializer/SerializerInterface.html\">ASR::SerializerInterface</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(navigator_factory:ASR::Navigators::NavigatorFactoryInterface=ASR::Navigators::NavigatorFactory.new)-class-method","html_id":"new(navigator_factory:ASR::Navigators::NavigatorFactoryInterface=ASR::Navigators::NavigatorFactory.new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"navigator_factory","doc":null,"default_value":"ASR::Navigators::NavigatorFactory.new","external_name":"navigator_factory","restriction":"ASR::Navigators::NavigatorFactoryInterface"}],"args_string":"(navigator_factory : ASR::Navigators::NavigatorFactoryInterface = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">Navigators</span><span class=\"t\">::</span><span class=\"t\">NavigatorFactory</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"new","args":[{"name":"navigator_factory","doc":null,"default_value":"ASR::Navigators::NavigatorFactory.new","external_name":"navigator_factory","restriction":"ASR::Navigators::NavigatorFactoryInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(navigator_factory)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"deserialize(type:_,input_data:String|IO,format:ASR::Format|String,context:ASR::DeserializationContext=ASR::DeserializationContext.new)-instance-method","html_id":"deserialize(type:_,input_data:String|IO,format:ASR::Format|String,context:ASR::DeserializationContext=ASR::DeserializationContext.new)-instance-method","name":"deserialize","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"input_data","doc":null,"default_value":"","external_name":"input_data","restriction":"String | IO"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::DeserializationContext.new","external_name":"context","restriction":"ASR::DeserializationContext"}],"args_string":"(type : _, input_data : String | IO, format : ASR::Format | String, context : ASR::DeserializationContext = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">DeserializationContext</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"deserialize","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"input_data","doc":null,"default_value":"","external_name":"input_data","restriction":"String | IO"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::DeserializationContext.new","external_name":"context","restriction":"ASR::DeserializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"context.init\nvisitor = (self.get_deserialization_visitor_class(format)).new\nnavigator = @navigator_factory.get_deserialization_navigator(visitor, context)\nvisitor.navigator = navigator\nnavigator.accept(type, visitor.prepare(input_data))\n"}},{"id":"serialize(data:_,format:ASR::Format|String,io:IO,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):Nil-instance-method","html_id":"serialize(data:_,format:ASR::Format|String,io:IO,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):Nil-instance-method","name":"serialize","doc":"Serializes the provided *data* into *format* writing it to the provided *io*, optionally with the provided *context*.=","summary":"<p>Serializes the provided <em>data</em> into <em>format</em> writing it to the provided <em>io</em>, optionally with the provided <em>context</em>.=</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(data : _, format : ASR::Format | String, io : IO, context : ASR::SerializationContext = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">SerializationContext</span>.<span class=\"k\">new</span>, **named_args) : Nil","source_link":null,"def":{"name":"serialize","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"context.init\nvisitor = (self.get_serialization_visitor_class(format)).new(io, named_args)\nnavigator = @navigator_factory.get_serialization_navigator(visitor, context)\nvisitor.navigator = navigator\nvisitor.prepare\nnavigator.accept(data)\nvisitor.finish\n"}},{"id":"serialize(data:_,format:ASR::Format|String,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):String-instance-method","html_id":"serialize(data:_,format:ASR::Format|String,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):String-instance-method","name":"serialize","doc":"Serializes the provided *data* into *format*, optionally with the provided *context*.","summary":"<p>Serializes the provided <em>data</em> into <em>format</em>, optionally with the provided <em>context</em>.</p>","abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(data : _, format : ASR::Format | String, context : ASR::SerializationContext = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">SerializationContext</span>.<span class=\"k\">new</span>, **named_args) : String","source_link":null,"def":{"name":"serialize","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"String.build do |str|\n  serialize(data, format, str, context, **named_args)\nend"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/SerializerInterface","path":"Athena/Serializer/SerializerInterface.html","kind":"module","full_name":"Athena::Serializer::SerializerInterface","name":"SerializerInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/Serializer","kind":"struct","full_name":"Athena::Serializer::Serializer","name":"Serializer"}],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":"The main entrypoint of `Athena::Serializer`.","summary":"<p>The main entrypoint of <code><a href=\"../../Athena/Serializer.html\">Athena::Serializer</a></code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"deserialize(type:ASR::Model.class,data:String|IO,format:ASR::Format|String,context:ASR::DeserializationContext=ASR::DeserializationContext.new)-instance-method","html_id":"deserialize(type:ASR::Model.class,data:String|IO,format:ASR::Format|String,context:ASR::DeserializationContext=ASR::DeserializationContext.new)-instance-method","name":"deserialize","doc":"Deserializes the provided *input_data* in the provided *format* into an instance of *type*, optionally with the provided *context*.","summary":"<p>Deserializes the provided <em>input_data</em> in the provided <em>format</em> into an instance of <em>type</em>, optionally with the provided <em>context</em>.</p>","abstract":true,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"ASR::Model.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | IO"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::DeserializationContext.new","external_name":"context","restriction":"ASR::DeserializationContext"}],"args_string":"(type : <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">Model</span>.<span class=\"k\">class</span>, data : String | IO, format : ASR::Format | String, context : ASR::DeserializationContext = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">DeserializationContext</span>.<span class=\"k\">new</span>)","source_link":null,"def":{"name":"deserialize","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"ASR::Model.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | IO"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::DeserializationContext.new","external_name":"context","restriction":"ASR::DeserializationContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"serialize(data:_,format:ASR::Format|String,io:IO,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):Nil-instance-method","html_id":"serialize(data:_,format:ASR::Format|String,io:IO,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):Nil-instance-method","name":"serialize","doc":"Serializes the provided *data* into *format* writing it to the provided *io*, optionally with the provided *context*.=","summary":"<p>Serializes the provided <em>data</em> into <em>format</em> writing it to the provided <em>io</em>, optionally with the provided <em>context</em>.=</p>","abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(data : _, format : ASR::Format | String, io : IO, context : ASR::SerializationContext = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">SerializationContext</span>.<span class=\"k\">new</span>, **named_args) : Nil","source_link":null,"def":{"name":"serialize","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"serialize(data:_,format:ASR::Format|String,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):String-instance-method","html_id":"serialize(data:_,format:ASR::Format|String,context:ASR::SerializationContext=ASR::SerializationContext.new,**named_args):String-instance-method","name":"serialize","doc":"Serializes the provided *data* into *format*, optionally with the provided *context*.","summary":"<p>Serializes the provided <em>data</em> into <em>format</em>, optionally with the provided <em>context</em>.</p>","abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"args_string":"(data : _, format : ASR::Format | String, context : ASR::SerializationContext = <span class=\"t\">ASR</span><span class=\"t\">::</span><span class=\"t\">SerializationContext</span>.<span class=\"k\">new</span>, **named_args) : String","source_link":null,"def":{"name":"serialize","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"},{"name":"format","doc":null,"default_value":"","external_name":"format","restriction":"ASR::Format | String"},{"name":"context","doc":null,"default_value":"ASR::SerializationContext.new","external_name":"context","restriction":"ASR::SerializationContext"}],"double_splat":{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors","path":"Athena/Serializer/Visitors.html","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer","kind":"module","full_name":"Athena::Serializer","name":"Serializer"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitor","path":"Athena/Serializer/Visitors/DeserializationVisitor.html","kind":"class","full_name":"Athena::Serializer::Visitors::DeserializationVisitor","name":"DeserializationVisitor","abstract":true,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::DeserializationVisitorInterface","name":"DeserializationVisitorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::DeserializationVisitorInterface","name":"DeserializationVisitorInterface"}],"extended_modules":[],"subclasses":[{"html_id":"athena/Athena/Serializer/Visitors/JSONDeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::JSONDeserializationVisitor","name":"JSONDeserializationVisitor"},{"html_id":"athena/Athena/Serializer/Visitors/YAMLDeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::YAMLDeserializationVisitor","name":"YAMLDeserializationVisitor"}],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":"Implement deserialization logic based on `ASR::Any` common to all formats.","summary":"<p>Implement deserialization logic based on <code><a href=\"../../../Athena/Serializer/Any.html\">ASR::Any</a></code> common to all formats.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"navigator:Athena::Serializer::Navigators::DeserializationNavigatorInterface-instance-method","html_id":"navigator:Athena::Serializer::Navigators::DeserializationNavigatorInterface-instance-method","name":"navigator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Athena::Serializer::Navigators::DeserializationNavigatorInterface","source_link":null,"def":{"name":"navigator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Serializer::Navigators::DeserializationNavigatorInterface","visibility":"Public","body":"if (value = @navigator).nil?\n  ::raise(NilAssertionError.new(\"Athena::Serializer::Visitors::DeserializationVisitor#navigator cannot be nil\"))\nelse\n  value\nend"}},{"id":"navigator=(navigator:Athena::Serializer::Navigators::DeserializationNavigatorInterface)-instance-method","html_id":"navigator=(navigator:Athena::Serializer::Navigators::DeserializationNavigatorInterface)-instance-method","name":"navigator=","doc":null,"summary":null,"abstract":false,"args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"Athena::Serializer::Navigators::DeserializationNavigatorInterface"}],"args_string":"(navigator : Athena::Serializer::Navigators::DeserializationNavigatorInterface)","source_link":null,"def":{"name":"navigator=","args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"Athena::Serializer::Navigators::DeserializationNavigatorInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@navigator = navigator"}},{"id":"navigator?:Athena::Serializer::Navigators::DeserializationNavigatorInterface?-instance-method","html_id":"navigator?:Athena::Serializer::Navigators::DeserializationNavigatorInterface?-instance-method","name":"navigator?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Athena::Serializer::Navigators::DeserializationNavigatorInterface?","source_link":null,"def":{"name":"navigator?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Serializer::Navigators::DeserializationNavigatorInterface | ::Nil","visibility":"Public","body":"@navigator"}},{"id":"visit(type:Nil.class,data:ASR::Any):Nil-instance-method","html_id":"visit(type:Nil.class,data:ASR::Any):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Nil.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(type : <span class=\"t\">Nil</span>.<span class=\"k\">class</span>, data : ASR::Any) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Nil.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(type:_,data:ASR::Any)-instance-method","html_id":"visit(type:_,data:ASR::Any)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(type : _, data : ASR::Any)","source_link":null,"def":{"name":"visit","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type.deserialize(self, data)"}},{"id":"visit(type:_,data:_)-instance-method","html_id":"visit(type:_,data:_)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"args_string":"(type : _, data : _)","source_link":null,"def":{"name":"visit","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"data"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitorInterface","path":"Athena/Serializer/Visitors/DeserializationVisitorInterface.html","kind":"module","full_name":"Athena::Serializer::Visitors::DeserializationVisitorInterface","name":"DeserializationVisitorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::DeserializationVisitor","name":"DeserializationVisitor"}],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"prepare(data:IO|String):ASR::Any-instance-method","html_id":"prepare(data:IO|String):ASR::Any-instance-method","name":"prepare","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"IO | String"}],"args_string":"(data : IO | String) : ASR::Any","source_link":null,"def":{"name":"prepare","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"IO | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Any","visibility":"Public","body":""}},{"id":"visit(type:Nil.class,data:ASR::Any):Nil-instance-method","html_id":"visit(type:Nil.class,data:ASR::Any):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Nil.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(type : <span class=\"t\">Nil</span>.<span class=\"k\">class</span>, data : ASR::Any) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"Nil.class"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(type:_,data:ASR::Any)-instance-method","html_id":"visit(type:_,data:ASR::Any)-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(type : _, data : ASR::Any)","source_link":null,"def":{"name":"visit","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"visit(type:_,data:_)-instance-method","html_id":"visit(type:_,data:_)-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"args_string":"(type : _, data : _)","source_link":null,"def":{"name":"visit","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"_"},{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors/JSONDeserializationVisitor","path":"Athena/Serializer/Visitors/JSONDeserializationVisitor.html","kind":"class","full_name":"Athena::Serializer::Visitors::JSONDeserializationVisitor","name":"JSONDeserializationVisitor","abstract":false,"superclass":{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::DeserializationVisitor","name":"DeserializationVisitor"},"ancestors":[{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::DeserializationVisitor","name":"DeserializationVisitor"},{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::DeserializationVisitorInterface","name":"DeserializationVisitorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"prepare(input:IO|String):ASR::Any-instance-method","html_id":"prepare(input:IO|String):ASR::Any-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO | String"}],"args_string":"(input : IO | String) : ASR::Any","source_link":null,"def":{"name":"prepare","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Any","visibility":"Public","body":"JSON.parse(input)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors/JSONSerializationVisitor","path":"Athena/Serializer/Visitors/JSONSerializationVisitor.html","kind":"class","full_name":"Athena::Serializer::Visitors::JSONSerializationVisitor","name":"JSONSerializationVisitor","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Serializer/Visitors/SerializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::SerializationVisitorInterface","name":"SerializationVisitorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/Visitors/SerializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::SerializationVisitorInterface","name":"SerializationVisitorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(io:IO,named_args:NamedTuple)-class-method","html_id":"new(io:IO,named_args:NamedTuple)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":"NamedTuple"}],"args_string":"(io : IO, named_args : NamedTuple)","source_link":null,"def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io, named_args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finish:Nil-instance-method","html_id":"finish:Nil-instance-method","name":"finish","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Nil","source_link":null,"def":{"name":"finish","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.end_document"}},{"id":"navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface-instance-method","html_id":"navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface-instance-method","name":"navigator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Athena::Serializer::Navigators::SerializationNavigatorInterface","source_link":null,"def":{"name":"navigator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Serializer::Navigators::SerializationNavigatorInterface","visibility":"Public","body":"if (value = @navigator).nil?\n  ::raise(NilAssertionError.new(\"Athena::Serializer::Visitors::JSONSerializationVisitor#navigator cannot be nil\"))\nelse\n  value\nend"}},{"id":"navigator=(navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface)-instance-method","html_id":"navigator=(navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface)-instance-method","name":"navigator=","doc":null,"summary":null,"abstract":false,"args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"Athena::Serializer::Navigators::SerializationNavigatorInterface"}],"args_string":"(navigator : Athena::Serializer::Navigators::SerializationNavigatorInterface)","source_link":null,"def":{"name":"navigator=","args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"Athena::Serializer::Navigators::SerializationNavigatorInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@navigator = navigator"}},{"id":"navigator?:Athena::Serializer::Navigators::SerializationNavigatorInterface?-instance-method","html_id":"navigator?:Athena::Serializer::Navigators::SerializationNavigatorInterface?-instance-method","name":"navigator?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Athena::Serializer::Navigators::SerializationNavigatorInterface?","source_link":null,"def":{"name":"navigator?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Serializer::Navigators::SerializationNavigatorInterface | ::Nil","visibility":"Public","body":"@navigator"}},{"id":"prepare:Nil-instance-method","html_id":"prepare:Nil-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Nil","source_link":null,"def":{"name":"prepare","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.start_document"}},{"id":"visit(data:ASR::Any):Nil-instance-method","html_id":"visit(data:ASR::Any):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(data : ASR::Any) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.raw)"}},{"id":"visit(data:ASR::Model):Nil-instance-method","html_id":"visit(data:ASR::Model):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"args_string":"(data : ASR::Model) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"navigator.accept(data)"}},{"id":"visit(data:UUID):Nil-instance-method","html_id":"visit(data:UUID):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UUID"}],"args_string":"(data : UUID) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UUID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.to_s)"}},{"id":"visit(data:Enum):Nil-instance-method","html_id":"visit(data:Enum):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enum"}],"args_string":"(data : Enum) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enum"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.value)"}},{"id":"visit(data:Time):Nil-instance-method","html_id":"visit(data:Time):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Time"}],"args_string":"(data : Time) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.to_rfc3339)"}},{"id":"visit(data:Enumerable):Nil-instance-method","html_id":"visit(data:Enumerable):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"args_string":"(data : Enumerable) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.array do\n  data.each do |v|\n    visit(v)\n  end\nend"}},{"id":"visit(data:Hash|NamedTuple):Nil-instance-method","html_id":"visit(data:Hash|NamedTuple):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(data : Hash | NamedTuple) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.object do\n  data.each do |key, value|\n    @builder.field(key.to_s) do\n      visit(value)\n    end\n  end\nend"}},{"id":"visit(data:Bool):Nil-instance-method","html_id":"visit(data:Bool):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bool"}],"args_string":"(data : Bool) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.bool(data)"}},{"id":"visit(data:Number):Nil-instance-method","html_id":"visit(data:Number):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Number"}],"args_string":"(data : Number) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.number(data)"}},{"id":"visit(data:String|Symbol):Nil-instance-method","html_id":"visit(data:String|Symbol):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | Symbol"}],"args_string":"(data : String | Symbol) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.string(data)"}},{"id":"visit(data:Nil):Nil-instance-method","html_id":"visit(data:Nil):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Nil"}],"args_string":"(data : Nil) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.null"}},{"id":"visit(properties:Array(PropertyMetadataBase)):Nil-instance-method","html_id":"visit(properties:Array(PropertyMetadataBase)):Nil-instance-method","name":"visit","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"}],"args_string":"(properties : Array(PropertyMetadataBase)) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.object do\n  properties.each do |prop|\n    @builder.field(prop.external_name) do\n      visit(prop.value)\n    end\n  end\nend"}},{"id":"visit(data:_):Nil-instance-method","html_id":"visit(data:_):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"args_string":"(data : _) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.null"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors/SerializationVisitorInterface","path":"Athena/Serializer/Visitors/SerializationVisitorInterface.html","kind":"module","full_name":"Athena::Serializer::Visitors::SerializationVisitorInterface","name":"SerializationVisitorInterface","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"athena/Athena/Serializer/Visitors/JSONSerializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::JSONSerializationVisitor","name":"JSONSerializationVisitor"},{"html_id":"athena/Athena/Serializer/Visitors/YAMLSerializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::YAMLSerializationVisitor","name":"YAMLSerializationVisitor"}],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"finish:Nil-instance-method","html_id":"finish:Nil-instance-method","name":"finish","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Nil","source_link":null,"def":{"name":"finish","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"prepare:Nil-instance-method","html_id":"prepare:Nil-instance-method","name":"prepare","doc":null,"summary":null,"abstract":true,"args":[],"args_string":" : Nil","source_link":null,"def":{"name":"prepare","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Array(ASR::PropertyMetadataBase)):Nil-instance-method","html_id":"visit(data:Array(ASR::PropertyMetadataBase)):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Array(ASR::PropertyMetadataBase)"}],"args_string":"(data : Array(ASR::PropertyMetadataBase)) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Array(ASR::PropertyMetadataBase)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Bool):Nil-instance-method","html_id":"visit(data:Bool):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bool"}],"args_string":"(data : Bool) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Enum):Nil-instance-method","html_id":"visit(data:Enum):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enum"}],"args_string":"(data : Enum) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enum"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Hash):Nil-instance-method","html_id":"visit(data:Hash):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash"}],"args_string":"(data : Hash) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Enumerable):Nil-instance-method","html_id":"visit(data:Enumerable):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"args_string":"(data : Enumerable) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:NamedTuple):Nil-instance-method","html_id":"visit(data:NamedTuple):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"NamedTuple"}],"args_string":"(data : NamedTuple) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Nil):Nil-instance-method","html_id":"visit(data:Nil):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Nil"}],"args_string":"(data : Nil) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Number):Nil-instance-method","html_id":"visit(data:Number):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Number"}],"args_string":"(data : Number) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:String):Nil-instance-method","html_id":"visit(data:String):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"args_string":"(data : String) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Symbol):Nil-instance-method","html_id":"visit(data:Symbol):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Symbol"}],"args_string":"(data : Symbol) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:Time):Nil-instance-method","html_id":"visit(data:Time):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Time"}],"args_string":"(data : Time) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:UUID):Nil-instance-method","html_id":"visit(data:UUID):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UUID"}],"args_string":"(data : UUID) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UUID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:ASR::Any):Nil-instance-method","html_id":"visit(data:ASR::Any):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(data : ASR::Any) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"visit(data:ASR::Model):Nil-instance-method","html_id":"visit(data:ASR::Model):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"args_string":"(data : ASR::Model) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors/YAMLDeserializationVisitor","path":"Athena/Serializer/Visitors/YAMLDeserializationVisitor.html","kind":"class","full_name":"Athena::Serializer::Visitors::YAMLDeserializationVisitor","name":"YAMLDeserializationVisitor","abstract":false,"superclass":{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::DeserializationVisitor","name":"DeserializationVisitor"},"ancestors":[{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitor","kind":"class","full_name":"Athena::Serializer::Visitors::DeserializationVisitor","name":"DeserializationVisitor"},{"html_id":"athena/Athena/Serializer/Visitors/DeserializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::DeserializationVisitorInterface","name":"DeserializationVisitorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"prepare(input:IO|String):ASR::Any-instance-method","html_id":"prepare(input:IO|String):ASR::Any-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO | String"}],"args_string":"(input : IO | String) : ASR::Any","source_link":null,"def":{"name":"prepare","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"IO | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"ASR::Any","visibility":"Public","body":"YAML.parse(input)"}}],"macros":[],"types":[]},{"html_id":"athena/Athena/Serializer/Visitors/YAMLSerializationVisitor","path":"Athena/Serializer/Visitors/YAMLSerializationVisitor.html","kind":"class","full_name":"Athena::Serializer::Visitors::YAMLSerializationVisitor","name":"YAMLSerializationVisitor","abstract":false,"superclass":{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"athena/Athena/Serializer/Visitors/SerializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::SerializationVisitorInterface","name":"SerializationVisitorInterface"},{"html_id":"athena/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"athena/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"athena","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"athena/Athena/Serializer/Visitors/SerializationVisitorInterface","kind":"module","full_name":"Athena::Serializer::Visitors::SerializationVisitorInterface","name":"SerializationVisitorInterface"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"athena/Athena/Serializer/Visitors","kind":"module","full_name":"Athena::Serializer::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(io:IO,named_args:NamedTuple)-class-method","html_id":"new(io:IO,named_args:NamedTuple)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":"NamedTuple"}],"args_string":"(io : IO, named_args : NamedTuple)","source_link":null,"def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"named_args","doc":null,"default_value":"","external_name":"named_args","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io, named_args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"finish:Nil-instance-method","html_id":"finish:Nil-instance-method","name":"finish","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Nil","source_link":null,"def":{"name":"finish","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.end_document\n@builder.end_stream\n"}},{"id":"navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface-instance-method","html_id":"navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface-instance-method","name":"navigator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Athena::Serializer::Navigators::SerializationNavigatorInterface","source_link":null,"def":{"name":"navigator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Serializer::Navigators::SerializationNavigatorInterface","visibility":"Public","body":"if (value = @navigator).nil?\n  ::raise(NilAssertionError.new(\"Athena::Serializer::Visitors::YAMLSerializationVisitor#navigator cannot be nil\"))\nelse\n  value\nend"}},{"id":"navigator=(navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface)-instance-method","html_id":"navigator=(navigator:Athena::Serializer::Navigators::SerializationNavigatorInterface)-instance-method","name":"navigator=","doc":null,"summary":null,"abstract":false,"args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"Athena::Serializer::Navigators::SerializationNavigatorInterface"}],"args_string":"(navigator : Athena::Serializer::Navigators::SerializationNavigatorInterface)","source_link":null,"def":{"name":"navigator=","args":[{"name":"navigator","doc":null,"default_value":"","external_name":"navigator","restriction":"Athena::Serializer::Navigators::SerializationNavigatorInterface"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@navigator = navigator"}},{"id":"navigator?:Athena::Serializer::Navigators::SerializationNavigatorInterface?-instance-method","html_id":"navigator?:Athena::Serializer::Navigators::SerializationNavigatorInterface?-instance-method","name":"navigator?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Athena::Serializer::Navigators::SerializationNavigatorInterface?","source_link":null,"def":{"name":"navigator?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Athena::Serializer::Navigators::SerializationNavigatorInterface | ::Nil","visibility":"Public","body":"@navigator"}},{"id":"prepare:Nil-instance-method","html_id":"prepare:Nil-instance-method","name":"prepare","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Nil","source_link":null,"def":{"name":"prepare","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.start_stream\n@builder.start_document\n"}},{"id":"visit(properties:Array(PropertyMetadataBase)):Nil-instance-method","html_id":"visit(properties:Array(PropertyMetadataBase)):Nil-instance-method","name":"visit","doc":":inherit:","summary":"<p>:inherit:</p>","abstract":false,"args":[{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"}],"args_string":"(properties : Array(PropertyMetadataBase)) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"properties","doc":null,"default_value":"","external_name":"properties","restriction":"Array(PropertyMetadataBase)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.mapping do\n  properties.each do |prop|\n    @builder.scalar(prop.external_name)\n    visit(prop.value)\n  end\nend"}},{"id":"visit(data:String|Symbol|Number|Bool|Nil):Nil-instance-method","html_id":"visit(data:String|Symbol|Number|Bool|Nil):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | Symbol | Number | Bool | Nil"}],"args_string":"(data : String | Symbol | Number | Bool | Nil) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String | Symbol | Number | Bool | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.scalar(data)"}},{"id":"visit(data:Hash|NamedTuple):Nil-instance-method","html_id":"visit(data:Hash|NamedTuple):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"args_string":"(data : Hash | NamedTuple) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Hash | NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.mapping do\n  data.each do |key, value|\n    @builder.scalar(key)\n    visit(value)\n  end\nend"}},{"id":"visit(data:Enumerable):Nil-instance-method","html_id":"visit(data:Enumerable):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"args_string":"(data : Enumerable) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enumerable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.sequence do\n  data.each do |v|\n    visit(v)\n  end\nend"}},{"id":"visit(data:Time):Nil-instance-method","html_id":"visit(data:Time):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Time"}],"args_string":"(data : Time) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.to_rfc3339)"}},{"id":"visit(data:Enum):Nil-instance-method","html_id":"visit(data:Enum):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enum"}],"args_string":"(data : Enum) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"Enum"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.value)"}},{"id":"visit(data:UUID):Nil-instance-method","html_id":"visit(data:UUID):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UUID"}],"args_string":"(data : UUID) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"UUID"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.to_s)"}},{"id":"visit(data:ASR::Model):Nil-instance-method","html_id":"visit(data:ASR::Model):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"args_string":"(data : ASR::Model) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Model"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"navigator.accept(data)"}},{"id":"visit(data:ASR::Any):Nil-instance-method","html_id":"visit(data:ASR::Any):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"args_string":"(data : ASR::Any) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"ASR::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"visit(data.raw)"}},{"id":"visit(data:_):Nil-instance-method","html_id":"visit(data:_):Nil-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"args_string":"(data : _) : Nil","source_link":null,"def":{"name":"visit","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"_"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@builder.scalar(nil)"}}],"macros":[],"types":[]}]}]}]}]}}